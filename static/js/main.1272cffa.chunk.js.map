{"version":3,"sources":["modules/Settings/components/SettingsButtons.module.css","modules/components/Category.module.css","utils/wasm_exec.js","modules/Settings/components/CheckboxGroup.module.css","api/restApi.js","modules/Home/HomePage.module.css","modules/components/DistTable.module.css","modules/components/InputButtons.module.css","engine/persist.js","modules/Settings/SettingsSchema.js","utils/cards.js","utils/hand.js","modules/Home/HomeSchema.js","modules/War/WarSchema.js","modules/App/AppSchema.js","modules/Menu/MenuTabs.js","modules/App/AppInit.js","engine/index.js","utils/mergeDeep.js","utils/isMobileDevice.js","modules/components/Card.js","modules/App/components/Banner.js","utils/splice.js","calc/card.js","calc/hand.js","calc/handRank.js","calc/hsb.js","calc/basicHandCalculator.js","calc/handCombos.js","calc/sfc32.js","calc/deck.js","calc/handEvaluator.js","calc/lokiHandCalculator.js","api/jsApi.js","api/wasmApi.js","api/workerApi.js","api/poserApi.js","api/poserWorkersApi.js","modules/Home/HomeContainer.js","modules/components/Hand.js","modules/components/Category.js","modules/components/EvalResult.js","modules/components/EvalCatsChart.js","modules/components/EvalCatsTable.js","modules/components/EvalPlayersChart.js","modules/components/EvalPlayersTable.js","modules/components/CombosTable.js","modules/Settings/components/PlayersSetting.js","modules/components/InputButtons.js","modules/components/CardsEntry.js","modules/components/SparseCardsEntry.js","modules/App/components/processZone.js","modules/Home/components/getDistTable.js","modules/components/DistTable.js","modules/Home/components/ActionPaths.js","modules/War/WarContainer.js","modules/Home/HomePage.js","modules/War/GamesDesc.js","modules/components/WarChart.js","modules/War/components/GameSetting.js","modules/War/WarPage.js","modules/Settings/components/ApiType.js","modules/Settings/components/CalcType.js","modules/Settings/SettingsContainer.js","modules/Settings/components/ApiSetting.js","modules/Settings/components/ServerUrlSetting.js","modules/Settings/components/JwtSecretSetting.js","modules/Settings/components/ThreadsOptions.js","modules/Settings/components/ThreadsSetting.js","modules/Settings/components/CalcSetting.js","modules/Settings/components/WorkersOptions.js","modules/Settings/components/WorkersSetting.js","modules/Settings/components/SimsOptions.js","modules/Settings/components/SimsSetting.js","modules/Settings/components/SettingsButtons.js","modules/Settings/components/CheckboxGroup.js","utils/getBrowserName.js","utils/getBrowserFeatures.js","modules/components/BrowserFeatures.js","modules/Settings/SettingsPage.js","modules/Credits/CreditsPage.js","modules/TimeMachine/TimeMachinePage.js","modules/TimeMachine/TimeMachineContainer.js","modules/TimeMachineControls/TimeMachineControls.js","modules/TimeMachineControls/TimeMachineControlsContainer.js","modules/Menu/Menu.js","modules/App/components/Icons.js","modules/App/AppContainer.js","modules/App/AppPage.js","serviceWorker.js","index.js","modules/components/EvalPlayersChart.module.css","modules/components/Card.module.css"],"names":["module","exports","global","window","Error","process","title","outputBuf","fs","constants","O_WRONLY","O_RDWR","O_CREAT","O_TRUNC","O_APPEND","O_EXCL","writeSync","fd","buf","nl","decoder","decode","lastIndexOf","console","log","substr","length","write","offset","position","callback","this","open","path","flags","mode","err","code","read","buffer","fsync","RestApi","secret","username","payload","user","options","algorithm","expiresIn","secretStr","Base64","Buffer","from","Promise","resolve","reject","jwt","sign","token","url","getToken","authToken","fetch","method","headers","response","apiOptions","handStr","calcType","apiType","server","status","statusText","json","nsims","players","toString","threads","villain","hero","n","ranks","game","lastAppId","lastState","newAppId","newState","schema","type","persistent","initValue","apiServer","jwtSecret","nSims","workers","catsChart","catsTable","playersChart","playersTable","combosTable","denseKeyboard","playersButtons","devMode","latency","c_ranks","c_textRanks","c_suits","c_suitColors","c_symbols","circled","code2text","text","c_badClub","c_anyClub","c_badDeuce","rank","suit","Math","floor","text2code","card","c1","charAt","c2","chopHand","hand","arr","trim","toLowerCase","push","substring","List","isValidHand","list","nomore","i","size","c","get","settings","SettingsSchema","actionPath","value","label","tanking","tankingMs","handEval","Map","handEvalPlayers","handResult","handCombos","handArr","props","recipe","handValid","handCardsCnt","getValidCardsCnt","currentSuit","warGames","warResultH","warResultV","warResultN","AppSchema","args","fromJS","location","search","query","result","split","forEach","part","item","decodeURIComponent","getJsonFromUrl","selectedTabIndex","zoneActions","zoneDistTables","home","HomeSchema","war","WarSchema","MenuTabs","AppInit","engine","store","initState","urlArgs","getState","tab","confirm","dispatch","actionFactory","init","persist","history","replaceState","document","setInterval","liveState","persistableState","serializedState","JSON","stringify","localStorage","setItem","isObject","Array","isArray","mergeDeep","target","sources","source","shift","key","Object","assign","createEngine","reducer","repoReducer","createStore","head","persistedState","appId","getItem","parse","loadState","AppName","mergedState","toJS","refresh","makeStore","action","subscribe","state","saveState","isMobileDevice","orientation","navigator","userAgent","indexOf","imd","Card","code0","comp0","style","html","vertical","ball","grey","children","undefined","codeIsNormal","codeIsPlayers","includes","symbol","comp","String","fromCharCode","charCodeAt","icon","c_CARD_SIZE","code2html","code2symbol","color","code2color","cn","css","htmlBall","htmlSquareMobile","htmlSquare","square","click","className","name","alt","onClick","bind","handArr0","render0","Component","fontSize","padding","Banner","background","margin","height","splice","s","idx","rem","str","slice","abs","cardRankStr","cardSuitStr","MakeCard","MakeCardStr","GetCardStr","GetRankStr","GetSuitStr","GetCardRankStr","cardRank","Hand7Null","Hand7Bad","suits","MakeHand7","handRankMasks","handSuitMasks","StringToHand7","mask1","mask2","m","cardStr","bit","SetHand7Card","GetRank","GetSuit","GetHand7Rank","GetHand7Suit","GetHand7Card","GetHand7HoleStr","card1","card2","handRankCatsStr","handRankCategoriesStr","SetCategory","handRank","category","GetCategory","GetCategoryStr","GetCatStr","GetHandCategoryStr","GetHandCatStr","SetCardRank","GetCardRank","HandRankStr","hsb","getSlowHsb","GetHsb16","BasicHandCalculator","rankCnts","suitCnts","suitMasks","calcHandRank","cardsCnt","reset","m1","m2","m3","m4","m2cnt","m3cnt","ms","mf","msi","msc","c4","c3","Hand7Combos","handCalc","CalcHandRank","betterCombos","equalCombos","worseCombos","evalMap","SortedMap","handRes","hole","cat","count","set","mask0","h","hRank","hRes","toIndexedSeq","reverse","toArray","Sfc32","now","Date","a","random","b","d","seed","t","Deck","rng","setMask","next","getMask","MakeHandEvalRequest","board1","board2","board3","board4","board5","MakeHandEvalResult","handEvalRequest","request","finalPlayers","games","wins","ties","pties","losses","wp","wo","er","HandEvalRequestSetHand","evalRequest","HandEvaluator","setTimeout","handCalculator","deck","sleep","mix","removeCard","getNextCard","playerHr","winnerHr","tieHands","hr","LokiHandCalculator","bh","loki","r","straight_size","ident","straight","flush","max_hand","group_size","POKER_HAND","paired","pair_rank0","pair_rank1","straight_high","suit_size","major_suit","getRank","getSuit","str_hi","FIVEKIND","high","present","ID_ExistsStraightFlush","STRAIGHTFLUSH","FOURKIND","ID_KickerValue","FULLHOUSE","FLUSH","kickers","pow","ID_KickerValueSuited","STRAIGHT","THREEKIND","TWOPAIR","PAIR","HIGH","rankHand_loki","hc","CardRankSize","cr0","cr1","cr2","cr3","cr4","hv","not_allowed0","not_allowed1","p","res","x","JsApi","handEvaluator","handErr","holeStr","handCat","handCategory","MakeHandCalculator","combosResult","evalResult","eval","MakeHandEvalResp","handEvals","resp","WasmApi","workerScriptUrl","id","promises","worker","Worker","onmessage","e","data","api","workerReq","postMessage","checkCalcType","_setup","post","MakeErrResp","PoserApi","jsApi","restApi","wasmApi","apiInterface","getApiInterface","HandCalc","HandEval","HandEvalPlayers","WarGames","HandWar","startsWith","RecalcHandEvalResp","AddHandEvalResp","Infinity","pot","poserApi","PoserWorkersApi","poserApis","portion","remain","hStr","index","hStr1","hStr2","endsWith","pi","hStrN","getHandStr","subEngine","af","se","saf","recalcPending","runHand","jstSecret","startTimeMs","handCalcResp","handEvalResult","OrderedMap","handEvalPlayersResp","handEvalResultN","playersN","endTimeMs","recalc","setHand","addCards","cards","origHand","selectionStart","selectionEnd","HomeContainer","connect","repo","ownProps","repoHead","setActionPath","ap","incPlayers","decPlayers","clear","del","newHand","addCard","addRandom","setCurrentSuit","suite","Hand","hand0","map","Cat2Color","Cat2Cn","Category","backgroundColor","EvalResult","isEmpty","parseFloat","toFixed","EvalPlayersChart","getIn","heroWpCats","heroLpCats","villainWpCats","villainLpCats","v","hlp","hwp","her","vlp","vwp","ver","chart","layout","width","stackOffset","top","right","left","bottom","stroke","strokeDasharray","dataKey","unit","yAxisId","stackId","fill","catFmt","field","pf","catTotal","total","EvalCatsTable","EvalCatsChart","colSpan","rowSpan","y","EvalPlayersTable","CombosTable","allCombos","comboItem","prc","cnt","evalHandRank","PlayersSetting","button","dec","inc","InputButtons","running","CardsEntry","SparseCardsEntry","playersStyle","lineHeight","xhand","A","K","Q","J","T","ahand","processZone","zone","keys","actionsPath","actions","act","j","allCnt","profit","fillCards","aaction","cc","aprc","totalCnt","suited","round","processActions","flopzilla","distTable","val0","val1","DistTable","thr","cellStyle","borderWidth","val","styles","table","tr","th","td","cellValue","ActionPaths","handleChange","selectedOption","actionPaths","sort","onChange","getDistTable","chand","dt","dti","HomePage","probTable","setState","sticky","getActionPaths","runWar","villainSt","villainStr","heroSt","heroStr","gDesc","GamesDesc","keySeq","filter","params","k","hero2","heroStr2","warResp","villain2","villainStr2","fetchGames","WarContainer","insert","setGame","setPlayers","setVillain","setHero","setN","setRanks","WarChart","neg","getX","GameSetting","optionsMap","prevProps","prevState","snapshot","option","SliderWT","Slider","createSliderWithTooltip","paramsDef","paramsMap","withMutations","WarPage","heroMap","villainMap","wrH","wrV","wrN","hl","vl","oldVillainMap","oldHeroMap","tds","textAlign","playersMarks","rMarks","ranksMarks","nMarks","desc","gameTitle","gameDesc","ids","fontWeight","min","max","marks","step","dots","included","onSliderPlayersChange","onSliderRanksChange","onSliderHero","onSliderVillain","onSliderNChange","ApiType","CalcType","SettingsContainer","apiTypeLabel","calcTypeLabel","setApiType","setApiServer","setJwtSecret","setCalcType","setSims","setWorkers","setThreads","setCatsChart","checked","setCatsTable","setPlayersChart","setPlayersTable","setCombosTable","setDenseKeyboard","setPlayersButtons","setDevMode","setLatency","ApiSetting","ServerUrlSetting","changeApiServer","event","maxLength","placeholder","JwtSecretSetting","changeJwtSecret","base64Secret","encode","changeShowSecret","showSecret","ThreadsOptions","ThreadsSetting","customStyles","provided","control","singleValue","CalcSetting","WorkersOptions","WorkersSetting","SimsOptions","SimsSetting","SettingsButtons","href","rel","CheckboxGroup","switch","playersChartChange","playersTableChange","catsChartChange","catsTableChange","combosTableChange","denseKeyboardChange","playersButtonsChange","devModeChange","latencyChange","getBrowserName","names","ua","hasAsync","Function","error","BrowserFeatures","browserFeatures","bf","language","platform","abortController","AbortController","webWorker","webAssembly","WebAssembly","isOutdatedBrowser","getBrowserFeatures","SettingsPage","CreditsPage","TimeMachinePage","showRepo","src","TimeMachineContainer","branch","currentBranchState","currentIndex","states","printableState","TimeMachineControls","currentBranch","live","advanced","saveAs","nextProps","preventDefault","switchBranch","saveBranch","resetBranch","removeBranch","goForward","goBack","goLive","doShowRepo","branches","maxIndex","onSubmit","toggleLive","toggleAdvanced","toggleRepo","onChangeBranch","onGoBack","onGoForward","onSaveBranch","disabled","onReset","onRemove","onSliderChange","TimeMachineControlsContainer","steps","setOption","action1","action2","HomeTab","WarTab","SettingsTab","Menu","updateTabIndex","selectedTabClassName","selectedIndex","onSelect","library","add","faWifi","faHeart","farHeart","faHeartbeat","faExclamationTriangle","faThumbsUp","faHome","faTerminal","faChartLine","faTachometerAlt","faInfo","faMicrochip","faTrophy","faPlus","faMinus","faHandPaper","faCheck","faBackspace","faCalculator","faPercent","faSmile","faUser","faUserMinus","faUserPlus","faRandom","faDiceD20","faGamepad","faSyncAlt","faToggleOn","faToggleOff","faTrashAlt","faFilter","faSearch","faSearchMinus","faSearchPlus","faArrowsAltH","faPlay","faStop","faEllipsisH","faRunning","faTh","faGripVertical","faGripHorizontal","faBug","faHistory","faCodeBranch","faGenderless","faTable","faListUl","faBookMedical","faPalette","faCog","faGolfBall","faBowlingBall","faTrashRestore","faCoins","AppPage","then","catch","ex","AppContainer","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","getElementById","URL","origin","addEventListener","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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B,6BACA,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,SAEtB,6BACA,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,SAEtB,6BACA,kBAAC,EAAD,iBAAUgC,EAAV,CAAiBhC,KAAK,QACtB,kBAAC,EAAD,iBAAUgC,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","file":"static/js/main.1272cffa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SettingsButtons_button__2Xh6m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cat\":\"Category_cat__1OQqw\",\"err\":\"Category_err__3OT8i\"};","// Copyright 2018 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nif (typeof global !== \"undefined\") {\n\t// global already exists\n} else if (typeof window !== \"undefined\") {\n\twindow.global = window;\n// } else if (typeof self !== \"undefined\") {\n// \tself.global = self;\n} else {\n\tthrow new Error(\"cannot export Go (neither global, window nor self is defined)\");\n}\n\n// Map web browser API and Node.js API to a single common API (preferring web standards over Node.js API).\nconst isNodeJS = global.process && global.process.title === \"node\";\nif (isNodeJS) {\n\t// global.require = require;\n\t// global.fs = require(\"fs\");\n\n\t// const nodeCrypto = require(\"crypto\");\n\t// global.crypto = {\n\t// \tgetRandomValues(b) {\n\t// \t\tnodeCrypto.randomFillSync(b);\n\t// \t},\n\t// };\n\n\t// global.performance = {\n\t// \tnow() {\n\t// \t\tconst [sec, nsec] = process.hrtime();\n\t// \t\treturn sec * 1000 + nsec / 1000000;\n\t// \t},\n\t// };\n\n\t// const util = require(\"util\");\n\t// global.TextEncoder = util.TextEncoder;\n\t// global.TextDecoder = util.TextDecoder;\n} else {\n\tlet outputBuf = \"\";\n\tglobal.fs = {\n\t\tconstants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 }, // unused\n\t\twriteSync(fd, buf) {\n\t\t\toutputBuf += decoder.decode(buf);\n\t\t\tconst nl = outputBuf.lastIndexOf(\"\\n\");\n\t\t\tif (nl !== -1) {\n\t\t\t\tconsole.log(outputBuf.substr(0, nl));\n\t\t\t\toutputBuf = outputBuf.substr(nl + 1);\n\t\t\t}\n\t\t\treturn buf.length;\n\t\t},\n\t\twrite(fd, buf, offset, length, position, callback) {\n\t\t\tif (offset !== 0 || length !== buf.length || position !== null) {\n\t\t\t\tthrow new Error(\"not implemented\");\n\t\t\t}\n\t\t\tconst n = this.writeSync(fd, buf);\n\t\t\tcallback(null, n);\n\t\t},\n\t\topen(path, flags, mode, callback) {\n\t\t\tconst err = new Error(\"not implemented\");\n\t\t\terr.code = \"ENOSYS\";\n\t\t\tcallback(err);\n\t\t},\n\t\tread(fd, buffer, offset, length, position, callback) {\n\t\t\tconst err = new Error(\"not implemented\");\n\t\t\terr.code = \"ENOSYS\";\n\t\t\tcallback(err);\n\t\t},\n\t\tfsync(fd, callback) {\n\t\t\tcallback(null);\n\t\t},\n\t};\n}\n\nconst fs = global.fs\nlet encoder // = new TextEncoder(\"utf-8\");\nlet decoder // = new TextDecoder(\"utf-8\");\n\nexport class Go {\n\tconstructor() {\n\t\tif(!encoder) {\n\t\t\tencoder = new TextEncoder(\"utf-8\");\n\t\t}\n\t\tif(!decoder) {\n\t\t\tdecoder = new TextDecoder(\"utf-8\");\n\t\t}\n\n\t\tthis.argv = [\"js\"];\n\t\tthis.env = {};\n\t\tthis.exit = (code) => {\n\t\t\tif (code !== 0) {\n\t\t\t\tconsole.warn(\"exit code:\", code);\n\t\t\t}\n\t\t};\n\t\tthis._exitPromise = new Promise((resolve) => {\n\t\t\tthis._resolveExitPromise = resolve;\n\t\t});\n\t\tthis._pendingEvent = null;\n\t\tthis._scheduledTimeouts = new Map();\n\t\tthis._nextCallbackTimeoutID = 1;\n\t\tthis.importObject = this.createImportObject();\n\t}\n\n\tcreateImportObject() {\n\t\tconst mem = () => {\n\t\t\t// The buffer may change when requesting more memory.\n\t\t\treturn new DataView(this._inst.exports.mem.buffer);\n\t\t}\n\t\t\n\t\tconst setInt64 = (addr, v) => {\n\t\t\tmem().setUint32(addr + 0, v, true);\n\t\t\tmem().setUint32(addr + 4, Math.floor(v / 4294967296), true);\n\t\t}\n\t\t\n\t\tconst getInt64 = (addr) => {\n\t\t\tconst low = mem().getUint32(addr + 0, true);\n\t\t\tconst high = mem().getInt32(addr + 4, true);\n\t\t\treturn low + high * 4294967296;\n\t\t}\n\t\t\n\t\tconst loadValue = (addr) => {\n\t\t\tconst f = mem().getFloat64(addr, true);\n\t\t\tif (f === 0) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (!isNaN(f)) {\n\t\t\t\treturn f;\n\t\t\t}\n\t\t\n\t\t\tconst id = mem().getUint32(addr, true);\n\t\t\treturn this._values[id];\n\t\t}\n\t\t\n\t\tconst storeValue = (addr, v) => {\n\t\t\tconst nanHead = 0x7FF80000;\n\t\t\n\t\t\tif (typeof v === \"number\") {\n\t\t\t\tif (isNaN(v)) {\n\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\tmem().setUint32(addr, 0, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (v === 0) {\n\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\tmem().setUint32(addr, 1, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmem().setFloat64(addr, v, true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\n\t\t\tswitch (v) {\n\t\t\t\tcase undefined:\n\t\t\t\t\tmem().setFloat64(addr, 0, true);\n\t\t\t\t\treturn;\n\t\t\t\tcase null:\n\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\tmem().setUint32(addr, 2, true);\n\t\t\t\t\treturn;\n\t\t\t\tcase true:\n\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\tmem().setUint32(addr, 3, true);\n\t\t\t\t\treturn;\n\t\t\t\tcase false:\n\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\tmem().setUint32(addr, 4, true);\n\t\t\t\t\treturn;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\n\t\t\tlet ref = this._refs.get(v);\n\t\t\tif (ref === undefined) {\n\t\t\t\tref = this._values.length;\n\t\t\t\tthis._values.push(v);\n\t\t\t\tthis._refs.set(v, ref);\n\t\t\t}\n\t\t\tlet typeFlag = 0;\n\t\t\tswitch (typeof v) {\n\t\t\t\tcase \"string\":\n\t\t\t\t\ttypeFlag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"symbol\":\n\t\t\t\t\ttypeFlag = 2;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"function\":\n\t\t\t\t\ttypeFlag = 3;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmem().setUint32(addr + 4, nanHead | typeFlag, true);\n\t\t\tmem().setUint32(addr, ref, true);\n\t\t}\n\t\t\n\t\tconst loadSlice = (addr) => {\n\t\t\tconst array = getInt64(addr + 0);\n\t\t\tconst len = getInt64(addr + 8);\n\t\t\treturn new Uint8Array(this._inst.exports.mem.buffer, array, len);\n\t\t}\n\t\t\n\t\tconst loadSliceOfValues = (addr) => {\n\t\t\tconst array = getInt64(addr + 0);\n\t\t\tconst len = getInt64(addr + 8);\n\t\t\tconst a = new Array(len);\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\ta[i] = loadValue(array + i * 8);\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\tconst loadString = (addr) => {\n\t\t\tconst saddr = getInt64(addr + 0);\n\t\t\tconst len = getInt64(addr + 8);\n\t\t\treturn decoder.decode(new DataView(this._inst.exports.mem.buffer, saddr, len));\n\t\t}\n\t\t\n\t\tconst timeOrigin = Date.now() - performance.now();\n\t\t\n\t\tconst goObject = {\n\t\t\t// Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)\n\t\t\t// may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported\n\t\t\t// function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).\n\t\t\t// This changes the SP, thus we have to update the SP used by the imported function.\n\t\t\n\t\t\t// func wasmExit(code int32)\n\t\t\t\"runtime.wasmExit\": (sp) => {\n\t\t\t\tconst code = mem().getInt32(sp + 8, true);\n\t\t\t\tthis.exited = true;\n\t\t\t\tdelete this._inst;\n\t\t\t\tdelete this._values;\n\t\t\t\tdelete this._refs;\n\t\t\t\tthis.exit(code);\n\t\t\t},\n\t\t\n\t\t\t// func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)\n\t\t\t\"runtime.wasmWrite\": (sp) => {\n\t\t\t\tconst fd = getInt64(sp + 8);\n\t\t\t\tconst p = getInt64(sp + 16);\n\t\t\t\tconst n = mem().getInt32(sp + 24, true);\n\t\t\t\tfs.writeSync(fd, new Uint8Array(this._inst.exports.mem.buffer, p, n));\n\t\t\t},\n\t\t\n\t\t\t// func nanotime() int64\n\t\t\t\"runtime.nanotime\": (sp) => {\n\t\t\t\tsetInt64(sp + 8, (timeOrigin + performance.now()) * 1000000);\n\t\t\t},\n\t\t\n\t\t\t// func walltime() (sec int64, nsec int32)\n\t\t\t\"runtime.walltime\": (sp) => {\n\t\t\t\tconst msec = Date.now();\n\t\t\t\tsetInt64(sp + 8, msec / 1000);\n\t\t\t\tmem().setInt32(sp + 16, (msec % 1000) * 1000000, true);\n\t\t\t},\n\t\t\n\t\t\t// func scheduleTimeoutEvent(delay int64) int32\n\t\t\t\"runtime.scheduleTimeoutEvent\": (sp) => {\n\t\t\t\tconst id = this._nextCallbackTimeoutID;\n\t\t\t\tthis._nextCallbackTimeoutID++;\n\t\t\t\tthis._scheduledTimeouts.set(id, setTimeout(\n\t\t\t\t\t() => { this._resume(); },\n\t\t\t\t\tgetInt64(sp + 8) + 1, // setTimeout has been seen to fire up to 1 millisecond early\n\t\t\t\t));\n\t\t\t\tmem().setInt32(sp + 16, id, true);\n\t\t\t},\n\t\t\n\t\t\t// func clearTimeoutEvent(id int32)\n\t\t\t\"runtime.clearTimeoutEvent\": (sp) => {\n\t\t\t\tconst id = mem().getInt32(sp + 8, true);\n\t\t\t\tclearTimeout(this._scheduledTimeouts.get(id));\n\t\t\t\tthis._scheduledTimeouts.delete(id);\n\t\t\t},\n\t\t\n\t\t\t// func getRandomData(r []byte)\n\t\t\t\"runtime.getRandomData\": (sp) => {\n\t\t\t\tcrypto.getRandomValues(loadSlice(sp + 8));\n\t\t\t},\n\t\t\n\t\t\t// func stringVal(value string) ref\n\t\t\t\"syscall/js.stringVal\": (sp) => {\n\t\t\t\tstoreValue(sp + 24, loadString(sp + 8));\n\t\t\t},\n\t\t\n\t\t\t// func valueGet(v ref, p string) ref\n\t\t\t\"syscall/js.valueGet\": (sp) => {\n\t\t\t\tconst obj = loadValue(sp + 8)\n\t\t\t\tconst key = loadString(sp + 16)\n\t\t\t\tconst result = Reflect.get(obj, key);\n\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\tstoreValue(sp + 32, result);\n\t\t\t},\n\t\t\n\t\t\t// func valueSet(v ref, p string, x ref)\n\t\t\t\"syscall/js.valueSet\": (sp) => {\n\t\t\t\tReflect.set(loadValue(sp + 8), loadString(sp + 16), loadValue(sp + 32));\n\t\t\t},\n\t\t\n\t\t\t// func valueIndex(v ref, i int) ref\n\t\t\t\"syscall/js.valueIndex\": (sp) => {\n\t\t\t\tstoreValue(sp + 24, Reflect.get(loadValue(sp + 8), getInt64(sp + 16)));\n\t\t\t},\n\t\t\n\t\t\t// valueSetIndex(v ref, i int, x ref)\n\t\t\t\"syscall/js.valueSetIndex\": (sp) => {\n\t\t\t\tReflect.set(loadValue(sp + 8), getInt64(sp + 16), loadValue(sp + 24));\n\t\t\t},\n\t\t\n\t\t\t// func valueCall(v ref, m string, args []ref) (ref, bool)\n\t\t\t\"syscall/js.valueCall\": (sp) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\tconst m = Reflect.get(v, loadString(sp + 16));\n\t\t\t\t\tconst args = loadSliceOfValues(sp + 32);\n\t\t\t\t\tconst result = Reflect.apply(m, v, args);\n\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\tstoreValue(sp + 56, result);\n\t\t\t\t\tmem().setUint8(sp + 64, 1);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tstoreValue(sp + 56, err);\n\t\t\t\t\tmem().setUint8(sp + 64, 0);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t// func valueInvoke(v ref, args []ref) (ref, bool)\n\t\t\t\"syscall/js.valueInvoke\": (sp) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\tconst result = Reflect.apply(v, undefined, args);\n\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\tmem().setUint8(sp + 48, 1);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\tmem().setUint8(sp + 48, 0);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t// func valueNew(v ref, args []ref) (ref, bool)\n\t\t\t\"syscall/js.valueNew\": (sp) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\tconst result = Reflect.construct(v, args);\n\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\tmem().setUint8(sp + 48, 1);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\tmem().setUint8(sp + 48, 0);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t// func valueLength(v ref) int\n\t\t\t\"syscall/js.valueLength\": (sp) => {\n\t\t\t\tsetInt64(sp + 16, parseInt(loadValue(sp + 8).length));\n\t\t\t},\n\t\t\n\t\t\t// valuePrepareString(v ref) (ref, int)\n\t\t\t\"syscall/js.valuePrepareString\": (sp) => {\n\t\t\t\tconst str = encoder.encode(String(loadValue(sp + 8)));\n\t\t\t\tstoreValue(sp + 16, str);\n\t\t\t\tsetInt64(sp + 24, str.length);\n\t\t\t},\n\t\t\n\t\t\t// valueLoadString(v ref, b []byte)\n\t\t\t\"syscall/js.valueLoadString\": (sp) => {\n\t\t\t\tconst str = loadValue(sp + 8);\n\t\t\t\tloadSlice(sp + 16).set(str);\n\t\t\t},\n\t\t\n\t\t\t// func valueInstanceOf(v ref, t ref) bool\n\t\t\t\"syscall/js.valueInstanceOf\": (sp) => {\n\t\t\t\tmem().setUint8(sp + 24, loadValue(sp + 8) instanceof loadValue(sp + 16));\n\t\t\t},\n\t\t\n\t\t\t\"debug\": (value) => {\n\t\t\t\tconsole.log(value);\n\t\t\t},\n\t\t}\n\t\t\n\t\tconst importObject = {\n\t\t\tgo: goObject\n\t\t};\n\t\t\n\t\treturn importObject\t\t\n\t}\n\n\tasync run(instance) {\n\t\tthis._inst = instance;\n\t\tthis._values = [ // TODO: garbage collection\n\t\t\tNaN,\n\t\t\t0,\n\t\t\tnull,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\tglobal,\n\t\t\tthis._inst.exports.mem,\n\t\t\tthis,\n\t\t];\n\t\tthis._refs = new Map();\n\t\tthis.exited = false;\n\n\t\tconst mem = new DataView(this._inst.exports.mem.buffer)\n\n\t\t// Pass command line arguments and environment variables to WebAssembly by writing them to the linear memory.\n\t\tlet offset = 4096;\n\n\t\tconst strPtr = (str) => {\n\t\t\tlet ptr = offset;\n\t\t\tnew Uint8Array(mem.buffer, offset, str.length + 1).set(encoder.encode(str + \"\\0\"));\n\t\t\toffset += str.length + (8 - (str.length % 8));\n\t\t\treturn ptr;\n\t\t};\n\n\t\tconst argc = this.argv.length;\n\n\t\tconst argvPtrs = [];\n\t\tthis.argv.forEach((arg) => {\n\t\t\targvPtrs.push(strPtr(arg));\n\t\t});\n\n\t\tconst keys = Object.keys(this.env).sort();\n\t\targvPtrs.push(keys.length);\n\t\tkeys.forEach((key) => {\n\t\t\targvPtrs.push(strPtr(`${key}=${this.env[key]}`));\n\t\t});\n\n\t\tconst argv = offset;\n\t\targvPtrs.forEach((ptr) => {\n\t\t\tmem.setUint32(offset, ptr, true);\n\t\t\tmem.setUint32(offset + 4, 0, true);\n\t\t\toffset += 8;\n\t\t});\n\n\t\tthis._inst.exports.run(argc, argv);\n\t\tif (this.exited) {\n\t\t\tthis._resolveExitPromise();\n\t\t}\n\t\tawait this._exitPromise;\n\t}\n\n\t_resume() {\n\t\tif (this.exited) {\n\t\t\tthrow new Error(\"Go program has already exited\");\n\t\t}\n\t\tthis._inst.exports.resume();\n\t\tif (this.exited) {\n\t\t\tthis._resolveExitPromise();\n\t\t}\n\t}\n\n\t_makeFuncWrapper(id) {\n\t\tconst go = this;\n\t\treturn function () {\n\t\t\tconst event = { id: id, this: this, args: arguments };\n\t\t\tgo._pendingEvent = event;\n\t\t\tgo._resume();\n\t\t\treturn event.result;\n\t\t};\n\t}\n\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switch\":\"CheckboxGroup_switch__110xu\",\"right\":\"CheckboxGroup_right__PtWaV\"};","// @flow\n\nimport { Base64 } from 'js-base64'\nimport jwt from 'jsonwebtoken'\n\nimport type { CalcType, PoserApiInterface, ApiOptions, HandCalcResp, HandEvalResp, HandEvalPlayersResp } from \"./poserApi\"\n\nexport class RestApi implements PoserApiInterface {\n\n    secret: string\n\n    constructor(secret: string) {\n        this.secret = secret\n    }\n\n    async getToken(username: string): Promise<string> {\n        const payload = {\n            user: {username}\n        }\n\n        const options = {\n            algorithm: 'HS256',\n            expiresIn: '1h'\n        }\n\n        const secretStr = Base64.decode(this.secret)\n        const secret = Buffer.from(secretStr, 'utf8')\n        return new Promise<string>((resolve, reject) =>\n            jwt.sign(payload, secret, options, (err, token) => {\n                if(err) reject(err)\n                else resolve(token)\n            })\n        )\n    }\n\n    async fetch(url: string): Promise<Response> {\n        const authToken = await this.getToken(\"john\")\n        const response = await fetch(url, {\n            method: 'GET',\n            headers: {\n              'Authorization': 'Bearer ' + authToken\n            }\n        })\n\n        return response\n    }\n\n    async HandCalc(apiOptions: ApiOptions, handStr: string, calcType: CalcType): Promise<HandCalcResp> {\n        if(apiOptions.apiType !== \"rest\") {\n            throw new Error(\"invalid apiType in rest code: \"+apiOptions.apiType)\n        }\n        const url: string = apiOptions.server+'/v1/api/calc/'+handStr+\"?calc=\"+calcType\n        const response = await this.fetch(url)\n        if(response.status !== 200) {\n            throw new Error(response.statusText)\n        }\n        const json = await response.json()\n        return json\n    }\n\t\n    async HandEval(apiOptions: ApiOptions, nsims: number, players: number, handStr: string, calcType: CalcType): Promise<HandEvalResp> {\n        if(apiOptions.apiType !== \"rest\") {\n            throw new Error(\"invalid apiType in rest code: \"+apiOptions.apiType)\n        }\n        const url: string = apiOptions.server+'/v1/api/eval/'+handStr+\"?calc=\"+calcType+\"&nsims=\"+nsims.toString()+\"&players=\"+players.toString()+\"&threads=\"+apiOptions.threads.toString()\n        const response = await this.fetch(url)\n        if(response.status !== 200) {\n            throw new Error(response.statusText)\n        }\n        const json = await response.json()\n        return json\n    }\n\n    async HandEvalPlayers(apiOptions: ApiOptions, nsims: number, handStr: string, calcType: CalcType): Promise<HandEvalPlayersResp> {\n        if(apiOptions.apiType !== \"rest\") {\n            throw new Error(\"invalid apiType in rest code: \"+apiOptions.apiType)\n        }\n        const url: string = apiOptions.server+'/v1/api/eval/'+handStr+\"?calc=\"+calcType+\"&nsims=\"+nsims.toString()+\"&threads=\"+apiOptions.threads.toString()\n        const response = await this.fetch(url)\n        if(response.status !== 200) {\n            throw new Error(response.statusText)\n        }\n        const json = await response.json()\n        return json\n    }\n\n    async WarGames(apiOptions: ApiOptions): Promise<WarGamesResp | ErrResp> {\n        if(apiOptions.apiType !== \"rest\") {\n            throw new Error(\"invalid apiType in rest code: \"+apiOptions.apiType)\n        }\n        const url: string = apiOptions.server+'/v1/api/war/games'\n        const response = await this.fetch(url)\n        if(response.status !== 200) {\n            throw new Error(response.statusText)\n        }\n        const json = await response.json()\n        return json\n    }\n\n    async HandWar(apiOptions: ApiOptions, nsims: number, players: number, villain: string, hero: string, n: number, ranks: number, game: string): Promise<HandEvalResp | ErrResp> {\n        if(apiOptions.apiType !== \"rest\") {\n            throw new Error(\"invalid apiType in rest code: \"+apiOptions.apiType)\n        }\n        const url: string = apiOptions.server+'/v1/api/war/'+game+\"?ranks=\"+ranks+\"&villain=\"+villain+\"&hero=\"+hero+\"&n=\"+n+\"&nsims=\"+nsims.toString()+\"&players=\"+players.toString()+\"&threads=\"+apiOptions.threads.toString()\n        const response = await this.fetch(url)\n        if(response.status !== 200) {\n            throw new Error(response.statusText)\n        }\n        const json = await response.json()\n        return json\n    }\n\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sticky\":\"HomePage_sticky__16BCT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"DistTable_table__1L7KT\",\"tr\":\"DistTable_tr__1DjlE\",\"td\":\"DistTable_td__3-13D\",\"th\":\"DistTable_th__II3oJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"InputButtons_button__2zL__\",\"running\":\"InputButtons_running__1j8FV\"};","import { engine } from '.'\n\nexport const loadState = (appId) => {\n  try {\n    const serializedState = localStorage.getItem(appId);\n    if (serializedState === null) {\n      return undefined;\n    }\n    const parsedState = JSON.parse(serializedState);\n    return parsedState;\n  } catch (err) {\n    return undefined;\n  }\n};\n\nlet lastAppId;\nlet lastState;\nlet newAppId;\nlet newState;\n\nexport const saveState = (appId, state) => {\n    newAppId = appId;\n    newState = state;\n};\n\nconst persistState = () => {\n  try {\n    if(lastAppId === newAppId && lastState === newState) {\n      return;\n    }\n    const liveState = engine.liveState(newState);\n    const persistableState = engine.persistableState(liveState);\n    const serializedState = JSON.stringify(persistableState);\n    localStorage.setItem(newAppId, serializedState);\n    lastAppId = newAppId;\n    lastState = newState;\n  } catch (err) {\n    console.log(\"DUXEN ERROR: persistState: \", err);\n  }\n};\n\nsetInterval(persistState, 1000);\n","import type { Schema } from 'duxen'\n\nconst schema:Schema = {\n  apiType: {\n    type: 'value',\n    persistent: true,\n    initValue: \"wasm\",\n  },\n  apiServer: {\n    type: 'value',\n    persistent: true,\n    initValue: \"http://localhost:7272\",\n  },\n  jwtSecret: {\n    type: 'value',\n    persistent: true,\n    initValue: \"\",\n  },\n  calcType: {\n    type: 'value',\n    persistent: true,\n    initValue: \"basic\",\n  },\n  nSims: {\n    type: 'value',\n    persistent: true,\n    initValue: 10000,\n  },\n  workers: {\n    type: 'value',\n    persistent: true,\n    initValue: 1,\n  },\n  threads: {\n    // Threads are for REST server only\n    type: 'value',\n    persistent: true,\n    initValue: 1,\n  },\n  players: {\n    type: 'value',\n    persistent: true,\n    initValue: 9,\n  },\n  catsChart: {\n    type: 'value',\n    persistent: true,\n    initValue: false,\n  },\n  catsTable: {\n    type: 'value',\n    persistent: true,\n    initValue: true,\n  },\n  playersChart: {\n    type: 'value',\n    persistent: true,\n    initValue: false,\n  },\n  playersTable: {\n    type: 'value',\n    persistent: true,\n    initValue: true,\n  },\n  combosTable: {\n    type: 'value',\n    persistent: true,\n    initValue: true,\n  },\n  denseKeyboard: {\n    type: 'value',\n    persistent: true,\n    initValue: true,\n  },\n  playersButtons: {\n    type: 'value',\n    persistent: true,\n    initValue: false,\n  },\n  devMode: {\n    type: 'value',\n    persistent: true,\n    initValue: false,\n  },\n  latency: {\n    type: 'value',\n    persistent: true,\n    initValue: true,\n  },  \n}\n\nexport default schema\n","import React from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport const c_WILD_CARD = -1\nexport const c_CARD_SIZE = 52\n\nexport const c_CLUBS = 0\nexport const c_HEARTS = 1\nexport const c_SPADES = 2\nexport const c_DIAMONDS = 3\nexport const c_SUIT_SIZE = 4\nexport const c_SUIT_BAD = -1\nexport const c_SUIT_PLAYERS = -2\nexport const c_SUIT_UNKNOWN = 4\n\nexport const c_2 = 0\nexport const c_3 = 1\nexport const c_4 = 2\nexport const c_5 = 3\nexport const c_6 = 4\nexport const c_7 = 5\nexport const c_8 = 6\nexport const c_9 = 7\nexport const c_T = 8\nexport const c_J = 9\nexport const c_Q = 10\nexport const c_K = 11\nexport const c_A = 12\nexport const c_RANK_SIZE = 13\nexport const c_RANK_BAD = -1\nexport const c_RANK_UNKNOWN = -2\n\nexport const c_TWO = 0\nexport const c_DEUCE = 0\nexport const c_THREE = 1\nexport const c_FOUR = 2\nexport const c_FIVE = 3\nexport const c_SIX = 4\nexport const c_SEVEN = 5\nexport const c_EIGHT = 6\nexport const c_NINE = 7\nexport const c_TEN = 8\nexport const c_JACK = 9\nexport const c_QUEEN = 10\nexport const c_KING = 11\nexport const c_ACE = 12\n\nexport const c_ranks = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"T\", \"J\", \"Q\", \"K\", \"A\"]\nexport const c_textRanks = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"]\nexport const c_suits = [\"c\", \"d\", \"h\", \"s\", \"x\"]\nexport const c_suitColors = [\"black\", \"red\", \"red\", \"black\", \"grey\"]\nexport const c_longSuits = [\"Clubs\", \"Diamonds\", \"Hearts\", \"Spades\", \"Unknown\"]\n\nexport const c_symbols = [\n    \"🃒\", \"🃓\", \"🃔\", \"🃕\", \"🃖\", \"🃗\", \"🃘\", \"🃙\", \"🃚\", \"🃛\", \"🃝\", \"🃞\", \"🃑\", \n    \"🃂\", \"🃃\", \"🃄\", \"🃅\", \"🃆\", \"🃇\", \"🃈\", \"🃉\", \"🃊\", \"🃋\", \"🃍\", \"🃎\", \"🃁\", \n    \"🂲\", \"🂳\", \"🂴\", \"🂵\", \"🂶\", \"🂷\", \"🂸\", \"🂹\", \"🂺\", \"🂻\", \"🂽\", \"🂾\", \"🂱\", \n    \"🂢\", \"🂣\", \"🂤\", \"🂥\", \"🂦\", \"🂧\", \"🂨\", \"🂩\", \"🂪\", \"🂫\", \"🂭\", \"🂮\", \"🂡\" ]\n\nexport const circled = [\"⓿\", \"❶\", \"❷\", \"❸\", \"❹\", \"❺\", \"❻\", \"❼\", \"❽\", \"❾\", \"❿\"]\nexport const c_deck = \"🂠\"\nexport const c_joker = \"🃏\"\nexport const c_whiteJoker = \"🃟\"\n\n// Card codes:\n// \n// -19 - wrong rank and suite\nexport const c_badCard = -19\n// -15 - 18 wrong rank, correct suite\nexport const c_badClub = -18\n// -2 - -14 correct rank, wrong suite\nexport const c_badDeuce = -14\n// -1 - unknown card, a wildcard, empty\nexport const c_unknownCard = -1\n// 0-51 - valid cards\n// 52-64 - unknown suit\n// 65 - any club\nexport const c_anyClub = 65\n// 66 - any diamond\n// 67 - any heart\n// 68 - any spade\nexport const c_2p = 69\nexport const c_3p = 70\nexport const c_4p = 71\nexport const c_5p = 72\nexport const c_6p = 73\nexport const c_7p = 74\nexport const c_8p = 75\nexport const c_9p = 76\nexport const c_maxCode = 77\n\nexport const codeIsNormal = (code) => (0 <= code && code < c_CARD_SIZE)\nexport const codeIsPlayers = (code) => (c_2p <= code && code <= c_9p)\n\n// Turns card code into ASCII representation\nexport const code2text = (code) => {\n    let text\n    switch(code) {\n        case c_badCard: {\n            text = \"??\"\n            break;\n        }\n        case c_badClub: {\n            text = \"?c\"\n            break;\n        }\n        case c_badClub+1: {\n            text = \"?d\"\n            break;\n        }\n        case c_badClub+2: {\n            text = \"?h\"\n            break;\n        }\n        case c_badClub+3: {\n            text = \"?s\"\n            break;\n        }\n        case c_unknownCard: {\n            text = \"__\"\n            break;\n        }\n        case c_anyClub: {\n            text = \"Xc\"\n            break;\n        }\n        case c_anyClub+1: {\n            text = \"Xd\"\n            break;\n        }\n        case c_anyClub+2: {\n            text = \"Xh\"\n            break;\n        }\n        case c_anyClub+3: {\n            text = \"Xs\"\n            break;\n        }\n        case c_2p: {\n            text = \"2p\"\n            break;\n        }\n        case c_3p: {\n            text = \"3p\"\n            break;\n        }\n        case c_4p: {\n            text = \"4p\"\n            break;\n        }\n        case c_5p: {\n            text = \"5p\"\n            break;\n        }\n        case c_6p: {\n            text = \"6p\"\n            break;\n        }\n        case c_7p: {\n            text = \"7p\"\n            break;\n        }\n        case c_8p: {\n            text = \"8p\"\n            break;\n        }\n        case c_9p: {\n            text = \"9p\"\n            break;\n        }\n\n        default: {\n            break;\n        }\n    }\n\n    if(!text) {\n        if(c_badDeuce <= code && code < c_badDeuce + c_RANK_SIZE) {\n            const rank = code - c_badDeuce\n            text = c_ranks[rank] + \"?\"\n        } else if(code < 0 || code >= c_anyClub) {\n            text = \"??\"\n        } else {\n            const rank = code % c_RANK_SIZE\n            const suit = Math.floor(code / c_RANK_SIZE)\n\n            text = c_ranks[rank] + c_suits[suit]\n        }\n    }\n\n    return text\n}\n\nexport const code2symbol = (code) => {\n    if(code < 0 || code >= c_symbols[code]) {\n        return c_deck\n    }\n\n    return c_symbols[code]\n}\n\nexport const code2html = (code, vertical) => {\n    let comp\n    switch(code) {\n        case c_badCard: {\n            comp = <>?{vertical?<br/>:null}?</>\n            break;\n        }\n        case c_badClub: {\n            comp = <>?{vertical?<br/>:null}&clubs;</>\n            break;\n        }\n        case c_badClub+1: {\n            comp = <>?{vertical?<br/>:null}&diams;</>\n            break;\n        }\n        case c_badClub+2: {\n            comp = <>?{vertical?<br/>:null}&hearts;</>\n            break;\n        }\n        case c_badClub+3: {\n            comp = <>?{vertical?<br/>:null}&spades;</>\n            break;\n        }\n        case c_unknownCard: {\n            comp = <>_{vertical?<br/>:null}_</>\n            break;\n        }\n        case c_anyClub: {\n            comp = <>{vertical?<br/>:null}&clubs;</>\n            break;\n        }\n        case c_anyClub+1: {\n            comp = <>{vertical?<br/>:null}&diams;</>\n            break;\n        }\n        case c_anyClub+2: {\n            comp = <>{vertical?<br/>:null}&hearts;</>\n            break;\n        }\n        case c_anyClub+3: {\n            comp = <>{vertical?<br/>:null}&spades;</>\n            break;\n        }\n        case c_2p:\n        case c_3p:\n        case c_4p:\n        case c_5p:\n        case c_6p:\n        case c_7p:\n        case c_8p:\n        case c_9p:\n        {\n            comp = <>\n                {vertical?String.fromCharCode('2'.charCodeAt(0)+(code-c_2p)):null}\n                {vertical?<br/>:null}\n                {vertical?<FontAwesomeIcon icon=\"user\"/>: circled[2+code-c_2p]}\n            </>\n            break;\n        }\n        default: {\n            break;\n        }\n    }\n\n    if(comp) {\n        // we are good\n    } else if(0 <= code && code < c_CARD_SIZE + c_RANK_SIZE) {\n\n        const rank = code % c_RANK_SIZE\n        const suit = Math.floor(code / c_RANK_SIZE)\n\n        switch(suit) {\n            case 0:\n                comp = <>{c_textRanks[rank]}{vertical?<br/>:null}&clubs;</>\n                break\n            case 1:\n                comp = <>{c_textRanks[rank]}{vertical?<br/>:null}&diams;</>\n                break\n            case 2:\n                comp = <>{c_textRanks[rank]}{vertical?<br/>:null}&hearts;</>\n                break\n            case 3:\n                comp = <>{c_textRanks[rank]}{vertical?<br/>:null}&spades;</>\n                break\n            case 4:\n                comp = <>{c_textRanks[rank]}{vertical?<br/>:null}x</>\n                break\n            default:\n                // Should not be here\n                break\n        }\n    } else if(c_badDeuce <= code && code < c_badDeuce + c_RANK_SIZE) {\n        const rank = code - c_badDeuce\n        comp = <>{c_textRanks[rank]}{vertical?<br/>:null}?</>\n    } else {\n        comp = <>?{vertical?<br/>:null}?</>       \n    }\n    return comp\n}\n\nexport const code2color = (code) => {\n    let color\n\n    if(code < 0 || code >= c_maxCode) {\n        color = \"grey\"\n    } else if(code < c_CARD_SIZE + c_RANK_SIZE) {\n        const suit = Math.floor(code / c_RANK_SIZE)\n        color = c_suitColors[suit]\n    } else if(c_anyClub <= code && code <= c_anyClub+3) {\n        const suit = code - c_anyClub\n        color = c_suitColors[suit]\n    } else if(c_2p <= code && code <= c_9p) {\n        color = \"blue\"\n    } else if(code < c_maxCode) {\n        color = \"grey\"\n    } else {\n        // should not get here\n    }\n\n    return color\n}\n\nexport const text2code = (card) => {\n    if(card.length !== 2) {\n        return -1\n    }\n\n    const c1 = card.charAt(0)\n    const c2 = card.charAt(1)\n\n    let rank\n    switch(c1) {\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n            rank = c1 - '2'\n            break\n        case 't':\n        case 'T':\n            rank = 8\n            break;\n        case 'j':\n        case 'J':\n            rank = 9\n            break;\n        case 'q':\n        case 'Q':\n            rank = 10\n            break;\n        case 'k':\n        case 'K':\n            rank = 11\n            break;\n        case 'a':\n        case 'A':\n            rank = 12\n            break;\n        case '_':\n        case '*':\n        case 'x':\n        case 'X':\n            rank = c_RANK_UNKNOWN;\n            break;\n        default:\n            rank = c_RANK_BAD\n            break\n    }\n\n    let suit\n    switch(c2) {\n        case 'c':\n        case 'C':\n            suit = 0\n            break\n        case 'd':\n        case 'D':\n            suit = 1\n            break\n        case 'h':\n        case 'H':\n            suit = 2\n            break\n        case 's':\n        case 'S':\n            suit = 3\n            break\n        case '_':\n        case '*':\n        case 'x':\n        case 'X':\n            suit = c_SUIT_UNKNOWN\n            break\n        case 'p':\n        case 'P':\n            suit = c_SUIT_PLAYERS\n            break;\n        default:\n            suit = c_SUIT_BAD\n            break\n    }\n\n    let code \n    if(rank >= 0 && suit >= 0) {\n        code = suit * c_RANK_SIZE + rank\n    } else if(suit === c_SUIT_PLAYERS) {\n        if(c_2 <= rank && rank <= c_9) {\n            code = c_2p + rank\n        } else {\n            code = c_badCard\n        }\n    } else if(rank < 0 && 0 <= suit && suit < 4) {\n        if(rank === c_RANK_UNKNOWN) {\n            code = c_anyClub + suit\n        } else {\n            code = c_badClub + suit\n        }\n    } else if(rank === c_RANK_UNKNOWN && suit === c_SUIT_UNKNOWN) {\n        code = c_unknownCard\n    } else if(rank >= 0 && suit < 0) {\n        code = c_badDeuce + rank\n    } else {\n        code = c_badCard\n    }\n\n    return code\n}\n","import { text2code, c_2p, c_9p } from './cards'\n\nimport { List } from 'immutable-sorted'\n\nexport const chopHand = (hand, n) => {\n    const arr = []\n    hand = hand.trim().toLowerCase()\n    while(hand.length > 0) {\n      if(hand.length === 1) {\n          hand = hand + \"_\"\n      }\n      const code = text2code(hand.substr(0, 2))\n      arr.push(code)\n      hand = hand.substring(2)\n\n      hand = hand.trim()\n    }\n    while(arr.length < n) {\n      arr.push(-1)\n    }\n    return List(arr)\n}\n\nexport const getValidCardsCnt = (list) => {\n    let n = 0\n\n    for(let i = 0; i < list.size; i++) {\n        const c = list.get(i)\n        if(0 <= c && c < 52) {\n            n++\n        }\n    }\n    return n\n}\n\nexport const isValidHand = (list) => {\n    let nomore = false\n    let n = 0\n\n    for(let i = 0; i < list.size; i++) {\n        const c = list.get(i)\n        if(0 <= c && c < 52) {\n            n++\n            if(nomore) {\n                return false\n            }\n        } else if(c_2p <= c && c <= c_9p) {\n        } else if(c === -1) {\n            nomore = true\n        } else {\n            return false\n        }\n    }\n    return n > 0\n}\n","import type { Schema } from 'duxen'\n\nimport SettingsSchema from '../Settings/SettingsSchema'\n\nimport { chopHand, isValidHand, getValidCardsCnt } from '../../utils/hand'\n\nimport { Map, List } from 'immutable-sorted'\n\n// const cmp=(a,b)=>(a>b?1:(a<b?-1:0))\nconst schema:Schema = {\n\n  settings: {\n    type: 'schema',\n    schema: SettingsSchema,\n  },\n\n  actionPath: {\n    type: 'value',\n    persistent: false,\n    initValue: {value: \"BB\", label: \"BB\"},\n  },\n\n  tanking: {\n    type: 'value',\n    persistent: false,\n    initValue: false,\n  },\n\n  tankingMs: {\n    type: 'value',\n    persistent: false,\n    initValue: 0,\n  },\n\n  hand: {\n      type: 'value',\n      persistent: true,\n      initValue: \"______________\",\n  },\n\n  handEval: {\n      type: 'value',\n      persistent: false,\n      initValue: Map(),\n  },\n\n  handEvalPlayers: {\n    type: 'value',\n    persistent: false,\n    initValue: Map(),\n  },\n\n  handResult: {\n    type: 'value',\n    persistent: false,\n    initValue: Map(),\n  },\n\n  handCombos: {\n    type: 'value',\n    persistent: false,\n    initValue: Map(),\n  },\n\n  handArr: {\n    type:'formula',\n    props: ['hand'],\n    recipe: (props) => List(chopHand(props.hand, 7)),\n  },\n\n  handValid: {\n    type:'formula',\n    props: ['handArr'],\n    recipe: (props) => isValidHand(props.handArr),\n  },\n\n  handCardsCnt: {\n    type:'formula',\n    props: ['handArr'],\n    recipe: (props) => getValidCardsCnt(props.handArr),\n  },\n\n  err: {\n    type: 'value',\n    persistent: false,\n    initValue: \"\",\n  },\n\n  currentSuit: {\n    type: 'value',\n    persistent: true,\n    initValue: \"s\",\n  },\n\n}\n\nexport default schema\n","import type { Schema } from 'duxen'\n\nimport { Map, List } from 'immutable-sorted'\n\nconst schema:Schema = {\n\n  tanking: {\n    type: 'value',\n    persistent: false,\n    initValue: false,\n  },\n\n  tankingMs: {\n    type: 'value',\n    persistent: false,\n    initValue: 0,\n  },\n\n  villain: {\n    type: 'collection',\n    persistent: true,\n  },\n\n  hero: {\n    type: 'collection',\n    persistent: true,\n  },\n\n  n: {\n    type: 'value',\n    persistent: true,\n    initValue: 0,\n  },\n\n  ranks: {\n    type: 'value',\n    persistent: true,\n    initValue: 13,\n  },\n\n  game: {\n    type: 'value',\n    persistent: true,\n    initValue: \"\",\n  },\n\n  warGames: {\n    type: 'value',\n    persistent: false,\n    initValue: List(),\n  },\n\n  warResultH: {\n    type: 'value',\n    persistent: false,\n    initValue: Map(),\n  },\n\n  warResultV: {\n    type: 'value',\n    persistent: false,\n    initValue: Map(),\n  },\n\n  warResultN: {\n    type: 'value',\n    persistent: false,\n    initValue: Map(),\n  },\n\n  err: {\n    type: 'value',\n    persistent: false,\n    initValue: \"\",\n  },\n\n}\n\nexport default schema\n","import type { Schema } from 'duxen'\nimport { fromJS } from 'immutable-sorted'\n\nimport HomeSchema from '../Home/HomeSchema'\nimport WarSchema from '../War/WarSchema'\n\nexport const AppName = \"poserjs\";\nexport const AppVersion = \"0.0.4\";\n\nconst getJsonFromUrl = (url) => {\n  // eslint-disable-next-line no-restricted-globals\n  if(!url) url = location.search\n  var query = url.substr(1)\n  var result = {}\n  query && query.split(\"&\").forEach(function(part) {\n    var item = part.split(\"=\")\n    result[item[0]] = decodeURIComponent(item[1])\n  })\n  return result\n}\n\nexport const AppSchema: Schema = {\n\n  args: {\n    type: 'value',\n    persistent: false,\n    initValue: fromJS(getJsonFromUrl()),\n  },\n\n  selectedTabIndex: {\n    type: 'value',\n    persistent: true,\n    initValue: 0,\n  },\n\n  zoneActions: {\n    type: 'value',\n    persistent: false,\n    initValue: {},\n  },\n\n  zoneDistTables: {\n    type: 'value',\n    persistent: false,\n    initValue: {},\n  },\n\n  home: {\n    type: 'schema',\n    schema: HomeSchema,\n  },\n\n  war: {\n    type: 'schema',\n    schema: WarSchema,\n  },\n\n}\n\nexport default AppSchema\n","\nconst MenuTabs = [\"home\", \"zone\", \"war\", /* \"sim\", */ \"settings\", \"credits\", \"debug\"]\n\nexport default MenuTabs\n","import { actionFactory, getState, dispatch, persist } from '../../engine'\nimport MenuTabs from '../Menu/MenuTabs'\n\n// This function is called after Duxen creates an engine,\n// creates and initial state (restores the saved state)\nconst AppInit = (engine, store, initState) => {\n  const state = getState()\n  const urlArgs = state.get(\"args\")\n  const tab = urlArgs.get(\"tab\")\n  const reset = urlArgs.get(\"reset\")\n\n  if(reset === \"true\") {\n    if(window.confirm(\"This will clear all PoserJS saved data. Are you sure?\")) {\n      dispatch(actionFactory.init(initState))\n      persist()\n    }\n    window.history.replaceState({}, document.title, \"/\");\n    return\n  }\n\n  try {\n    if(tab) {\n      for(let i = 0; i < MenuTabs.length; i++) {\n        if(tab === MenuTabs[i]) {\n          dispatch(actionFactory.value(\"selectedTabIndex\", i))\n        }\n      }\n    }\n\n    persist()\n  } catch(err) {\n    console.log(\"INIT ERROR:\", err)\n  }\n}\n\nexport default AppInit\n","import { createStore } from 'redux'\nimport { createEngine } from 'duxen'\nimport schema from '../modules/App/AppSchema'\nimport { AppName, AppVersion } from '../modules/App/AppSchema'\nimport AppInit from '../modules/App/AppInit'\nimport { loadState, saveState } from './persist'\n\nimport mergeDeep from '../utils/mergeDeep'\n\nlet initState\nconst appId = AppName + \":\" + AppVersion\n\nconst makeStore = (engine) => {\n\n  const reducer = engine.repoReducer()\n  const store = createStore(reducer)\n\n  initState = engine.head(store.getState())\n  const persistedState = loadState(appId)\n\n  if(persistedState) {\n    const mergedState = mergeDeep(initState.toJS(), persistedState)\n    store.dispatch(engine.actionFactory().init(mergedState))\n  }\n  store.dispatch(engine.actionFactory().refresh())\n  // store.subscribe(() => saveState(appId, store.getState()))\n  // engine.subscribe((action) => console.log(\"ACTION\", Date(), action.type, JSON.stringify(action, undefined, 4)))\n  // store.subscribe(() => console.log(\"REDUX STATE\", Date(), JSON.stringify(engine.printableState(getState()).toJS(), undefined, 4)))\n\n  return store\n}\n\nexport const engine = createEngine(schema)\nexport const actionFactory = engine.actionFactory()\nexport const store = makeStore(engine)\nexport const dispatch = (action) => store.dispatch(action)\nexport const getState = () => engine.head(store.getState())\nexport const persist = () => store.subscribe(() => saveState(appId, store.getState()))\n\nAppInit(engine, store, initState)\n","/*\n// Copied from: \n//\n// https://stackoverflow.com/questions/27936772/how-to-deep-merge-instead-of-shallow-merge\n*/\n\n/**\n * Simple object check.\n * @param item\n * @returns {boolean}\n */\nconst isObject = (item) => {\n  return (item && typeof item === 'object' && !Array.isArray(item));\n}\n\n/**\n * Deep merge two objects.\n * @param target\n * @param ...sources\n */\nconst mergeDeep = (target, ...sources) => {\n  if (!sources.length) return target;\n  const source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} });\n        mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(target, { [key]: source[key] });\n      }\n    }\n  }\n\n  return mergeDeep(target, ...sources);\n}\n\nexport default mergeDeep \n","export default function isMobileDevice() {\n  return (typeof window.orientation !== \"undefined\") || (navigator.userAgent.indexOf('IEMobile') !== -1);\n}","import React, { Component } from 'react'\n\nimport isMobileDevice from '../../utils/isMobileDevice'\n\nimport { codeIsNormal, codeIsPlayers, text2code, code2text, code2html, code2symbol, code2color } from '../../utils/cards'\n\nimport css from './Card.module.css'\n\nconst imd = isMobileDevice()\n\nexport default class Card extends Component {\n\n  constructor(props) {\n    super(props)\n    this.code0 = \"\"\n    this.comp0 = null\n  }\n\n  render0() {\n    const props = this.props\n    const style = {...props.style}||{}\n    const html = props.html\n    const vertical = props.vertical\n    const ball = props.ball\n    let grey = false\n    let card = props.card || props.children\n    let code = props.code !== undefined ? props.code : text2code(card)\n\n    if(props.handArr) {\n      if((codeIsNormal(code) || codeIsPlayers(code)) && props.handArr.includes(code)) {\n        grey = true\n      }\n    }\n    card = code2text(code)\n    const symbol = html ? code2html(code, vertical) : code2symbol(code)\n\n    style.color = grey ? \"gainsboro\" : code2color(code);\n\n    let comp\n\n    const cn = (ball?(html?css.htmlBall:css.ball):(html?(imd?css.htmlSquareMobile:css.htmlSquare):css.square))\n\n    if(props.click) {\n      comp = <button \n        className={cn}\n        name={card}\n        title={card}\n        alt={card}\n        onClick={props.click.bind(this, card)}\n        style={style}\n      >\n        {symbol}\n      </button>\n    } else {\n      comp = <span\n        className={cn}\n        name={card}\n        title={card}\n        alt={card}\n        style={style}\n      >\n        {symbol}\n      </span>\n    }\n\n    return comp\n  }\n\n  render() {\n    const props = this.props\n    const card = props.card || props.children\n    const code = props.code !== undefined ? props.code : text2code(card)\n    const handArr = props.handArr\n    if(!this.comp0 || this.code0 !== code || this.handArr0 !== handArr) {\n      this.code0 = code\n      this.handArr0 = handArr\n      this.comp0 = this.render0()\n    }\n    return this.comp0\n  }\n}\n","import React from 'react'\n\nimport Card from '../../components/Card'\n\nconst style = {fontSize: 20, color: \"white\", padding: \"0px\"}\n\nconst Banner = (props) => (\n  <div style={style}>\n    Poser\n    &nbsp;\n    <Card style={{...style, background: \"white\", margin: 0, fontSize: 18, height: 24}} html={true}>7d</Card>\n    <Card style={{...style, background: \"white\", margin: 0, fontSize: 18, height: 24}} html={true}>2h</Card>\n  </div>\n)\n\nexport default Banner\n","const splice = (s, idx, rem, str) => {\n  return s.slice(0, idx) + str + s.slice(idx + Math.abs(rem));\n}\n\nexport default splice\n","// @flow\n\n/*\n * Card is an integer in the following format:\n *\n * 876543210\n *    rrrrss\n *\n * rrrr - is a rank, a number between 0 and 12\n * ss - is a suit, a number between 0 and 3\n *\n */\n\nexport type Card = number\nexport type CardRank = number\nexport type CardSuit = number\n\nexport const CardNull: Card = 0x3D\nexport const CardWildCard: Card = 0x3B\nexport const CardBad: Card  = 0x3F\nexport const CardSize = 52\n\nexport const Card2Players     = (69)\nexport const Card3Players     = (70)\nexport const Card4Players     = (71)\nexport const Card5Players     = (72)\nexport const Card6Players     = (73)\nexport const Card7Players     = (74)\nexport const Card8Players     = (75)\nexport const Card9Players     = (76)\n\nexport const CardSuitClubs: CardSuit = (0)\nexport const CardSuitDiamonds: CardSuit = (1)\nexport const CardSuitHearts: CardSuit = (2)\nexport const CardSuitSpades: CardSuit = (3)\nexport const CardSuitSize: CardSuit = (4)\nexport const CardSuitPlayers: CardRank = (0xD)\nexport const CardSuitWild: CardRank = (0xE)\nexport const CardSuitBad: CardSuit = (0xF)\n\nexport const CardRank2: CardRank = (0)\nexport const CardRank3: CardRank = (1)\nexport const CardRank4: CardRank = (2)\nexport const CardRank5: CardRank = (3)\nexport const CardRank6: CardRank = (4)\nexport const CardRank7: CardRank = (5)\nexport const CardRank8: CardRank = (6)\nexport const CardRank9: CardRank = (7)\nexport const CardRank10: CardRank = (8)\nexport const CardRankJ: CardRank = (9)\nexport const CardRankQ: CardRank = (10)\nexport const CardRankK: CardRank = (11)\nexport const CardRankA: CardRank = (12)\nexport const CardRankSize: CardRank = (13)\nexport const CardRankWild: CardRank = (0xE)\nexport const CardRankBad: CardRank = (0xF)\n\nconst cardRankStr: Array<string> = [\n\t\"2\",\n\t\"3\",\n\t\"4\",\n\t\"5\",\n\t\"6\",\n\t\"7\",\n\t\"8\",\n\t\"9\",\n\t\"T\",\n\t\"J\",\n\t\"Q\",\n\t\"K\",\n    \"A\",\n]\n\nconst cardSuitStr: Array<string> = [\n\t\"c\",\n\t\"d\",\n\t\"h\",\n\t\"s\",\n]\n\nexport function MakeCard(rank: CardRank, suit: CardSuit): Card {\n\tif(0 <= rank && rank < CardRankSize && 0 <= suit && suit < CardSuitSize) {\n\t\treturn (rank << 2) | suit\n\t} else if(2 <= rank && rank < 9 && suit === CardSuitPlayers) {\n\t\treturn Card2Players + (rank -2)\n\t} else if(rank === CardRankWild) {\n\t\treturn CardWildCard\n\t}\n\treturn CardBad\n}\n\nexport function MakeCardStr(s: string): Card {\n\tconst c1: string  = s.substr(0, 1)\n\tconst c2: string = s.substr(1, 1)\n\n\tlet rank: CardRank\n\tlet suit: CardSuit\n\n\tswitch(c1) {\n\tcase '2':\n\t\trank = 0\n\t\tbreak\n\tcase '3':\n\t\trank = 1\n\t\tbreak\n\tcase '4':\n\t\trank = 2\n\t\tbreak\n\tcase '5':\n\t\trank = 3\n\t\tbreak\n\tcase '6':\n\t\trank = 4\n\t\tbreak\n\tcase '7':\n\t\trank = 5\n\t\tbreak\n\tcase '8':\n\t\trank = 6\n\t\tbreak\n\tcase '9':\n\t\trank = 7\n\t\tbreak\n\tcase 't':\n\tcase 'T':\n\t\trank = 8\n\t\tbreak\n\tcase 'j':\n\tcase 'J':\n\t\trank = 9\n\t\tbreak\n\tcase 'q':\n\tcase 'Q':\n\t\trank = 10\n\t\tbreak\n\tcase 'k':\n\tcase 'K':\n\t\trank = 11\n\t\tbreak\n\tcase 'a':\n\tcase 'A':\n\t\trank = 12\n\t\tbreak\n\tcase '*':\n\tcase '_':\n\t\trank = CardRankWild\n\t\tbreak\n\tcase '?':\n\tdefault:\n\t\trank = CardRankBad\n\t\tbreak\n\t}\n\n\tswitch(c2) {\n\tcase 'c':\n\tcase 'C':\n\t\tsuit = 0\n\t\tbreak\n\tcase 'd':\n\tcase 'D':\n\t\tsuit = 1\n\t\tbreak\n\tcase 'h':\n\tcase 'H':\n\t\tsuit = 2\n\t\tbreak\n\tcase 's':\n\tcase 'S':\n\t\tsuit = 3\n\t\tbreak\n\tcase 'p':\n\tcase 'P':\n\t\tsuit = CardSuitPlayers\n\t\tbreak\n\t\tcase '*':\n\tcase '_':\n\t\tsuit = CardSuitWild\n\t\tbreak\n\tcase '?':\n\tdefault:\n\t\tsuit = CardSuitBad\n\t\tbreak\n\t}\n\n\treturn MakeCard(rank, suit)\n}\n\nexport function GetRank(card: Card): CardRank {\n\treturn card >> 2\n}\n\nexport function GetSuit(card: Card): CardSuit {\n\treturn card & 3\n}\n\nexport function GetRankStr(card: Card): string {\n\treturn cardRankStr[card >> 2]\n}\n\nexport function GetSuitStr(card: Card): string {\n\treturn cardSuitStr[card & 3]\n}\n\nexport function GetCardStr(card: Card): string {\n\treturn GetRankStr(card) + GetSuitStr(card)\n}\n\nexport function GetCardRankStr(cardRank: CardRank): string {\n\treturn cardRankStr[cardRank]\n}\n\nexport function GetCardSuitStr(cardSuit: CardSuit): string {\n\treturn cardSuitStr[cardSuit]\n}\n","// @flow\n\nimport type { Card, CardRank, CardSuit } from './card'\nimport { MakeCardStr, CardBad, CardWildCard, MakeCard, GetCardStr, GetRank, GetSuit, Card2Players, Card9Players } from './card'\n\nexport type Hand7 = {\n\tranks: number,\n\tsuits: number,\n}\n\nexport const Hand7Null: Hand7 = {\n\tranks: 0x0FFFFFFF,\n\tsuits: 0x0,\n}\nexport const Hand7Bad: Hand7 = {\n\tranks: 0x0FFFFFFF,\n\tsuits: 0x3FFF,\n}\n\nexport function MakeHand7(): Hand7 {\n\treturn {\n\t\tranks: Hand7Null.ranks,\n\t\tsuits: Hand7Null.suits,\n\t}\n}\n\nconst handRankMasks: Array<number> = [\n\t~0x0000000F,\n\t~0x000000F0,\n\t~0x00000F00,\n\t~0x0000F000,\n\t~0x000F0000,\n\t~0x00F00000,\n\t~0x0F000000,\n]\n\nconst handSuitMasks: Array<number> = [\n\t~0x0003,\n\t~0x000C,\n\t~0x0030,\n\t~0x00C0,\n\t~0x0300,\n\t~0x0C00,\n\t~0x3000,\n]\n\nexport function StringToHand7(s: string): [Hand7, string] {\n\tif(!s || s.length < 14) {\n\t\treturn [Hand7Bad, \"not enough cards\"]\n\t}\n\n\tlet hand: Hand7 = MakeHand7()\n\tlet mask1: number = 0\n\tlet mask2: number = 0\n\tlet m = 0\n\n\tfor(let i = 0; i < s.length/2; i++) {\n\t\tconst n: number = i << 1\n\t\tconst cardStr: string = s.substr(n, 2)\n\t\tconst card: Card = MakeCardStr(cardStr)\n\n\t\tif(card === CardBad) {\n\t\t\treturn [Hand7Bad, (\"bad card: \" + cardStr)]\n\t\t}\n\n\t\tif(!(Card2Players <= card && card <= Card9Players)) {\n\t\t\tif(card === CardWildCard) {\n\t\t\t\t// don't test for duplicate\n\t\t\t} else if(card >= 32) {\n\t\t\t\tconst bit: number = 1 << (card-32)\n\t\t\t\tif((mask2 & bit) === 0) {\n\t\t\t\t\tmask2 |= bit\n\t\t\t\t} else {\n\t\t\t\t\treturn [Hand7Bad, (\"duplicate card: \" + cardStr)]\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst bit: number = 1 << card\n\t\t\t\tif((mask1 & bit) === 0) {\n\t\t\t\t\tmask1 |= bit\n\t\t\t\t} else {\n\t\t\t\t\treturn [Hand7Bad, (\"duplicate card: \" + cardStr)]\n\t\t\t\t}\n\t\t\t}\n\t\t\thand = SetHand7Card(hand, m, card)\n\t\t\tm++\n\t\t}\n\t}\n\n\treturn [hand, \"\"]\n}\n\nexport function SetHand7Card(hand: Hand7, n: number, card: Card): Hand7 {\n\thand.ranks = (hand.ranks & handRankMasks[n]) | (GetRank(card) << (n << 2)) \n\thand.suits = (hand.suits & handSuitMasks[n]) | (GetSuit(card) << (n << 1))\n\treturn hand\n}\n\nexport function GetHand7Rank(hand: Hand7, n: number): CardRank {\n\treturn (hand.ranks >> (n << 2)) & 0xF\n}\n\nexport function GetHand7Suit(hand: Hand7, n: number): CardSuit {\n\treturn (hand.suits >> (n << 1)) & 3\n}\n\nexport function GetHand7Card(hand: Hand7, n: number): Card {\n\tconst rank = GetHand7Rank(hand, n)\n\tconst suit = GetHand7Suit(hand, n)\n\tconst card = MakeCard(rank, suit)\n\treturn card\n}\n\nexport function GetHand7HoleStr(hand: Hand7): string {\n\tconst card1 = GetHand7Card(hand, 0)\n\tconst card2 = GetHand7Card(hand, 1)\n\tconst card1Str = GetCardStr(card1)\n\tconst card2Str = GetCardStr(card2)\n\treturn card1Str + card2Str\n}\n\nexport function GetHand7Str(hand: Hand7): string {\n\tlet s = \"\"\n\tfor(let i = 0; i < 7; i++) {\n\t\tconst card = GetHand7Card(hand, i)\n\t\ts += GetCardStr(card)\n\t}\n\treturn s\n}\n","// @flow\n\nimport type { CardRank } from './card'\nimport { GetCardRankStr } from './card'\n\n/*\n * The handRank (hr) represents a value of the 7-card hand\n * It is a 24 bit integer number in the following format:\n *\n * hr[20:23] - hand category\n * hr[16:19] - card4 rank\n * hr[12:15] - card3 rank\n * hr[8:11] - card2 rank\n * hr[4:7] - card1 rank\n * hr[0:3] - card0 rank\n *\n * hand category -\n *  0 - high card\n *  1 - 1 pair\n *  2 - 2 pair\n *  3 - three of a kind\n *  4 - straight\n *  5 - flush\n *  6 - full house\n *  7 - 4 of a kind\n *  8 - straight flush\n *  F - bad hand rank\n *\n *  Special Value = 0 - means invalid hand\n */\n\nexport type HandRank = number\nexport type HandRankCat = number\n\nexport const HandRankCatHighCard: HandRankCat = (0)\nexport const HandRankCatOnePair: HandRankCat = (1)\nexport const HandRankCatTwoPair: HandRankCat = (2)\nexport const HandRankCatSet    : HandRankCat = (3)\nexport const HandRankCatStraight: HandRankCat = (4)\nexport const HandRankCatFlush  : HandRankCat = (5)\nexport const HandRankCatFullHouse: HandRankCat = (6)\nexport const HandRankCatQuads  : HandRankCat = (7)\nexport const HandRankCatStraightFlush: HandRankCat = (8)\nexport const HandRankCatMax    : HandRankCat = (9)\nexport const HandRankCatBad    : HandRankCat = (0xF)\n\nexport const HandRankNull: HandRank = (0x0FFFFF)\nexport const HandRankBad: HandRank = (0xFFFFFF)\n\nconst handRankMasks: Array<number> = [\n\t~0x0000F,\n\t~0x000F0,\n\t~0x00F00,\n\t~0x0F000,\n\t~0xF0000,\n]\n\nconst handRankCatsStr: Array<string> = [\n\t\"1\",\n\t\"2\",\n\t\"2+2\",\n\t\"3\",\n\t\"S\",\n\t\"F\",\n\t\"3+2\",\n\t\"4\",\n    \"SF\"\n]\n\nconst handRankCategoriesStr = [\n\t\"High\",\n\t\"1 Pair\",\n\t\"2 Pair\",\n\t\"Set\",\n\t\"Straight\",\n\t\"Flush\",\n\t\"Boat\",\n\t\"Quads\",\n    \"StrFl\"\n]\n\nconst handRankCategoriesLongStr = [\n\t\"High Card\",\n\t\"One Pair\",\n\t\"Two Pair\",\n\t\"Set\",\n\t\"Straight\",\n\t\"Flush\",\n\t\"Full House\",\n\t\"Quads\",\n    \"Straight Flush\"\n]\n\nexport function MakeHandRank(): HandRank {\n\treturn HandRankNull\n}\n\nexport function SetCategory(handRank: HandRank, category: HandRankCat): HandRank {\n\treturn (handRank & (~0xF<<20)) | (category << 20)\n}\n\nexport function GetCategory(handRank: HandRank): HandRankCat {\n\treturn (handRank >> 20) & 0xf\n}\n\nexport function GetCategoryStr(category: HandRankCat): string {\n\treturn handRankCategoriesStr[category]\n}\n\nexport function GetCategoryLongStr(category: HandRankCat): string {\n\treturn handRankCategoriesLongStr[category]\n}\n\nexport function GetCatStr(category: HandRankCat): string {\n\treturn handRankCatsStr[category]\n}\n\nexport function GetHandCategoryStr(handRank: HandRank): string {\n\treturn GetCategoryStr(GetCategory(handRank))\n}\n\nexport function GetHandCatStr(handRank: HandRank): string {\n\treturn GetCatStr(GetCategory(handRank))\n}\n\nexport function SetCardRank(handRank: HandRank, n: number, cardRank: CardRank): HandRank {\n\treturn (handRank & handRankMasks[n]) | (cardRank << (n << 2))\n}\n\nexport function GetCardRank(handRank: HandRank, n: number): CardRank {\n\treturn (handRank >> (n << 2)) & 0xf\n}\n\nexport function HandRankStr(handRank: HandRank): string {\n\treturn GetCardRankStr(GetCardRank(handRank, 4)) +\n\t\tGetCardRankStr(GetCardRank(handRank, 3)) +\n\t\tGetCardRankStr(GetCardRank(handRank, 2)) +\n\t\tGetCardRankStr(GetCardRank(handRank, 1)) +\n\t\tGetCardRankStr(GetCardRank(handRank, 0))\n}\n","// @flow\n\nconst hsbSize: number = 1 << 16\n\nconst hsb = new Array<number>(hsbSize)\n\nfunction init() {\n\tfor(let i: number = 0; i < hsbSize; i++) {\n\t\thsb[i] = getSlowHsb(i)\n\t}\n}\n\nfunction getSlowHsb(n: number): number {\n\tlet i: number = -1\n\n\twhile(n > 0) {\n\t\ti++\n\t\tn >>= 1\n\t}\n\n\treturn i\n}\n\n// GetHsb16 function\n// returns the highest significant bit in a 16-bit integer\n// or -1 if no hsb\nexport function GetHsb16(n: number): number {\n\treturn hsb[n]\n}\n\ninit()\n","// @flow\n\nimport type { CardRank, CardSuit } from './card'\nimport type { Hand7 } from './hand'\nimport type { HandRank } from './handRank'\nimport type { HandCalculator } from './handCalculator'\n\nimport { CardRankSize, CardSuitSize, CardRank2, CardRankA } from './card'\nimport { GetHand7Rank, GetHand7Suit } from './hand'\nimport { MakeHandRank, SetCategory, SetCardRank } from './handRank'\nimport { HandRankCatHighCard, HandRankCatOnePair, HandRankCatTwoPair, HandRankCatSet, HandRankCatStraight, HandRankCatFlush, HandRankCatFullHouse, HandRankCatQuads, HandRankCatStraightFlush } from './handRank'\nimport { GetHsb16 } from './hsb'\n\nexport class BasicHandCalculator implements HandCalculator {\n\trankCnts: Array<number> // [CardRankSize]\n\tsuitCnts: Array<number> // [4]\n    suitMasks: Array<number> // [4]\n\n    constructor() {\n        this.rankCnts = new Array<number>(CardRankSize)\n        this.suitCnts = new Array<number>(CardSuitSize)\n        this.suitMasks = new Array<number>(CardSuitSize)\n    }\n\n    CalcHandRank(hand: Hand7): HandRank {\n        return this.calcHandRank(hand, 7)\n    }\n\n    reset() {\n        const self = this\n\n        for(let i = 0; i < self.rankCnts.length; i++) {\n            self.rankCnts[i] = 0\n        }\n        for(let i = 0; i < self.suitCnts.length; i++) {\n            self.suitCnts[i] = 0\n        }\n        for(let i = 0; i < self.suitMasks.length; i++) {\n            self.suitMasks[i] = 0\n        }\n    }\n\n    calcHandRank(hand: Hand7, cardsCnt: number): HandRank {\n        const self = this\n\n        self.reset()\n        \n        let handRank: HandRank = MakeHandRank()\n\n        // aggregate the ranks, suits, suit masks\n        for(let i: number = 0; i < cardsCnt; i++) {\n            const rank: CardRank = GetHand7Rank(hand, i)\n            const suit: CardSuit = GetHand7Suit(hand, i)\n            if(rank < CardRankSize) {\n                self.rankCnts[rank]++\n                self.suitCnts[suit]++\n                self.suitMasks[suit] |= (1 << rank)\n            }\n        }\n\n        let m1: number = 0 // mask for single cards\n        let m2: number = 0 // mask for the pairs\n        let m3: number = 0 // mask for sets\n        let m4: number = 0 // mask for four of a kind\n\n        let m2cnt: number = 0 // count of pairs\n        let m3cnt: number = 0 // count of sets\n\n        // determine the category based on the rank counts\n        for(let i: number = 0; i < CardRankSize; i++) {\n            const n = self.rankCnts[i]\n            if(n === 0) {\n            } else if(n === 1) {\n                m1 |= 1 << i\n            } else if(n === 2) {\n                m2 |= 1 << i\n                m2cnt++\n            } else if(n === 3) {\n                m3 |= 1 << i\n                m3cnt++\n            } else if(n === 4) {\n                m4 |= 1 << i\n            }\n        }\n\n        let mf: number = 0 // flush mask, 1 bit per card that's in the flush\n\n        for(let i: number = 0; i < CardSuitSize; i++) {\n            if(self.suitCnts[i] >= 5) {\n                mf = self.suitMasks[i]\n                break\n            }\n        }\n\n        let ms: number\n\n        // if flush then check if it's also straight flush\n        // otherwise check for just regular straight\n        if(mf !== 0) {\n            // possible straight flush\n            ms = mf << 1\n        } else {\n            // possible straight\n            // straight is not possible if four of a kind therefore not using m4\n            ms = (m1 | m2 | m3) << 1\n        }\n    \n        // copy the ace to position 0\n        if((ms & (1 << 13)) !== 0) {\n            ms |= 1\n        }\n\n        // find the straight high index\n        let msi: CardRank = CardRank2\n        while(ms >= 31) {\n            const msc: CardRank = GetHsb16(ms)\n            const mss = ms >> (msc-4)\n            if((mss & 31) === 31) {\n                msi = msc-1\n                break\n            }\n            ms &= ~(1 << msc)\n        }\n\n        if(msi !== CardRank2 && mf !== 0) {\n            // straight flush\n            handRank = SetCategory(handRank, HandRankCatStraightFlush)\n            handRank = SetCardRank(handRank, 4, msi)\n            msi--\n            handRank = SetCardRank(handRank, 3, msi)\n            msi--\n            handRank = SetCardRank(handRank, 2, msi)\n            msi--\n            handRank = SetCardRank(handRank, 1, msi)\n            // adjust for an ace\n            if(msi === CardRank2) {\n                msi = CardRankA\n            } else {\n                msi--\n            }\n            handRank = SetCardRank(handRank, 0, msi)\n        } else if(m4 !== 0) {\n            // four of a kind\n            handRank = SetCategory(handRank, HandRankCatQuads)\n            const c4: CardRank = GetHsb16(m4)\n            handRank = SetCardRank(handRank, 4, c4)\n            handRank = SetCardRank(handRank, 3, c4)\n            handRank = SetCardRank(handRank, 2, c4)\n            handRank = SetCardRank(handRank, 1, c4)\n            const c1: CardRank = GetHsb16(m3 | m2 | m1)\n            handRank = SetCardRank(handRank, 0, c1)\n        } else if(m3cnt === 2) {\n            handRank = SetCategory(handRank, HandRankCatFullHouse)\n            const c3: CardRank = GetHsb16(m3)\n            handRank = SetCardRank(handRank, 4, c3)\n            handRank = SetCardRank(handRank, 3, c3)\n            handRank = SetCardRank(handRank, 2, c3)\n            m3 &= ~(1 << c3)\n            const c2: CardRank = GetHsb16(m3)\n            handRank = SetCardRank(handRank, 1, c2)\n            handRank = SetCardRank(handRank, 0, c2)\n        } else if(m3cnt === 1 && m2cnt > 0) {\n            handRank = SetCategory(handRank, HandRankCatFullHouse)\n            const c3: CardRank = GetHsb16(m3)\n            handRank = SetCardRank(handRank, 4, c3)\n            handRank = SetCardRank(handRank, 3, c3)\n            handRank = SetCardRank(handRank, 2, c3)\n            const c2: CardRank = GetHsb16(m2)\n            handRank = SetCardRank(handRank, 1, c2)\n            handRank = SetCardRank(handRank, 0, c2)\n        } else if(mf !== 0) {\n            handRank = SetCategory(handRank, HandRankCatFlush)\n            let c: CardRank = GetHsb16(mf)\n            handRank = SetCardRank(handRank, 4, c)\n            mf &= ~(1 << c)\n            c = GetHsb16(mf)\n            handRank = SetCardRank(handRank, 3, c)\n            mf &= ~(1 << c)\n            c = GetHsb16(mf)\n            handRank = SetCardRank(handRank, 2, c)\n            mf &= ~(1 << c)\n            c = GetHsb16(mf)\n            handRank = SetCardRank(handRank, 1, c)\n            mf &= ~(1 << c)\n            c = GetHsb16(mf)\n            handRank = SetCardRank(handRank, 0, c)\n        } else if(msi !== 0) {\n            // straight\n            handRank = SetCategory(handRank, HandRankCatStraight)\n            handRank = SetCardRank(handRank, 4, msi)\n            msi--\n            handRank = SetCardRank(handRank, 3, msi)\n            msi--\n            handRank = SetCardRank(handRank, 2, msi)\n            msi--\n            handRank = SetCardRank(handRank, 1, msi)\n            // adjust for an ace\n            if(msi === 0) {\n                msi = CardRankA\n            } else {\n                msi--\n            }\n            handRank = SetCardRank(handRank, 0, msi)\n        } else if(m3 !== 0) {\n            handRank = SetCategory(handRank, HandRankCatSet)\n            const c3: CardRank = GetHsb16(m3)\n            handRank = SetCardRank(handRank, 4, c3)\n            handRank = SetCardRank(handRank, 3, c3)\n            handRank = SetCardRank(handRank, 2, c3)\n            // m2 must be zero, so try only m1\n            let c1: CardRank = GetHsb16(m1)\n            handRank = SetCardRank(handRank, 1, c1)\n            m1 &= ~(1 << c1)\n            c1 = GetHsb16(m1)\n            handRank = SetCardRank(handRank, 0, c1)\n        } else if(m2cnt > 1) {\n            handRank = SetCategory(handRank, HandRankCatTwoPair)\n            let c2: CardRank = GetHsb16(m2)\n            handRank = SetCardRank(handRank, 4, c2)\n            handRank = SetCardRank(handRank, 3, c2)\n            m2 &= ~(1 << c2)\n            c2 = GetHsb16(m2)\n            handRank = SetCardRank(handRank, 2, c2)\n            handRank = SetCardRank(handRank, 1, c2)\n            m2 &= ~(1 << c2)\n            const c1: CardRank = GetHsb16(m1 | m2)\n            handRank = SetCardRank(handRank, 0, c1)\n        } else if(m2cnt > 0) {\n            handRank = SetCategory(handRank, HandRankCatOnePair)\n            const c2: CardRank = GetHsb16(m2)\n            handRank = SetCardRank(handRank, 4, c2)\n            handRank = SetCardRank(handRank, 3, c2)\n            let c1: CardRank = GetHsb16(m1)\n            handRank = SetCardRank(handRank, 2, c1)\n            m1 &= ~(1 << c1)\n            c1 = GetHsb16(m1)\n            handRank = SetCardRank(handRank, 1, c1)\n            m1 &= ~(1 << c1)\n            c1 = GetHsb16(m1)\n            handRank = SetCardRank(handRank, 0, c1)\n        } else {\n            handRank = SetCategory(handRank, HandRankCatHighCard)\n            let c1: CardRank = GetHsb16(m1)\n            handRank = SetCardRank(handRank, 4, c1)\n            m1 &= ~(1 << c1)\n            c1 = GetHsb16(m1)\n            handRank = SetCardRank(handRank, 3, c1)\n            m1 &= ~(1 << c1)\n            c1 = GetHsb16(m1)\n            handRank = SetCardRank(handRank, 2, c1)\n            m1 &= ~(1 << c1)\n            c1 = GetHsb16(m1)\n            handRank = SetCardRank(handRank, 1, c1)\n            m1 &= ~(1 << c1)\n            c1 = GetHsb16(m1)\n            handRank = SetCardRank(handRank, 0, c1)            \n        }\n        \n        return handRank\n    }    \n}\n","// @flow\n\nimport type { Card } from './card'\nimport type { Hand7 } from './hand'\nimport type { HandRank } from './handRank'\nimport type { HandCalculator } from './handCalculator'\n\nimport { CardSize } from './card'\nimport { GetHand7Card, SetHand7Card, GetHand7HoleStr, Hand7Bad } from './hand'\nimport { GetHandCatStr, GetHandCategoryStr, HandRankStr } from './handRank'\nimport { BasicHandCalculator } from './basicHandCalculator'\n\nimport { SortedMap } from 'immutable-sorted'\n\nexport type CombosItem = {\n\thole:     string,\n\thandRank: number,\n\tcat:      string,\n\tcategory: string,\n\tresult:   string,\n\tcount:    number,\n}\n\nexport function Hand7Combos(hand: Hand7): [Array<CombosItem>, number, number, number] {\n\tif(hand === Hand7Bad) {\n\t\treturn [[], 0, 0, 0]\n\t}\n\tconst handCalc: HandCalculator = new BasicHandCalculator()\n\tconst handRank: HandRank = handCalc.CalcHandRank(hand)\n\tlet betterCombos: number = 0\n\tlet equalCombos: number = 0\n\tlet worseCombos: number = 0\n\n\tlet evalMap: SortedMap<HandRank, CombosItem> = SortedMap()\n\n\tconst handRes: CombosItem = {\n\t\thole:     GetHand7HoleStr(hand),\n\t\thandRank: handRank,\n\t\tcat:      GetHandCatStr(handRank),\n\t\tcategory: GetHandCategoryStr(handRank),\n\t\tresult:   HandRankStr(handRank),\n\t\tcount:    0,\n    }\n    \n\tevalMap = evalMap.set(handRank, handRes)\n\n\tlet mask0 = 0\n\tlet mask1 = 0\n\n\tfor(let i: number = 0; i < 7; i++) {\n        const card: Card = GetHand7Card(hand, i)\n        if(card < 32) {\n            mask0 |= (1 << card)\n        } else {\n            mask1 |= (1 << (card - 32))\n        }\n\t}\n\n\tlet h: Hand7 = hand\n\n\tfor(let c1: Card = 1; c1 < CardSize; c1++) {\n        if(c1 < 32) {\n            const c1bit: number = 1 << c1\n            if((mask0 & c1bit) !== 0) {\n                continue\n            }\n        } else {\n            const c1bit: number = 1 << (c1 - 32)\n            if((mask1 & c1bit) !== 0) {\n                continue\n            }\n        }\n\t\tfor(let c2: Card = 0; c2 < c1; c2++) {\n            if(c2 < 32) {\n                const c2bit: number = 1 << c2\n                if((mask0 & c2bit) !== 0) {\n                    continue\n                }\n            } else {\n                const c2bit: number = 1 << (c2 - 32)\n                if((mask1 & c2bit) !== 0) {\n                    continue\n                }\n            }\n\t\t\tconst card1: Card = c1\n\t\t\tconst card2: Card = c2\n\t\t\th = SetHand7Card(h, 0, card1)\n\t\t\th = SetHand7Card(h, 1, card2)\n\t\t\tconst hRank: HandRank = handCalc.CalcHandRank(h)\n\n\t\t\tlet hRes: ?CombosItem = evalMap.get(hRank)\n\t\t\tif(hRes) {\n\t\t\t\thRes.count++\n\t\t\t} else {\n\t\t\t\thRes = {\n\t\t\t\t\thole:     GetHand7HoleStr(h),\n\t\t\t\t\thandRank: hRank,\n\t\t\t\t\tcat:      GetHandCatStr(hRank),\n\t\t\t\t\tcategory: GetHandCategoryStr(hRank),\n\t\t\t\t\tresult:   HandRankStr(hRank),\n\t\t\t\t\tcount:    1,\n\t\t\t\t}\n\t\t\t\tevalMap = evalMap.set(hRank, hRes)\n\t\t\t}\n\n\t\t\tif(hRank > handRank) {\n\t\t\t\tbetterCombos++\n\t\t\t} else if(hRank === handRank) {\n\t\t\t\tequalCombos++\n\t\t\t} else {\n\t\t\t\tworseCombos++\n\t\t\t}\n\t\t}\n\t}\n\tconst hResArr = evalMap.toIndexedSeq().reverse().toArray()\n\n\treturn [hResArr, betterCombos, equalCombos, worseCombos]\n}\n","// @flow\n\nimport type { Rng } from './rng'\n\nexport class Sfc32 implements Rng\n{\n    a: number\n    b: number\n    c: number\n    d: number\n\n    constructor() {\n        const now: number = Date.now()\n        const a: number = now+Math.floor(Math.random()*1000000000)\n        const b: number = 13*a+now+Math.floor(Math.random()*1000000000)\n        const c: number = 17*b+now+Math.floor(Math.random()*1000000000)\n        const d: number = 31*c+now+Math.floor(Math.random()*1000000000)\n        this.seed(a, b, c, d)\n    }\n\n    seed(a: number, b: number, c: number, d: number): void {\n        this.a = a\n        this.b = b\n        this.c = c\n        this.d = d\n    }\n\n    next(): number {\n        this.a >>>= 0\n        this.b >>>= 0\n        this.c >>>= 0\n        this.d >>>= 0\n\n        let t = (this.a + this.b) | 0\n        this.a = this.b ^ (this.b >>> 9)\n        this.b = this.c + (this.c << 3) | 0\n        this.c = (this.c << 21) | (this.c >>> 11)\n        this.d = this.d + 1 | 0\n        t = t + this.d | 0\n        this.c = this.c + t | 0\n        return (t >>> 0)\n    }\n}\n","// @flow\n\nimport type { Rng } from './rng'\nimport type { Card } from \"./card\"\n\nimport { Sfc32 } from \"./sfc32\"\nimport { CardSize, CardWildCard, CardNull } from \"./card\"\n\nexport class Deck {\n    mask0: number\n    mask1: number\n    rng: Rng\n\n\tconstructor()\n\t{\n        this.mask0 = 0\n        this.mask1 = 0\n        this.rng = new Sfc32()\n\t}\n    \n\tmix(): void\t{\n\t\tthis.mask0 = 0;\n\t\tthis.mask1 = 0;\n\t}\n\t\n\tremoveCard(card: Card): void {\n\t\tthis.setMask(card)\n\t}\n\n\tsetMask(card: Card): void {\n\t\tif(card !== CardWildCard) {\n\t\t\tif(card < 32) {\n\t\t\t\tthis.mask0 |= 1 << card\n\t\t\t} else {\n\t\t\t\tthis.mask1 |= 1 << (card - 32)\n\t\t\t}\n\t\t}\n\t}\n\t\n\tgetMask(card: Card): number {\n        if(card < 32) {\n            return this.mask0 & (1 << card)\n        } else {\n            return this.mask1 & (1 << (card - 32))\n        }\n\t}\n\t\n\t// returns the value of the card\n\t// lower 2 bits are suite, upper bits are value from 0 - 12\n\tgetNextCard(): Card {\n\t\t// get next card\n\t\twhile(this.rng) {\n\t\t\t// generate a random number between 0 an 63\n\t\t\tconst rn: number = this.rng.next()\n\t\t\tconst n: number = rn & 0x3F\n\n\t\t\tif(n < CardSize && this.getMask(n) === 0) {\n\t\t\t\tthis.setMask(n)\n\t\t\t\treturn n\n\t\t\t}\n\t\t}\n\t\treturn CardNull\n\t}\n}\n","// @flow\n\nimport type { Card } from './card'\nimport type { Hand7 } from './hand'\nimport type { HandCalculator } from './handCalculator'\n\nimport { CardWildCard } from './card'\nimport { MakeHand7, SetHand7Card, GetHand7Card, StringToHand7 } from './hand'\nimport { Deck } from './deck'\n\nconst MaxPlayers: number = 9\n\nexport type HandEvalRequest = {\n\tnsims: number,\n\tplayers: number,\n\n\tcard1: Card,\n\tcard2: Card,\n\t\n\tboard1: Card,\n\tboard2: Card,\n\tboard3: Card,\n\tboard4: Card,\n\tboard5: Card,\n}\n\nexport type HandEvalResult = {\n\trequest: HandEvalRequest,\n\terr: string,\n\n\tfinalPlayers: number,\n\tgames: number,\n\twins: number,\n\tties: number,\n\tpties: number, // pot ties, number of ties expressed as number of pots\n\tlosses: number,\n}\n\nexport function MakeHandEvalRequest(nsims: number, players: number): HandEvalRequest {\n\treturn {\n        nsims: nsims,\n        players: players,\n\n        card1: CardWildCard,\n        card2: CardWildCard,\n        \n        board1: CardWildCard,\n        board2: CardWildCard,\n        board3: CardWildCard,\n        board4: CardWildCard,\n        board5: CardWildCard,\n    }\n}\n\nexport function MakeHandEvalResult(handEvalRequest: HandEvalRequest, err: string): HandEvalResult {\n\treturn {\n\t\trequest: handEvalRequest,\n\t\terr: err,\n\n\t\tfinalPlayers: 0,\n\t\tgames: 0,\n\t\twins: 0,\n\t\tties: 0,\n\t\tpties: 0, // pot ties, number of ties expressed as number of pots\n\t\tlosses: 0,\n\t\n\t\twp: 0,\n\t\two: 0,\n\t\ter: 0,\n\t}\n}\n\nexport function HandEvalRequestSetHand(evalRequest: HandEvalRequest, handStr: string): string {\n\tlet result: [Hand7, string] = StringToHand7(handStr)\n    let hand = result[0]\n    let err = result[1]\n\tif(err) {\n\t\treturn err\n\t}\n\n\tevalRequest.card1 = GetHand7Card(hand, 0)\n\tevalRequest.card2 = GetHand7Card(hand, 1)\n\t\n\tevalRequest.board1 = GetHand7Card(hand, 2)\n\tevalRequest.board2 = GetHand7Card(hand, 3)\n\tevalRequest.board3 = GetHand7Card(hand, 4)\n\tevalRequest.board4 = GetHand7Card(hand, 5)\n\tevalRequest.board5 = GetHand7Card(hand, 6)\n\treturn \"\"\n}\n\nexport class HandEvaluator {\n\n\tsleep(ms: number): Promise<void> {\n\t\treturn new Promise(resolve => setTimeout(resolve, ms));\n\t}\n\t\t\n\tasync eval(handCalculator: HandCalculator, request: HandEvalRequest, result: HandEvalResult): Promise<void>\n\t{\t\n\t\tlet h = MakeHand7()\n\t\tlet wins = 0\n\t\tlet ties = 0\n\t\tlet pties = 0 // proportional ties, divided by number of splitting players\n\t\tlet losses = 0\n\t\tconst deck = new Deck()\n\t\tconst nsims = request.nsims\n\t\tconst players = request.players\n\n\t\tif(!(2 <= players && players <= MaxPlayers)) {\n\t\t\tresult.err = \"invalid number of players\"\n\t\t\treturn\n\t\t}\n\n\t\tawait this.sleep(0)\n\n\t\tfor(let n = 0; n < nsims; n++) {\n\t\t\tif((n & 131071) === 0) {\n\t\t\t\tawait this.sleep(0)\n\t\t\t}\n\t\t\tdeck.mix()\n\t\t\tdeck.removeCard(request.card1)\n\t\t\tdeck.removeCard(request.card2)\n\t\t\tdeck.removeCard(request.board1)\n\t\t\tdeck.removeCard(request.board2)\n\t\t\tdeck.removeCard(request.board3)\n\t\t\tdeck.removeCard(request.board4)\n\t\t\tdeck.removeCard(request.board5)\n\t\t\t\n\t\t\t// deal the cards\n\t\t\tconst card1 = request.card1 === CardWildCard ? deck.getNextCard() : request.card1\n\t\t\tconst card2 = request.card2 === CardWildCard ? deck.getNextCard() : request.card2\n\t\t\t\n\t\t\t// deal the board\n\t\t\tconst board1 = request.board1 === CardWildCard ? deck.getNextCard() : request.board1\n\t\t\tconst board2 = request.board2 === CardWildCard ? deck.getNextCard() : request.board2\n\t\t\tconst board3 = request.board3 === CardWildCard ? deck.getNextCard() : request.board3\n\t\t\tconst board4 = request.board4 === CardWildCard ? deck.getNextCard() : request.board4\n\t\t\tconst board5 = request.board5 === CardWildCard ? deck.getNextCard() : request.board5\n\n\t\t\th = SetHand7Card(h, 2, board1)\n\t\t\th = SetHand7Card(h, 3, board2)\n\t\t\th = SetHand7Card(h, 4, board3)\n\t\t\th = SetHand7Card(h, 5, board4)\n\t\t\th = SetHand7Card(h, 6, board5)\n\t\n\t\t\th = SetHand7Card(h, 0, card1)\n\t\t\th = SetHand7Card(h, 1, card2)\n\t\t\tlet playerHr = handCalculator.CalcHandRank(h)\n\t\t\tlet winnerHr = playerHr\n\t\t\tlet tieHands = 0\n\n\t\t\tfor(let i = 1; i < players; i++) {\t\t\t\t\n\t\t\t\th = SetHand7Card(h, 0, deck.getNextCard())\n\t\t\t\th = SetHand7Card(h, 1, deck.getNextCard())\n\t\t\t\t\n\t\t\t\tconst hr = handCalculator.CalcHandRank(h)\n\t\t\t\t\n\t\t\t\tif(hr > winnerHr) {\n\t\t\t\t\twinnerHr = hr\n\t\t\t\t\ttieHands = 0\n\t\t\t\t} else if(hr === winnerHr) {\n\t\t\t\t\ttieHands++\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(playerHr === winnerHr) {\n\t\t\t\tif(tieHands > 0) {\n\t\t\t\t\tties++\n\t\t\t\t\tpties += 1 / (tieHands + 1)\n\t\t\t\t} else {\n\t\t\t\t\twins++\n\t\t\t\t}\t\t\t\t\n\t\t\t} else {\n\t\t\t\t// loss\n\t\t\t\tlosses++\n\t\t\t}\n\t\t}\n\t\n\t\tresult.request = request\n\t\tresult.games = request.nsims\n\t\tresult.wins = wins\n\t\tresult.ties = ties\n\t\tresult.pties = pties\n\t\tresult.losses = losses\n\t}\n}\n","// @flow\n\nimport type { Card } from './card'\nimport type { Hand7 } from './hand'\nimport type { HandRank } from './handRank'\nimport type { HandCalculator } from './handCalculator'\n\nimport { CardRankSize, CardSuitSize, CardRankA } from './card'\nimport { GetHand7Card } from './hand'\nimport { MakeHandRank, SetCategory, SetCardRank } from './handRank'\n// import { HandRankCatHighCard, HandRankCatOnePair, HandRankCatTwoPair, HandRankCatSet, HandRankCatStraight, HandRankCatFlush, HandRankCatFullHouse, HandRankCatQuads, HandRankCatStraightFlush } from './handRank'\n// import { GetHsb16 } from './hsb'\n\nconst POKER_HAND = 5\n\nconst  HIGH = 0\nconst  PAIR = 1\nconst  TWOPAIR = 2\nconst  THREEKIND = 3\nconst  STRAIGHT = 4\nconst  FLUSH = 5\nconst  FULLHOUSE = 6\nconst  FOURKIND = 7\nconst  STRAIGHTFLUSH = 8\nconst  FIVEKIND = 9\n\nconst  ID_GROUP_SIZE  = (CardRankSize*CardRankSize*CardRankSize*CardRankSize*CardRankSize)\n\nexport class LokiHandCalculator implements HandCalculator {\n    CalcHandRank(hand: Hand7): HandRank {\n        return calcHandRank(hand)\n    }\n}\n\nfunction ID_ExistsStraightFlush(h: Array<number>, straight_high: Array<number>, major_suit: number): boolean {\n    let i: number\n    let straight: number\n    let high: number\n    const present: Array<boolean> = new Array<boolean>(CardRankSize)\n    \n    for (i=0;i<CardRankSize;i++) present[i]=false\n\n    for (i=0;i<h.length;i++)\n            if (getSuit(h[i]) === major_suit)\n                    present[getRank(h[i])] = true\n\n    straight = present[CardRankA] ? 1 : 0\n    high = 0\n    for (i=0;i<CardRankSize;i++) {\n        if (present[i]) {\n            if ( (++straight) >= POKER_HAND)\n                high = i\n        } else straight = 0\n    }\n    if (high === 0) return false\n    straight_high[0] = high\n    return true\n}\n\n/**********************************************************************/\n// DENIS PAPP'S HAND RANK IDENTIFIER CODE:\n/**********************************************************************/\n\n\n// suit: CardSuitSize means any\n// not_allowed: CardRankSize means any\n// returns ident value\nfunction ID_KickerValue(paired: Array<number>, kickers: number, not_allowed0: number, not_allowed1: number): number {\n    let i: number = CardRankA\n    let value: number = 0\n    while (kickers !== 0) {\n        while ( paired[i]===0 || i===not_allowed0 || i===not_allowed1)\n            i--\n        kickers--\n        value+=pow(CardRankSize,kickers)*i\n        i--\n    }\n    return value\n}\n\nfunction ID_KickerValueSuited(h: Array<number>, kickers: number, suit: number): number {\n    let i: number\n    let value: number=0\n\n    const present: Array<boolean> = new Array<boolean>(CardRankSize)\n    for (i=0;i<CardRankSize;i++) present[i] = false\n\n    for (i=0;i<h.length;i++)\n        if (getSuit(h[i]) === suit)\n            present[getRank(h[i])] = true\n\n    i = CardRankA\n    while (kickers !== 0) {\n        while (present[i] === false) i--\n        kickers--\n        value += pow(CardRankSize,kickers)*i\n        i--\n    }\n    return value\n}\n\nfunction calcHandRank(h: Hand7): number\n{\n    const bh: Array<Card> = new Array<number>(7)\n    \n    for(let i = 0; i < 7; i++)\n    {\n        bh[i] = GetHand7Card(h, i)\n    }\n    let loki: number = rankHand_loki(bh)\n    \n    // Convert Loki value into HandRank\n    const hc = Math.floor(loki / ID_GROUP_SIZE)\n    loki %= ID_GROUP_SIZE\n    let cr0 = loki % CardRankSize\n    loki = Math.floor(loki / CardRankSize)\n    let cr1 = loki % CardRankSize\n    loki = Math.floor(loki / CardRankSize)\n    let cr2 = loki % CardRankSize\n    loki = Math.floor(loki / CardRankSize)\n    let cr3 = loki % CardRankSize\n    loki = Math.floor(loki / CardRankSize)\n    let cr4 = loki % CardRankSize\n    loki = Math.floor(loki / CardRankSize)\n    \n    // Fix the full house situation\n    if(hc === FULLHOUSE)\n    {\n        cr4 = cr3 = cr2 = cr1\n        cr1 = cr0\n    }\n    else if(hc === PAIR)\n    {\n        cr4 = cr3\n    }\n    else if(hc === THREEKIND)\n    {\n        cr4 = cr3 = cr2\n    }\n    else if(hc === FOURKIND)\n    {\n        cr4 = cr3 = cr2 = cr1\n    }\n    else if(hc === TWOPAIR)\n    {\n        cr4 = cr3 = cr2\n        cr2 = cr1\n    }\n    else if(hc === STRAIGHT)\n    {\n        cr4 = cr0\n        cr3 = cr4-1\n        cr2 = cr3-1\n        cr1 = cr2-1\n        cr0 = cr1===0?12:cr1-1\n    }\n    else if(hc === STRAIGHTFLUSH)\n    {\n        cr4 = cr0\n        cr3 = cr4-1\n        cr2 = cr3-1\n        cr1 = cr2-1\n        cr0 = cr1===0?12:cr1-1\n    }\n\n    let hv: HandRank = MakeHandRank()\n    hv = SetCategory(hv, hc)\n    hv = SetCardRank(hv, 0, cr0)\n    hv = SetCardRank(hv, 1, cr1)\n    hv = SetCardRank(hv, 2, cr2)\n    hv = SetCardRank(hv, 3, cr3)\n    hv = SetCardRank(hv, 4, cr4)\n    \n    return hv\n}\n\n/**\n * Get a numerical ranking of this hand.\n * Uses java based code, so may be slower than using the native\n * methods, but is more compatible this way.\n *\n * Based on Denis Papp's Loki Hand ID code (id.cpp)\n * Given a 1-9 card hand, will return a unique rank \n     * such that any two hands will be ranked with the \n     * better hand having a higher rank. \n *\n * @param h a 1-9 card hand\n * @return a unique number representing the hand strength of the best \n * 5-card poker hand in the given 7 cards. The higher the number, the better\n * the hand is.\n */\nfunction rankHand_loki(h: Array<number>): number\n{\n    let straight: boolean = false\n    let flush: boolean = false\n    const max_hand: number = (h.length >= POKER_HAND ? POKER_HAND : h.length)\n    let r: number\n    let c: number\n    let rank: number\n    let suit: number\n    \n    // pair data\n    let group_size: Array<number> = new Array<number>(POKER_HAND+1)\n    let paired: Array<number> = new Array<number>(CardRankSize)\n    let pair_rank0: Array<number> = new Array<number>(POKER_HAND+1)\n    let pair_rank1: Array<number> = new Array<number>(POKER_HAND+1)\n\n    // straight\n    let straight_high: number = 0\n    let straight_size: number\n    // flush\n    let suit_size: Array<number> = new Array<number>(CardSuitSize)\n    let major_suit: number = 0\n\n    // determine pairs, dereference order data, check flush\n    for (r=0;r<CardRankSize;r++) paired[r] = 0\n    for (r=0;r<CardSuitSize;r++) suit_size[r] = 0\n    for (r=0;r<=POKER_HAND;r++) group_size[r] = 0\n    for (r=0;r<h.length;r++)\n    {\n        // int tmpint = r\n        rank = getRank(h[r])\n        suit = getSuit(h[r])\n        \n        paired[rank]++\n        group_size[paired[rank]]++\n        if (paired[rank] !== 0)\n            group_size[paired[rank]-1]--\n        if ((++suit_size[suit]) >= POKER_HAND)\n        {\n            flush = true\n            major_suit = suit\n        }\n    }\n    // Card.ACE low?\n    straight_size = paired[CardRankA] !== 0 ? 1 : 0\n\n    for (let i=0;i<(POKER_HAND+1);i++) {\n        pair_rank0[i] = CardRankSize\n        pair_rank1[i] = CardRankSize\n    }\n\n    // check for straight and pair data\n    for (r=0;r<CardRankSize;r++) {\n        // check straight\n        if (paired[r]!==0) {\n            if ( (++straight_size)>=POKER_HAND ) {\n                straight = true\n                straight_high =r\n            }\n        } else\n            straight_size = 0\n\n        // get pair ranks, keep two highest of each\n        c = paired[r]\n        if ( c !== 0 ) {\n            pair_rank1[c] = pair_rank0[c]\n            pair_rank0[c] = r\n        }\n    }\n\n    // now id type\n    let ident: number\n    \n    let str_hi: Array<number> = new Array<number>(1)\n    str_hi[0] = (straight_high)\n     \n    if (group_size[POKER_HAND] !== 0) {\n        ident = FIVEKIND*ID_GROUP_SIZE\n        ident+=pair_rank0[POKER_HAND]\n    } else if ( straight && flush && ID_ExistsStraightFlush(h,str_hi,major_suit)) {\n        straight_high = str_hi[0]\n        ident = STRAIGHTFLUSH*ID_GROUP_SIZE\n        ident+=straight_high\n    } else if (group_size[4] !== 0) {\n        ident = FOURKIND*ID_GROUP_SIZE\n        ident+=pair_rank0[4]*CardRankSize\n        pair_rank1[4] = CardRankSize    // just in case 2 sets quads\n        ident+=ID_KickerValue(paired,1,pair_rank0[4],pair_rank1[4])\n    } else if (group_size[3]>=2) {\n        ident = FULLHOUSE*ID_GROUP_SIZE\n        ident+=pair_rank0[3]*CardRankSize\n        ident+=pair_rank1[3]\n    } else if (group_size[3]===1 && group_size[2]!==0) {\n        ident = FULLHOUSE*ID_GROUP_SIZE\n        ident+=pair_rank0[3]*CardRankSize\n        ident+=pair_rank0[2]\n    } else if (flush) {\n        ident = FLUSH*ID_GROUP_SIZE\n        ident+=ID_KickerValueSuited(h,5,major_suit)\n    } else if (straight) {\n        ident = STRAIGHT*ID_GROUP_SIZE\n        ident+=straight_high\n    } else if (group_size[3]===1) {\n        ident = THREEKIND*ID_GROUP_SIZE\n        ident+=pair_rank0[3]*CardRankSize*CardRankSize\n        ident+=ID_KickerValue(paired,max_hand-3,pair_rank0[3],pair_rank1[3])\n    } else if (group_size[2]>=2) {\n        ident = TWOPAIR*ID_GROUP_SIZE\n        ident+=pair_rank0[2]*CardRankSize*CardRankSize\n        ident+=pair_rank1[2]*CardRankSize\n        ident+=ID_KickerValue(paired,max_hand-4,pair_rank0[2],pair_rank1[2])\n    } else if (group_size[2]===1) {\n        ident = PAIR*ID_GROUP_SIZE\n        ident+=pair_rank0[2]*CardRankSize*CardRankSize*CardRankSize\n        ident+=ID_KickerValue(paired,max_hand-2,pair_rank0[2],pair_rank1[2])\n    } else {\n        ident = HIGH*ID_GROUP_SIZE\n        ident+=ID_KickerValue(paired,max_hand,pair_rank0[2],pair_rank1[2])\n    }\n    return ident\n}\n\n\nfunction pow(n: number, p: number): number {\n    let res: number = 1\n    while (p-- > 0)\n        res *= n\n    return res\n}\n\nfunction getRank(x: number): number {\n    return Math.floor(x/CardSuitSize)\n}\n\nfunction getSuit(x: number): number {\n    return x%CardSuitSize\n}\n","// @flow\n\nimport type { Hand7 } from '../calc/hand'\nimport type { HandRank } from '../calc/handRank'\nimport type { CombosItem } from '../calc/handCombos'\nimport type { HandCalculator } from '../calc/handCalculator'\nimport type { HandEvalRequest, HandEvalResult } from '../calc/handEvaluator'\nimport type { CalcType, PoserApiInterface, ApiOptions, HandCalcResp, HandEvalResp, HandEvalPlayersResp } from \"./poserApi\"\n\nimport { MakeHandEvalResp } from \"./poserApi\"\nimport { StringToHand7, Hand7Bad, GetHand7HoleStr } from '../calc/hand'\nimport { GetHandCatStr, GetHandCategoryStr, HandRankStr } from '../calc/handRank'\nimport { HandRankBad } from '../calc/handRank'\nimport { Hand7Combos } from '../calc/handCombos'\nimport { HandEvaluator, MakeHandEvalRequest, MakeHandEvalResult, HandEvalRequestSetHand } from '../calc/handEvaluator'\n\nimport { BasicHandCalculator } from '../calc/basicHandCalculator'\nimport { LokiHandCalculator } from '../calc/lokiHandCalculator'\n\nexport class JsApi implements PoserApiInterface {\n\n\thandEvaluator: HandEvaluator\n\n\tconstructor() {\n\t\tthis.handEvaluator = new HandEvaluator()\n\t}\n\n    MakeHandCalculator(calcType: CalcType): HandCalculator {\n        let handCalculator: HandCalculator\n    \n        switch(calcType) {\n            case \"basic\":\n                handCalculator = new BasicHandCalculator()\n                break\n            case \"fast\":\n                throw new Error(\"calculator type not supported in web browser: \"+calcType)\n            case \"loki\":\n                handCalculator = new LokiHandCalculator()\n                break\n            default:\n                throw new Error(\"invalid calculator type: \"+calcType)\n        }\n        \n        return handCalculator\n    }\n    \n\tasync HandCalc(apiOptions: ApiOptions, handStr: string, calcType: CalcType): Promise<HandCalcResp> {\n\t\tconst handRes: [Hand7, string] = StringToHand7(handStr)\n\t\tconst hand = handRes[0]\n\t\tconst err = handRes[1]\n\n\t\tlet handErr: string = \"\"\n\t\tlet handRank: HandRank = HandRankBad\n\t\tlet holeStr: string = \"\"\n\t\tlet handCat: string = \"\"\n\t\tlet handCategory: string = \"\"\n\t\tlet handResult: string = \"\"\n\n\t\tif(err) {\n\t\t\thandErr = err\n\t\t} else {\n\t\t\tconst handCalc: HandCalculator = this.MakeHandCalculator(calcType)\n\t\t\thandRank = handCalc.CalcHandRank(hand)\n\t\t\thandCat = GetHandCatStr(handRank)\n\t\t\thandCategory = GetHandCategoryStr(handRank)\n\t\t\thandResult = HandRankStr(handRank)\n\t\t\tholeStr = GetHand7HoleStr(hand)\n\t\t}\n\t\tconst handValid: boolean = hand !== Hand7Bad\n\t\tconst combosResult: [Array<CombosItem>, number, number, number] = Hand7Combos(hand)\n\t\tconst handCombos: Array<CombosItem> = combosResult[0]\n\t\tconst betterCombos: number = combosResult[1]\n\t\tconst equalCombos: number = combosResult[2]\n\t\tconst worseCombos: number = combosResult[3]\n\n\t\tconst result: HandCalcResp = {\n\t\t\ttype: \"handCalc\",\n\t\t\terr:          err,\n\t\t\thandStr:      handStr,\n\t\t\thand:         hand,\n\t\t\thandValid:    handValid,\n\t\t\thandErr:      handErr,\n\t\t\thandRank:     handRank,\n\t\t\thole:         holeStr,\n\t\t\thandCat:      handCat,\n\t\t\thandCategory: handCategory,\n\t\t\thandResult:   handResult,\n\t\t\thandCombos:   handCombos,\n\t\t\tbetterCombos: betterCombos,\n\t\t\tequalCombos:  equalCombos,\n\t\t\tworseCombos:  worseCombos,\n\t\t}\n\n\t\treturn result\n\t}\n\t\n\tasync HandEval(apiOptions: ApiOptions, nsims: number, players: number, handStr: string, calcType: CalcType): Promise<HandEvalResp> {\n        const handCalc: HandCalculator = this.MakeHandCalculator(calcType)\n\t\tconst evalRequest: HandEvalRequest = MakeHandEvalRequest(nsims, players)\n\n\t\tlet err = HandEvalRequestSetHand(evalRequest, handStr)\n\n\t\tconst evalResult: HandEvalResult = MakeHandEvalResult(evalRequest, err)\n\t\tif(!err) {\n\t\t\tawait this.handEvaluator.eval(handCalc, evalRequest, evalResult)\n\t\t}\n\n\t\treturn MakeHandEvalResp(evalResult)\n\t}\n\n\tasync HandEvalPlayers(apiOptions: ApiOptions, nsims: number, handStr: string, calcType: CalcType): Promise<HandEvalPlayersResp> {\n        const handCalc: HandCalculator = this.MakeHandCalculator(calcType)\n\t\tconst handEvals: Array<HandEvalResp> = []\n\t\tlet err = \"\"\n\n\t\tfor(let players: number = 2; players <= 9; players++) {\n\t\t\tconst evalRequest: HandEvalRequest = MakeHandEvalRequest(nsims, players)\n\t\t\terr = HandEvalRequestSetHand(evalRequest, handStr)\n\t\t\tif(err) {\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tconst evalResult: HandEvalResult = MakeHandEvalResult(evalRequest, err)\n\t\t\tawait this.handEvaluator.eval(handCalc, evalRequest, evalResult)\n\t\t\thandEvals.push(MakeHandEvalResp(evalResult))\n\t\t\tif(evalResult.err) {\n\t\t\t\terr = evalResult.err\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tconst resp: HandEvalPlayersResp = {\n\t\t\ttype: \"handEvalPlayers\",\n\t\t\terr: err,\n\t\t\thandEvals: handEvals,\n\t\t}\n\n\t\treturn resp\n\t}\n}\n","// @flow\n\nimport type { PoserApiInterface } from \"./poserApi\"\nimport { WorkerApi } from './workerApi'\n\nexport class WasmApi extends WorkerApi implements PoserApiInterface {\n    constructor() {\n        super(\"wasm/wasm_worker.js\")\n    }\n}\n","// @flow\n\nimport type { CalcType, PoserApiInterface, ApiOptions } from \"./poserApi\"\nimport type { HandCalcResp, HandEvalResp, HandEvalPlayersResp, ErrResp } from \"./poserApi\"\n\nimport { MakeErrResp } from './poserApi'\n\ntype WorkerReq = {\n    api: string,\n    id: number,\n    apiOptions: ApiOptions,\n    args: Array<mixed>,\n}\n\ntype WorkerResp = {\n    api: string,\n    id: number,\n    args: Array<mixed>,\n    result: HandCalcResp | HandEvalResp | HandEvalPlayersResp | ErrResp\n}\n\nexport class WorkerApi implements PoserApiInterface {\n    id: number\n    promises: {[number]: any}\n    worker: Worker\n    workerScriptUrl: string\n\n    constructor(workerScriptUrl: string) {\n        this.workerScriptUrl = workerScriptUrl\n        this.id = 0\n        this.promises = {}\n    }\n\n\tsleep(ms: number): Promise<void> {\n\t\treturn new Promise(resolve => setTimeout(resolve, ms));\n\t}\n\n    checkCalcType(calcType: CalcType) {\n        switch(calcType) {\n            case \"basic\":\n            case \"loki\":\n                break\n            case \"fast\":\n                throw new Error(\"Calculator not supported in web browser: \"+calcType)\n            default:\n                throw new Error(\"Unknown calculator type: \"+calcType)\n        }\n    }\n\n    async _setup(): Promise<void> {\n        if(this.worker) {\n            // The module has been already setup\n            await this.sleep(0)\n        } else {\n            this.worker = new Worker(this.workerScriptUrl)\n            this.worker.onmessage = (e) => {\n                const data = ((e.data: any): WorkerResp)\n                // received a response\n                const id = data.id\n                const resolve = this.promises[id]\n                delete this.promises[id]\n                resolve(data.result)\n            }\n        }\n    }\n\n    post(api: string, apiOptions: ApiOptions, args: Array<mixed>): Promise<WorkerResp> {\n        return new Promise(resolve => {\n            // send a request\n            if(this.worker) {\n                this.promises[this.id] = resolve\n                const workerReq: WorkerReq = {api, id: this.id, apiOptions, args: [...args]}\n                this.worker.postMessage(workerReq)\n                this.id++\n            }\n        })\n    }\n\n    async HandCalc(apiOptions: ApiOptions, handStr: string, calcType: CalcType): Promise<HandCalcResp | ErrResp> {\n        try {\n            this.checkCalcType(calcType)\n            await this._setup()\n            const resp = await this.post(\"HandCalc\", apiOptions, [handStr, calcType])\n            return resp\n        } catch(ex) {\n            return MakeErrResp(ex.toString())\n        }\n    }\n\t\n    async HandEval(apiOptions: ApiOptions, nsims: number, players: number, handStr: string, calcType: CalcType): Promise<HandEvalResp | ErrResp> {\n        try {\n            this.checkCalcType(calcType)\n            await this._setup()\n            const resp = await this.post(\"HandEval\", apiOptions, [nsims, players, handStr, calcType])\n            return resp\n        } catch(ex) {\n            return MakeErrResp(ex.toString())\n        }\n    }\n\n    async HandEvalPlayers(apiOptions: ApiOptions, nsims: number, handStr: string, calcType: CalcType): Promise<HandEvalPlayersResp | ErrResp> {\n        try {\n            this.checkCalcType(calcType)\n            await this._setup()\n            const resp = await this.post(\"HandEvalPlayers\", apiOptions, [nsims, handStr, calcType])\n            return resp\n        } catch(ex) {\n            return MakeErrResp(ex.toString())\n        }\n    }\n}\n","// @flow\n\nimport type { Hand7 } from '../calc/hand'\nimport type { CombosItem } from '../calc/handCombos'\nimport type { HandEvalRequest, HandEvalResult } from '../calc/handEvaluator'\n\nimport { JsApi } from \"./jsApi\"\nimport { RestApi } from \"./restApi\"\nimport { WasmApi } from \"./wasmApi\"\n\nexport type ApiType = \"localjs\" | \"js\" | \"gojs\" | \"wasm\" | \"rest\"\nexport type CalcType = \"basic\" | \"fast\" | \"loki\"\nexport type RespType = \"err\" | \"handCalc\" | \"handEval\" | \"handEvalPlayers\"\n\nexport type ErrResp = {\n\ttype: \"err\",\n\terr: string,\n}\n\nexport type HandCalcResp = {\n\ttype: \"handCalc\",\n\terr:          string,\n\thandStr:      string,\n\thand:         Hand7,\n\thandValid:    boolean,\n\thandErr:      string,\n\thandRank:     number,\n\thole:         string,\n\thandCat:      string,\n\thandCategory: string,\n\thandResult:   string,\n\tbetterCombos: number,\n\tequalCombos:  number,\n\tworseCombos:  number,\n\thandCombos:   Array<CombosItem>,\n}\n\nexport type WarGamesResp = Array<string>\nexport type HandEvalResp = {\n\ttype: \"handEval\",\n\trequest: HandEvalRequest,\n\terr: string,\n\tfinalPlayers: number,\n\n\tgames: number,\n\twins: number,\n\tties: number,\n\tpties: number, // pot ties, number of ties expressed as number of pots\n\tlosses: number,\n\n\t// win probablity: a number between 0 and 1\n\t// the probability of winning the pot, includes the proportional ties\n\twp: number,\n\n\t// winning odds (loss / win ratio)\n\t// represented as wo : 1\n\t// if wp is 1 then wo is 0\n\t// if wp is 0 then wo is Infinity\n\two: number,\n\n\t// expected return: the average profit or loss, is case you decide to bet\n\t// the value of the bet is subtracted\n\t// the ev is a number between (-1) and (number of players - 1)\n\ter: number,\n}\n\nexport type HandEvalPlayersResp = {\n\ttype: \"handEvalPlayers\",\n\terr: string,\n\thandEvals: Array<HandEvalResp>,\n}\n\nexport type ApiOptions = {\n\tapiType: \"localjs\"|\"js\"|\"gojs\"|\"wasm\",\n} | {\n\tapiType: \"rest\",\n\tserver: string, \n\tthreads: number,\n}\n\nexport interface PoserApiInterface {\n\tHandCalc(apiOptions: ApiOptions, handStr: string, calcType: CalcType): Promise<HandCalcResp | ErrResp>;\n\tHandEval(apiOptions: ApiOptions, nsims: number, players: number, handStr: string, calcType: CalcType): Promise<HandEvalResp | ErrResp>;\n\tHandEvalPlayers(apiOptions: ApiOptions, nsims: number, handStr: string, calcType: CalcType): Promise<HandEvalPlayersResp | ErrResp>;\n\tWarGames(apiOptions: ApiOptions): Promise<WarGamesResp | ErrResp>;\n\tHandWar(apiOptions: ApiOptions, nsims: number, players: number, villain: string, hero: string, n: number, ranks: number, game: string): Promise<HandEvalResp | ErrResp>;\n}\n\nexport class PoserApi implements PoserApiInterface {\n\t\n\tlocaljsApi: PoserApiInterface\n\tjsApi: PoserApiInterface\n\tgojsApi: PoserApiInterface\n\trestApi: PoserApiInterface\n\twasmApi: PoserApiInterface\n\n\tconstructor(secret: string) {\n\t\tthis.jsApi = new JsApi()\n\t\tthis.restApi = new RestApi(secret)\n\t\tthis.wasmApi = new WasmApi()\n\t}\n\n\tgetApiInterface(apiOptions: ApiOptions): PoserApiInterface {\n\t\tlet apiInterface: PoserApiInterface\n\t\tswitch(apiOptions.apiType) {\n\t\t\tcase \"js\":\n\t\t\t\tapiInterface = this.jsApi\n\t\t\t\tbreak\n\t\t\tcase \"wasm\":\n\t\t\t\tapiInterface = this.wasmApi\n\t\t\t\tbreak\n\t\t\tcase \"rest\":\n\t\t\t\tapiInterface = this.restApi\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"invalid apiType: \"+apiOptions.apiType)\n\t\t}\n\n\t\treturn apiInterface\n\t}\n\n\tasync HandCalc(apiOptions: ApiOptions, handStr: string, calcType: CalcType): Promise<HandCalcResp | ErrResp> {\n\t\ttry {\n\t\t\tconst apiInterface: PoserApiInterface = this.getApiInterface(apiOptions)\n\t\t\treturn await apiInterface.HandCalc(apiOptions, handStr, calcType)\n\t\t} catch(ex) {\n\t\t\treturn MakeErrResp(ex.toString())\n\t\t}\n\t}\n\t\n\tasync HandEval(apiOptions: ApiOptions, nsims: number, players: number, handStr: string, calcType: CalcType): Promise<HandEvalResp | ErrResp> {\n\t\ttry {\n\t\t\tconst apiInterface: PoserApiInterface = this.getApiInterface(apiOptions)\n\t\t\treturn await apiInterface.HandEval(apiOptions, nsims, players, handStr, calcType)\n\t\t} catch(ex) {\n\t\t\treturn MakeErrResp(ex.toString())\n\t\t}\n\t}\n\n\tasync HandEvalPlayers(apiOptions: ApiOptions, nsims: number, handStr: string, calcType: CalcType): Promise<HandEvalPlayersResp | ErrResp> {\n\t\ttry {\n\t\t\tconst apiInterface: PoserApiInterface = this.getApiInterface(apiOptions)\n\t\t\treturn await apiInterface.HandEvalPlayers(apiOptions, nsims, handStr, calcType)\n\t\t} catch(ex) {\n\t\t\treturn MakeErrResp(ex.toString())\n\t\t}\n\t}\n\n\n\tasync WarGames(apiOptions: ApiOptions): Promise<WarGamesResp | ErrResp> {\n\t\ttry {\n\t\t\tconst apiInterface: PoserApiInterface = this.getApiInterface(apiOptions)\n\t\t\treturn await apiInterface.WarGames(apiOptions)\n\t\t} catch(ex) {\n\t\t\treturn MakeErrResp(ex.toString())\n\t\t}\n\t}\n\n\tasync HandWar(apiOptions: ApiOptions, nsims: number, players: number, villain: string, hero: string, n: number, ranks: number, game: string): Promise<HandEvalResp | ErrResp> {\n\t\ttry {\n\t\t\tconst apiInterface: PoserApiInterface = this.getApiInterface(apiOptions)\n\t\t\treturn await apiInterface.HandWar(apiOptions, nsims, players, villain, hero, n, ranks, game)\n\t\t} catch(ex) {\n\t\t\treturn MakeErrResp(ex.toString())\n\t\t}\n\t}\n\n}\n\nexport function MakeErrResp(err: string): ErrResp {\n\tif(err.startsWith(\"Error: \")) {\n\t\terr = err.substring(7)\n\t}\n\treturn {\n\t\ttype: \"err\",\n\t\terr,\n\t}\n}\n\nexport function MakeHandEvalResp(result: HandEvalResult): HandEvalResp {\n\tconst resp: HandEvalResp = {\n\t\ttype: \"handEval\",\n\t\trequest: result.request,\n\t\terr: result.err,\n\t\tfinalPlayers: result.finalPlayers ? result.finalPlayers : result.request.players,\n\t\n\t\tgames: result.games,\n\t\twins: result.wins,\n\t\tties: result.ties,\n\t\tpties: result.pties, // pot ties, number of ties expressed as number of pots\n\t\tlosses: result.losses,\n\t\twp: 0,\n\t\two: 0,\n\t\ter: 0,\n\t}\n\n\tRecalcHandEvalResp(resp)\n\n\treturn resp\n}\n\nexport function  AddHandEvalResp(resp: HandEvalResp, result: HandEvalResp): void {\n\tif(!resp.request) {\n\t\tresp.request = result.request\n\t}\n\n\tif(resp.err === \"\") {\n\t\tresp.err = result.err\n\t}\n\n\tresp.games += result.games\n\tresp.wins += result.wins\n\tresp.ties += result.ties\n\tresp.pties += result.pties // pot ties, number of ties expressed as number of pots\n\tresp.losses += result.losses\n}\n\nexport function RecalcHandEvalResp(resp: HandEvalResp): void {\n\t// calc pp, er (expected return), po, \n\tresp.wp = (resp.wins + resp.pties) / resp.games\n\tresp.wo = resp.wp === 0 ? Infinity : 1 / resp.wp - 1\n\tconst bet = 1\n\tconst pot = bet * resp.finalPlayers\n\tresp.er = resp.wp * pot - bet\n}\n","// @flow\n\nimport { PoserApi } from \"./poserApi\"\n\nimport type { CalcType, ErrResp, HandCalcResp, HandEvalResp, HandEvalPlayersResp } from './poserApi'\nimport type { PoserApiInterface, ApiOptions } from './poserApi'\n\nimport { MakeErrResp, AddHandEvalResp, RecalcHandEvalResp } from './poserApi'\n\nexport class PoserWorkersApi implements PoserApiInterface {\n\n\tworkers: number\n\tposerApis: Array<PoserApiInterface>\n\n\tconstructor(workers: number, secret: string) {\n\t\tthis.workers = workers\n\t\tthis.poserApis = new Array<PoserApiInterface>(workers)\n\t\tfor(let i = 0; i < workers; i++) {\n\t\t\tthis.poserApis[i] = new PoserApi(secret)\n\t\t}\n\t}\n\n\tasync HandCalc(apiOptions: ApiOptions, handStr: string, calcType: CalcType): Promise<HandCalcResp | ErrResp> {\n\t\treturn await this.poserApis[0].HandCalc(apiOptions, handStr, calcType)\n\t}\n\t\n\tasync HandEval(apiOptions: ApiOptions, nsims: number, players: number, handStr: string, calcType: CalcType): Promise<HandEvalResp | ErrResp> {\n\t\tlet workers = this.workers\n\n\t\tconst portion = Math.floor(nsims / workers)\n\t\tconst remain = nsims - portion * workers\n\t\tconst promises = Array<Promise<HandEvalResp | ErrResp>>(workers)\n\t\tfor(let i = 0; i < workers; i++) {\n\t\t\tconst n = portion + (i < remain ? 1 : 0)\n\t\t\tpromises[i] = this.poserApis[i].HandEval(apiOptions, n, players, handStr, calcType)\n\t\t}\n\n\t\tlet resp: HandEvalResp | ErrResp | null = null\n\n\t\t// Collect all the promises\n\t\tfor(let i = 0; i < workers; i++) {\n\t\t\ttry {\n\t\t\t\tconst r: HandEvalResp | ErrResp = await promises[i]\n\t\t\t\tif(!resp) {\n\t\t\t\t\tresp = r\n\t\t\t\t} else if(!resp.err && r.err) {\n\t\t\t\t\tresp.err = r.err\n\t\t\t\t} else if(!resp.err && resp.type === \"handEval\" && r.type === \"handEval\") {\n\t\t\t\t\tAddHandEvalResp(resp, r)\n\t\t\t\t}\n\t\t\t} catch(ex) {\n\t\t\t\tif(!resp) {\n\t\t\t\t\tresp = MakeErrResp(ex.toString())\n\t\t\t\t} else if(!resp.err) {\n\t\t\t\t\tresp.err = ex.toString()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(resp && resp.type === \"handEval\" && !resp.err) {\n\t\t\tRecalcHandEvalResp(resp)\n\t\t}\n\t\t\n\t\treturn resp || MakeErrResp(\"no results collected\")\n\t}\n\n\tgetHandStr(handStr: string, players: number): string {\n\t\tlet hStr = handStr\n\n\t\t// find out if there are any trailing _\n\t\tlet index = hStr.length\n\t\twhile(index > 0 && hStr.charAt(index-1) === '_') {\n\t\t\tindex--\n\t\t}\n\t\t// index is now pointing at first character of the underscore trail\n\t\tlet hStr1 = hStr.substring(0, index)\n\t\tconst hStr2 = hStr.substring(index)\n\n\t\t// cut off the trailing player in hStr1\n\t\tif(hStr1.endsWith(\"p\")) {\n\t\t\thStr1 = hStr1.substr(0, hStr1.length - 2)\n\t\t}\n\n\t\t// now figure out the players specified in the middle\n\t\tconst pi = hStr1.lastIndexOf(\"p\")\n\t\tif(pi <= 0) {\n\t\t\t// no players specified something's wrong\n\t\t\treturn \"\"\n\t\t}\n\t\tconst n = hStr1.charCodeAt(pi - 1) - 48\n\t\tif(n < players) {\n\t\t\t// to many players for this hand\n\t\t\treturn \"\"\n\t\t}\n\n\t\tconst suffix = String.fromCharCode(48+players)+\"p\"\n\t\treturn hStr1 + suffix + hStr2\n\t}\n\n\tasync HandEvalPlayers(apiOptions: ApiOptions, nsims: number, handStr: string, calcType: CalcType): Promise<HandEvalPlayersResp | ErrResp> {\n\t\tconst handEvals: Array<HandEvalResp> = []\n\t\tlet err = \"\"\n\n\t\tconst promises = Array<Promise<HandEvalResp | ErrResp>>(0)\n\n\t\tlet hStr = handStr.trim().toLowerCase()\n\t\tif(hStr.charAt(1) !== 'p') {\n\t\t\t// doesn't start with players specification, let's apply the original approach\n\t\t\tfor(let players: number = 2; players <= 9; players++) {\n\t\t\t\tpromises[players - 2] = this.HandEval(apiOptions, nsims, players, hStr, calcType)\n\t\t\t}\n\t\t} else {\n\t\t\tfor(let players: number = 2; players <= 9; players++) {\n\t\t\t\tconst hStrN = this.getHandStr(hStr, players)\n\t\t\t\tif(hStrN) {\n\t\t\t\t\tpromises[players - 2] = this.HandEval(apiOptions, nsims, players, hStrN, calcType)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor(let i = 0; i < promises.length; i++) {\n\t\t\tconst resp: HandEvalResp = await promises[i]\n\t\t\thandEvals.push(resp)\n\t\t\tif(resp.err) {\n\t\t\t\terr = resp.err\n\t\t\t}\n\t\t}\n\n\t\tconst resp: HandEvalPlayersResp = {\n\t\t\ttype: \"handEvalPlayers\",\n\t\t\terr: err,\n\t\t\thandEvals: handEvals,\n\t\t}\n\n\t\treturn resp\n\t}\n}\n","import { connect } from 'react-redux'\n\nimport { engine, getState } from '../../engine'\n\nimport { chopHand, isValidHand } from '../../utils/hand'\n\nimport { text2code, code2text, c_CARD_SIZE, c_2p, c_9p } from '../../utils/cards'\n\nimport splice from '../../utils/splice'\n\nimport { PoserWorkersApi } from '../../api/poserWorkersApi'\nimport { Deck } from '../../calc/deck';\n\nimport { fromJS, OrderedMap } from 'immutable-sorted'\n\nimport '../../utils/wasm_exec'\n\nconst e = engine.subEngine('home')\nconst af = e.actionFactory();\nconst se = e.subEngine('settings')\nconst saf = se.actionFactory();\n\nconst mapStateToProps = (state, repoHead, ownProps) => ({\n  zoneActions: repoHead.get(\"zoneActions\"), //.filter((v, k)=>k.indexOf(\"-\")<0),\n  zoneDistTables: repoHead.get(\"zoneDistTables\"),\n  actionPath: state.get(\"actionPath\"),\n  hand: state.get(\"hand\"),\n  handArr: state.get(\"handArr\"),\n  handValid: state.get(\"handValid\"),\n  handEval: state.get(\"handEval\"),\n  handEvalPlayers: state.get(\"handEvalPlayers\"),\n  handResult: state.get(\"handResult\"),\n  handCombos: state.get(\"handCombos\"),\n  handCardsCnt: state.get(\"handCardsCnt\"),\n  err: state.get(\"err\"),\n  currentSuit: state.get(\"currentSuit\"),\n  settings: state.get(\"settings\"),\n  tanking: state.get(\"tanking\"),\n  tankingMs: state.get(\"tankingMs\"),\n})\n\nconst mapRepoToProps = (repo, ownProps) => mapStateToProps(e.get(e.head(repo)), e.head(repo), ownProps)\n\nlet recalcPending = false\nlet poserApi\n\nconst runHand = async (dispatch, hand) => {\n  const settings = se.get(getState())\n  const apiType = settings.get(\"apiType\")\n  const server = settings.get(\"apiServer\")\n  const calcType = settings.get(\"calcType\")\n  const nSims = settings.get(\"nSims\")\n  const workers = settings.get(\"workers\")\n  const jstSecret = settings.get(\"jwtSecret\")\n  const players = settings.get(\"players\")\n  const threads = settings.get(\"threads\")\n  const playersChart = settings.get(\"playersChart\")\n  const playersTable = settings.get(\"playersTable\")\n  const tanking = e.get(getState(), \"tanking\")\n\n  if(tanking) {\n    // Don't run if other calculation is in progress\n    recalcPending = true\n    return\n  }\n\n  if(!poserApi || poserApi.workers !== workers) {\n    poserApi = new PoserWorkersApi(workers, jstSecret)\n  }\n\n  try {\n    const startTimeMs = Date.now()\n    let err = \"\"\n    dispatch(af.value(\"tanking\", true))\n    const apiOptions = apiType === \"rest\" ? {apiType, server, threads} : {apiType}\n    const handCalcResp = await poserApi.HandCalc(apiOptions, hand, calcType)\n    if(handCalcResp.err) {\n      err = handCalcResp.err\n    } else {\n      const handCombos = handCalcResp.handCombos\n      dispatch(af.value(\"handCombos\", handCombos))\n      delete handCalcResp.handCombos\n      dispatch(af.value(\"handResult\", handCalcResp))\n\n      let handEvalResult = await poserApi.HandEval(apiOptions, nSims, players, hand, calcType)\n      if(handEvalResult.err) {\n        err = handEvalResult.err\n      } else {\n        handEvalResult = fromJS(handEvalResult)\n        let handEvalPlayers = OrderedMap()\n        dispatch(af.value(\"handEval\", handEvalResult))\n        if(playersChart || playersTable) {\n          const handEvalPlayersResp = await poserApi.HandEvalPlayers(apiOptions, nSims, hand, calcType)\n          if(handEvalPlayersResp.err) {\n            err = handEvalPlayersResp.err\n          } else {\n            for(let i = 0; i < handEvalPlayersResp.handEvals.length; i++) {\n              let handEvalResultN = handEvalPlayersResp.handEvals[i]\n              const playersN = handEvalResultN.finalPlayers\n              handEvalResultN = fromJS(handEvalResultN)\n              handEvalPlayers = handEvalPlayers.set(playersN, handEvalResultN)\n            }\n          }\n        }\n        dispatch(af.value(\"handEvalPlayers\", handEvalPlayers))\n      }\n    }\n    dispatch(af.value(\"err\", err))\n    dispatch(af.value(\"tanking\", false))\n    const endTimeMs = Date.now()\n    dispatch(af.value(\"tankingMs\", endTimeMs - startTimeMs))\n\n    if(recalcPending) {\n      recalcPending = false;\n      recalc(dispatch)\n    }\n  } catch(e) {\n    const err = e.toString()\n    dispatch(af.value(\"err\", err))\n    dispatch(af.value(\"tanking\", false))\n    if(recalcPending) {\n      recalcPending = false;\n      recalc(dispatch)\n    }\n  }\n}\n\nconst setHand = (dispatch, hand) => {\n  dispatch(af.value(\"hand\", hand))\n  if(isValidHand(chopHand(hand, 7))) {\n    runHand(dispatch, hand)\n  } else {\n    dispatch(af.value(\"handResult\", {}))\n  }\n}\n\nconst recalc = (dispatch) => {\n  const hand = e.get(getState(), \"hand\")\n  if(hand.length === 0) {\n    return\n  }\n  setHand(dispatch, hand)\n}\n\nconst addCards = (dispatch, cards) => {\n  const state = getState()\n  const origHand = e.get(state, \"hand\")\n  const cardsCnt = e.get(state, \"handCardsCnt\")\n\n  let selectionStart = origHand.length\n  let selectionEnd = selectionStart\n  let hand = origHand\n\n  for(let i = 0; i < cards.length; i++) {\n    let card = cards[i]\n    const n = hand.indexOf(card)\n    const code = text2code(card)\n    if(n >= 0) {\n      selectionStart = n\n      selectionEnd = n+card.length\n      if(c_2p <= code && code <= c_9p) {\n        card = \"\"\n      } else {\n        card=\"__\"\n      }\n    } else if(cardsCnt >= 7 && !(c_2p <= code && code <= c_9p)) {\n      continue\n    } else {\n      const m = hand.indexOf(\"__\")\n      if(m >= 0) {\n        selectionStart = m\n        if(c_2p <= code && code <= c_9p) {\n          selectionEnd = selectionStart\n        } else {\n          selectionEnd = selectionStart + 2\n        }\n      }\n    }\n    hand = splice(hand, selectionStart, selectionEnd - selectionStart, card)\n  }\n  setHand(dispatch, hand)\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  setActionPath: (ap) => dispatch(af.value(\"actionPath\", ap)),\n\n  setHand: (hand) => setHand(dispatch, hand),\n\n  runHand: (hand) => runHand(dispatch, hand),\n\n  incPlayers: () => {\n    const hand = e.get(getState(), \"hand\")\n    const players = se.get(getState(), \"players\")\n    if(players < 2) {\n      dispatch(saf.value(\"players\", 2))\n      setHand(dispatch, hand)\n    } else if(players < 9) {\n      dispatch(saf.value(\"players\", players+1))\n      setHand(dispatch, hand)\n    }\n  },\n\n  decPlayers: () => {\n    const hand = e.get(getState(), \"hand\")\n    const players = se.get(getState(), \"players\")\n    if(players > 9) {\n      dispatch(saf.value(\"players\", 9))\n      setHand(dispatch, hand)\n    } else if(players > 2) {\n      dispatch(saf.value(\"players\", players-1))\n      setHand(dispatch, hand)\n    }\n  },\n\n  clear: () => {\n    setHand(dispatch, \"______________\")\n  },\n\n  recalc: () => {\n    recalc(dispatch)\n  },\n\n  del: () => {\n    const hand = e.get(getState(), \"hand\")\n    if(hand.length === 0) {\n      return\n    }\n    let selectionStart = hand.length\n    while(hand.substr(selectionStart-1, 1) === \"_\") {\n      selectionStart--\n    }\n\n    let text = \"__\"\n    if(selectionStart > 0) {\n      let n = 1\n      if(selectionStart >= 2) {\n        const card = text2code(hand.substr(selectionStart-2, 2))\n        if((0 <= card && card < c_CARD_SIZE) || card === -1) {\n          n = 2\n        } else if(c_2p <= card && card <= c_9p) {\n          n = 2\n          text = \"\"\n        }\n      }\n      const newHand = splice(hand, selectionStart-n, n, text)\n      setHand(dispatch, newHand)\n    }\n  },\n\n  addCard: (card) => {\n    addCards(dispatch, [card])\n  },\n\n  addRandom: () => {\n    const deck = new Deck()\n    const handArr = e.get(getState(), \"handArr\")\n    let n = 0\n    for(let i = 0; i < handArr.size; i++) {\n      const card = handArr.get(i)\n      if(0 <= card && card < c_CARD_SIZE) {\n        deck.removeCard(card)\n        n++\n      }\n    }\n    const cards = []\n    for(let i = n; i < 7; i++) {\n      const card = code2text(deck.getNextCard())\n      cards.push(card)\n    }\n    addCards(dispatch, cards)\n  },\n\n  setCurrentSuit: (suite) => {\n    dispatch(af.value(\"currentSuit\", suite))\n  },\n\n})\n\nconst HomeContainer = connect(\n  mapRepoToProps,\n  mapDispatchToProps\n)\n\nexport default HomeContainer\n","import React, { Component } from 'react'\n\nimport { chopHand } from '../../utils/hand'\n\nimport { List } from 'immutable-sorted'\n\nimport Card from './Card'\n\nexport default class Hand extends Component {\n\n  constructor(props) {\n    super(props)\n    this.hand0 = \"\"\n    this.comp0 = null\n  }\n\n  render0() {\n    const props = this.props\n    const hand = props.hand || props.children\n    const arr = props.handArr?props.handArr:List(chopHand(hand, 2))\n\n    let n = 0\n    for(let i = 0; i < arr.size; i++) {\n      const code = arr.get(i)\n      if(-1 <= code && code < 52) {\n        // normal card\n        n++\n        if(n >= 2) {\n          n = i+1\n          break\n        }\n      }\n    }\n\n    let i = 0\n    let comp = <div>\n      {arr.size > 0 ? arr.slice(0, n).map(code => <Card key={i++} html={true} code={code}/>) : <Card key={i++} html={true} code={-1}/>}\n      {arr.size <= 2 ? null : <>&nbsp;&nbsp;\n      {arr.slice(n).map(code => <Card key={i++} html={true} code={code}/>)}</>}\n    </div>\n    return comp\n  }\n\n  render() {\n    const props = this.props\n    const hand = props.hand || props.children\n    if(!this.hand0 || this.hand0 !== hand) {\n      this.hand0 = hand\n      this.comp0 = this.render0()\n    }\n    return this.comp0\n  }\n}\n","import React from 'react'\n\nimport css from './Category.module.css'\n\nconst Cat2Color = (cat) => {\n  let color\n  switch(cat) {\n    case \"SF\":\n        color = \"#ff4e4e\" // red\n        break\n    case \"4\":\n        color = \"#cf9cff\" // magenta\n        break\n    case \"3+2\":\n        color = \"#9c9cff\" // blue\n        break\n    case \"F\":\n        color = \"#ff9c9c\" // red\n        break\n    case \"S\":\n        color = \"#9cffff\" // cyan\n        break\n    case \"3\":\n        color = \"#9cff9c\" // green\n        break\n    case \"2+2\":\n        color = \"#ffcf9c\" // orange\n        break\n    case \"2\":\n        color = \"#ffff9c\" // yellow\n        break\n    case \"1\":\n        color = \"white\"\n        break\n    case \"error\":\n        color = \"pink\" // \"#ff1010\"\n        break\n    default:\n      color = \"grey\"\n      break\n  }\n  return color\n}\n\nconst Cat2Cn = (cat) => {\n  let cn\n  switch(cat) {\n    case \"error\":\n      cn = css.err\n      break\n    default:\n      cn = css.cat\n      break\n  }\n\n  return cn\n}\n\nconst Category = (props) => (\n  <span title={props.category} style={{...props.style, backgroundColor: Cat2Color(props.cat)}} className={Cat2Cn(props.cat)}>\n    &nbsp;\n    {props.children}\n    &nbsp;\n  </span>\n)\n\nexport default Category\n","import React from 'react'\n\nimport Card from './Card'\nimport Category from './Category'\n\nconst EvalResult = (props) => {\n  const style = {fontSize:18, height: 26}\n  const handResult = props.handResult\n  const handEval = props.handEval\n  const handCardsCnt = props.handCardsCnt\n  const settings = props.settings\n  let err\n  if(props.err) {\n    err = <Category style={style} cat={\"error\"}>{props.err}</Category>\n  } else if(handCardsCnt < 2) {\n    err = <Category style={style} cat={\"1\"}>{\"Enter more cards ...\"}</Category>\n  } else if(!props.handValid) {\n    err = <Category style={style} cat={\"1\"}>{\"Enter missing cards\"}</Category>\n  } else if(props.tanking && props.settings.get(\"nSims\") >= 500000) {\n    err = <Category style={style} cat={\"F\"}>{\"Tanking ...\"}</Category>\n  } else if(handResult.isEmpty()) {\n    err = <Category style={style} cat={\"error\"}>{\"no result\"}</Category>\n  } else if(!handResult.get(\"handValid\")) {\n    err = <Category style={style} cat={\"error\"}>{handResult.get(\"handErr\")}</Category>\n  }\n\n  const er = handEval.get(\"er\")\n  const wp = handEval.get(\"wp\")\n  const wo = handEval.get(\"wo\")\n  const cat = er >= 0.25 ? \"3\" : er <= -0.25 ? \"F\" : er >= 0 ? \"1\" : \"2\"\n\n  return (<>\n  {err?err:\n  <div>\n    <Card title=\"Hole Card1\" style={style} html={true}>{handResult.get(\"hole\").substr(0, 2)}</Card>\n    <Card title=\"Hole Card2\" style={style} html={true}>{handResult.get(\"hole\").substr(2, 2)}</Card>\n    &nbsp;\n    {handCardsCnt >= 5 ? <Category title=\"Category\" style={style} cat={handResult.get(\"handCat\")}>{handResult.get(\"handCategory\")}</Category>:null}\n    &nbsp;\n    {handCardsCnt >= 5 ? <Category title=\"Result\" style={style} cat={handResult.get(\"handCat\")}>{handResult.get(\"handResult\")}</Category>:null}\n    &nbsp;\n    {settings.get(\"latency\") ? <Category title=\"Latency\" style={style} cat=\"1\">{Math.floor(props.tankingMs/10)/100}s</Category>:null}\n  </div>\n  }\n  <div>\n    <Category title=\"Return value (%)\" style={style} cat={cat}>ER {parseFloat(er*100).toFixed(0)}%</Category>\n    &nbsp;\n    <Category title=\"Win probabilty (%)\" style={style} cat={cat}>WP {parseFloat(wp*100).toFixed(0)}%</Category>\n    &nbsp;\n    <Category title=\"Win odds (loss : win) presented as n : 1\" style={style} cat={cat}>WO {wo > 1000 ? \">100\" : wo > 10 ? parseFloat(wo).toFixed(0) : parseFloat(wo).toFixed(2)}:1</Category>\n  </div>\n  </>)\n}\n\nexport default EvalResult\n","import React from 'react'\nimport { BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport { GetCatStr } from '../../calc/handRank'\n\nimport css from './EvalPlayersChart.module.css'\n\nconst EvalPlayersChart = (props) => {\n    const handEval = props.handEval\n\n    if(!handEval) {\n      return null\n    }\n  \n    const players = handEval.getIn([\"request\", \"players\"])\n    const heroWpCats = handEval.get(\"heroWpCats\")\n    const heroLpCats = handEval.get(\"heroLpCats\")\n    const villainWpCats = handEval.get(\"villainWpCats\")\n    const villainLpCats = handEval.get(\"villainLpCats\")\n\n    if(!heroWpCats) {\n      return null\n    }\n\n    const data = heroWpCats.map((v, i) => {\n      return {\n        cat: GetCatStr(i),\n        hlp: -Math.floor(heroLpCats.get(i)*10000)/100,\n        hwp: Math.floor(v*10000)/100,\n        her: Math.floor(v*(players-2)*10000)/100,\n        vlp: -Math.floor(villainLpCats.get(i)*10000)/100,\n        vwp: Math.floor(villainWpCats.get(i)*10000)/100,\n        ver: Math.floor(-villainLpCats.get(i)*(players-2)*10000)/100,\n      }\n    }\n    ).toIndexedSeq().toArray()\n\n    const style = {fontSize: 12}\n\n    return (\n    <BarChart style={style} className={css.chart}\n      layout=\"horizontal\"\n      width={320}\n      height={250}\n      data={data}\n      stackOffset=\"sign\"\n      margin={{ top: 5, right: 5, left: 5, bottom: 5 }}\n    >\n      <CartesianGrid stroke=\"#c0c0c0\" strokeDasharray=\"3 3\"/>\n      <XAxis dataKey=\"cat\" />\n      <YAxis width={40} unit=\"%\" yAxisId=\"left\" />\n      <Legend />\n      <Tooltip />\n      <Bar yAxisId=\"left\" type=\"monotone\" dataKey=\"hlp\" stackId=\"h\" fill=\"#339933\"/>\n      <Bar yAxisId=\"left\" type=\"monotone\" dataKey=\"hwp\" stackId=\"h\" fill=\"green\" />\n      <Bar yAxisId=\"left\" type=\"monotone\" dataKey=\"her\" stackId=\"h\" fill=\"lightgreen\"/>\n      <Bar yAxisId=\"left\" type=\"monotone\" dataKey=\"vlp\" stackId=\"v\" fill=\"#3333FF\" />\n      <Bar yAxisId=\"left\" type=\"monotone\" dataKey=\"vwp\" stackId=\"v\" fill=\"blue\" />\n      <Bar yAxisId=\"left\" type=\"monotone\" dataKey=\"ver\" stackId=\"v\" fill=\"lightblue\" />\n    </BarChart>\n    )\n  }\n\nexport default EvalPlayersChart\n","import React from 'react'\n\nimport Category from \"./Category\"\nimport EvalCatsChart from '../components/EvalCatsChart'\nimport { GetCatStr, GetCategoryStr } from '../../calc/handRank'\n\nimport '../Table/Table.css'\nimport { List } from 'immutable-sorted';\n\nconst catFmt = (handEval, field, cat) => {\n  const pf = handEval.get(field)\n  if(!pf) {\n    return \"\"\n  }\n  let p = pf.get(cat)\n  if(!p) {\n    p = pf.get(cat.toString())\n  }\n  if(!p) {\n    return \"\"\n  }\n  return (p*100).toFixed(2)+\"%\"\n}\n\nconst catTotal = (handEval, field) => {\n  const p = handEval.get(field)\n  if(!p) {\n    return \"\"\n  }\n  let total = 0\n  for(let i = 0; i < p.size; i++) {\n    total += p.get(i)\n  }\n  return (total*100).toFixed(2)+\"%\"\n}\n\nconst EvalCatsTable = (props) => {\n  const handResult = props.handResult\n  const settings = props.settings\n  const empty = handResult.isEmpty()\n\n  if(empty) {\n    return null\n  }\n\n  const handEval = props.handEval\n\n  if(!handEval) {\n    return null\n  }\n\n  let i = 1\n\n  return (<div>\n    {settings.get(\"catsChart\") || settings.get(\"catsTable\")?<h3>\n        Categories\n    </h3>:null}\n    {settings.get(\"catsChart\")?\n      <EvalCatsChart {...props}/>\n    :null}\n\n    {settings.get(\"catsTable\")?\n      <table className=\"minimalistBlack\">\n        <thead>\n          <tr>\n            <th colSpan={2} title=\"Hero\" className=\"center\">Hero</th>\n            <th rowSpan={2} className=\"center\">Cat</th>\n            <th colSpan={2} title=\"Villain\" className=\"center\">Villain</th>\n          </tr>\n          <tr>\n            <th title=\"Hero Wins\" className=\"center\">Win</th>\n            <th title=\"Hero Losses\" className=\"center\">Loss</th>\n            <th title=\"Villain Wins\" className=\"center\">Win</th>\n            <th title=\"Villain Losses\" className=\"center\">Loss</th>\n          </tr>\n        </thead>\n      <tbody>\n      {List([0, 1, 2, 3, 4, 5, 6, 7, 8]).map((cat)=>{\n        return <tr key={i++}>\n          <td className=\"right\">\n            {catFmt(handEval, \"heroWpCats\", cat)}\n          </td>\n          <td className=\"right\">\n            {catFmt(handEval, \"heroLpCats\", cat)}\n          </td>\n          <td title=\"Category\" className=\"center\">\n            <Category cat={GetCatStr(cat)}>{GetCategoryStr(cat)}</Category>\n          </td>\n          <td className=\"right\">\n            {catFmt(handEval, \"villainWpCats\", cat)}\n          </td>\n          <td className=\"right\">\n            {catFmt(handEval, \"villainLpCats\", cat)}\n          </td>\n        </tr>\n      }).toIndexedSeq()}\n      </tbody>\n        <tfoot>\n          <tr className=\"strong\">\n            <th title=\"Hero Wins\" className=\"center\">\n              {catTotal(handEval, \"heroWpCats\")}\n            </th>\n            <th title=\"Hero Losses\" className=\"center\">\n              {catTotal(handEval, \"heroLpCats\")}\n            </th>\n            <th className=\"center\">Total</th>\n            <th title=\"Villain Wins\" className=\"center\">\n              {catTotal(handEval, \"villainWpCats\")}\n            </th>\n            <th title=\"Villain Losses\" className=\"center\">\n              {catTotal(handEval, \"villainLpCats\")}\n            </th>\n          </tr>\n        </tfoot>\n      </table>\n    :null}\n    </div>\n  )\n}\n\nexport default EvalCatsTable\n","import React from 'react'\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend, ReferenceLine } from 'recharts';\n\nimport css from './EvalPlayersChart.module.css'\n\nconst EvalPlayersChart = (props) => {\n    const handResult = props.handResult\n    const empty = handResult.isEmpty()\n  \n    if(empty) {\n      return null\n    }\n  \n    const handValid = handResult.get(\"handValid\")\n  \n    if(!handValid) {\n      return null\n    }\n  \n    if(props.handEvalPlayers.isEmpty()) {\n        return null\n    }\n\n    const data = props.handEvalPlayers.map(v => {\n      const er = v.get(\"er\")\n      const wp = v.get(\"wp\")\n      const wo = v.get(\"wo\")\n      return {\n        players: v.get(\"finalPlayers\"),\n        er: Math.floor(er*10000)/100,\n        wp: Math.floor(wp*10000)/100,\n        wo: Math.floor((wo>100?100:wo)*100)/100,\n      }\n    }\n    ).toIndexedSeq().toArray()\n\n    const style = {fontSize: 12}\n\n    return (\n    <LineChart style={style} className={css.chart}\n      width={320}\n      height={250}\n      data={data}\n      margin={{ top: 5, right: 20, left: 20, bottom: 5 }}\n    >\n      <CartesianGrid stroke=\"#c0c0c0\" strokeDasharray=\"3 3\"/>\n      <XAxis dataKey=\"players\" stroke=\"black\"/>\n      <YAxis width={30} stroke=\"green\" unit=\"%\" yAxisId=\"left\" />\n      <YAxis width={30} stroke=\"red\" unit=\":1\" yAxisId=\"right\" orientation=\"right\" />\n      <Legend />\n      <Tooltip />\n      <ReferenceLine yAxisId=\"left\" y={0} stroke=\"black\" strokeDasharray=\"8 4\" />\n      <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"er\" stroke=\"green\" />\n      <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"wp\" stroke=\"blue\" />\n      <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"wo\" stroke=\"red\" />\n    </LineChart>\n    )\n  }\n\nexport default EvalPlayersChart\n","import React from 'react'\n\nimport Category from \"./Category\"\nimport EvalPlayersChart from '../components/EvalPlayersChart'\n\nimport '../Table/Table.css'\n\nconst EvalPlayersTable = (props) => {\n    const handResult = props.handResult\n    const settings = props.settings\n    const empty = handResult.isEmpty()\n  \n    if(empty) {\n      return null\n    }\n  \n    const handValid = handResult.get(\"handValid\")\n  \n    if(!handValid) {\n      return null\n    }\n  \n    if(props.handEvalPlayers.isEmpty()) {\n        return null\n    }\n\n    let i = 1\n\n    return (<div>\n    {settings.get(\"playersChart\") || settings.get(\"playersTable\")?<h3>\n        Players\n    </h3>:null}\n    {settings.get(\"playersChart\")?\n      <EvalPlayersChart {...props}/>\n    :null}\n\n    {settings.get(\"playersTable\")?\n      <table className=\"minimalistBlack\">\n        <thead>\n          <tr>\n            <th className=\"center\">Players</th>\n            <th title=\"Return value (%)\" className=\"center\">ER</th>\n            <th title=\"Win probabilty (%)\" className=\"center\">WP</th>\n            <th title=\"Win odds (loss : win) presented as n : 1\" className=\"center\">WO</th>\n          </tr>\n        </thead>\n      <tbody>\n      {props.handEvalPlayers.map((handEval)=>{\n        const er = handEval.get(\"er\")\n        const wp = handEval.get(\"wp\")\n        const wo = handEval.get(\"wo\")\n        const cat = er >= 0.25 ? \"3\" : er <= -0.25 ? \"F\" : er >= 0 ? \"1\" : \"2\"\n            \n        const style = handEval.get(\"finalPlayers\") === props.handEval.get(\"finalPlayers\")?{backgroundColor: \"yellow\"}:{}\n        return <tr style={style} key={i++}>\n          <td className=\"center\">\n          {handEval.get(\"finalPlayers\")}\n          </td>\n          <td title=\"Expected Return (%)\" className=\"right\">\n          <Category cat={cat}>{parseFloat(er*100).toFixed(0)}%</Category>\n          </td>\n          <td title=\"Win probabilty (%)\" className=\"right\">\n          <Category cat={cat}>{parseFloat(wp*100).toFixed(0)}%</Category>\n          </td>\n          <td title=\"Win odds (loss : win) presented as n : 1\" className=\"right\">\n          <Category cat={cat}>{wo > 1000 ? \">100\" : wo > 10 ? parseFloat(wo).toFixed(0) : parseFloat(wo).toFixed(2)}:1</Category>\n          </td>\n        </tr>\n      }).toIndexedSeq()}\n      </tbody>\n      </table>\n    :null}\n     </div>\n    )\n  }\n\nexport default EvalPlayersTable\n","import React from 'react'\n\nimport Card from \"./Card\"\nimport Category from \"./Category\"\n\nimport '../Table/Table.css'\n\nconst CombosTable = (props) => {\n  const handResult = props.handResult\n  const empty = handResult.isEmpty()\n\n  if(empty) {\n    return null\n  }\n\n  const handValid = handResult.get(\"handValid\")\n\n  if(!handValid) {\n    return null\n  }\n\n  const handRank = handResult.get(\"handRank\")\n  const allCombos = handResult.get(\"betterCombos\")+handResult.get(\"equalCombos\")+handResult.get(\"worseCombos\")\n  const handCombos = props.handCombos\n\n  let i = 0\n  let rank = 0\n\n  const style = {fontSize: 18, padding: 0}\n\n  return (<div>\n    <h3>\n      Combos\n    </h3>\n    <table className=\"minimalistBlack\">\n      <thead>\n        <tr>\n          <th className=\"center\">N</th>\n          <th className=\"center\">Hole</th>\n          <th className=\"center\">&times;</th>\n          <th className=\"center\">Cat</th>\n          <th className=\"center\">Cards</th>\n          <th className=\"center\">%</th>\n        </tr>\n      </thead>\n    <tbody>\n    {handCombos.map((comboItem)=>{\n      const prc = 100 * (allCombos - rank) / allCombos\n      const cnt = comboItem.get(\"count\")\n      const evalHandRank = comboItem.get(\"handRank\")\n      rank += cnt\n      \n      return <tr style={handRank === evalHandRank?{backgroundColor: \"yellow\"}:{}} key={i++}>\n        <td className=\"right\">\n        {i}\n        </td>\n        <td className=\"center\">\n        <Card style={{...style, background: \"transparent\", margin: 0, height: 24}} html={true}>{comboItem.get(\"hole\").substr(0, 2)}</Card>\n        <Card style={{...style, background: \"transparent\", margin: 0, height: 24}} html={true}>{comboItem.get(\"hole\").substr(2, 2)}</Card>\n        &nbsp;\n        </td>\n        <td className=\"right\">\n          {/* &times; */}\n          {cnt > 0 ? cnt : null}\n        </td>\n        <td className=\"center\">\n        <Category cat={comboItem.get(\"cat\")} category={comboItem.get(\"category\")}>{comboItem.get(\"category\")}</Category>\n        </td>\n        <td className=\"center\">\n        <Category cat={comboItem.get(\"cat\")} category={comboItem.get(\"category\")}>{comboItem.get(\"result\")}</Category>\n        </td>\n        <td className=\"right\">\n        {parseFloat(prc).toFixed(2)}\n        </td>\n      </tr>\n    })}\n    </tbody>\n    </table>\n    </div>\n    )\n}\n\nexport default CombosTable\n","import React, { Component } from 'react'\n\nimport Category from '../../components/Category'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport css from './SettingsButtons.module.css'\n\nexport default class PlayersSetting extends Component {\n\n  inc() {\n    this.props.incPlayers()\n  }\n  \n  dec() {\n    this.props.decPlayers()\n  }\n  \n  render() {\n    const style = {fontSize:20, height: 32}\n\n    return (\n      <span>\n        <Category style={style} cat=\"1\">\n        {this.props.children?<>{this.props.children}&nbsp;</>:null}\n        {this.props.players}\n        </Category>\n        &nbsp;\n        <button className={css.button} title=\"Decrease number of players\" onClick={this.dec.bind(this)}><FontAwesomeIcon icon=\"user-minus\"/></button>\n        <button className={css.button} title=\"Increase number of players\" onClick={this.inc.bind(this)}><FontAwesomeIcon icon=\"user-plus\"/></button>\n      </span>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport PlayersSetting from '../Settings/components/PlayersSetting'\n\nimport css from './InputButtons.module.css'\n\nexport default class InputButtons extends Component {\n\n  clear(e) {\n    this.props.clear()\n  }\n\n  del(e) {\n    this.props.del()\n  }\n\n  recalc(e) {\n    this.props.recalc()\n  }\n\n  addRandom(e) {\n    this.props.addRandom()\n  }\n\n  render() {\n    const props = this.props\n    const settings = props.settings\n\n    return <div>\n      {props.tanking}\n      <button className={css.button} title=\"Clear cards\" onClick={this.clear.bind(this)}><FontAwesomeIcon icon=\"trash-alt\"/></button>\n      <button className={css.button} title=\"Delete the rightmost card\" onClick={this.del.bind(this)}><FontAwesomeIcon icon=\"backspace\"/></button>\n      <button className={css.button} title=\"Add random cards\" onClick={this.addRandom.bind(this)}><FontAwesomeIcon icon=\"random\"/></button>\n      &nbsp;\n      {settings.get(\"playersButtons\") ?  null : <>\n      <PlayersSetting players={props.settings.get(\"players\")} incPlayers={props.incPlayers} decPlayers={props.decPlayers}>Players:</PlayersSetting>\n      </>}\n      <button title=\"Recalcuate\" className={props.tanking?(css.button+\" \"+css.running):css.button} onClick={this.recalc.bind(this)}><FontAwesomeIcon icon=\"calculator\"/></button>\n    </div>\n  }\n\n}\n","import React from 'react'\n\nimport Card from './Card'\n\nconst CardsEntry = (props) => (\n    <div>\n      {props.settings.get(\"playersButtons\")?\n      <div>\n      <Card {...props} card=\"9p\"/>\n      <Card {...props} card=\"8p\"/>\n      <Card {...props} card=\"7p\"/>\n      <Card {...props} card=\"6p\"/>\n      <Card {...props} card=\"5p\"/>\n      <Card {...props} card=\"4p\"/>\n      <Card {...props} card=\"3p\"/>\n      <Card {...props} card=\"2p\"/>\n      </div> : null}\n      <div>\n      <Card {...props} card=\"As\"/>\n      <Card {...props} card=\"Ks\"/>\n      <Card {...props} card=\"Qs\"/>\n      <Card {...props} card=\"Js\"/>\n      <Card {...props} card=\"Ts\"/>\n      <Card {...props} card=\"9s\"/>\n      <Card {...props} card=\"8s\"/>\n      <Card {...props} card=\"7s\"/>\n      <Card {...props} card=\"6s\"/>\n      <Card {...props} card=\"5s\"/>\n      <Card {...props} card=\"4s\"/>\n      <Card {...props} card=\"3s\"/>\n      <Card {...props} card=\"2s\"/>\n      </div>\n      <div>\n      <Card {...props} card=\"Ah\"/>\n      <Card {...props} card=\"Kh\"/>\n      <Card {...props} card=\"Qh\"/>\n      <Card {...props} card=\"Jh\"/>\n      <Card {...props} card=\"Th\"/>\n      <Card {...props} card=\"9h\"/>\n      <Card {...props} card=\"8h\"/>\n      <Card {...props} card=\"7h\"/>\n      <Card {...props} card=\"6h\"/>\n      <Card {...props} card=\"5h\"/>\n      <Card {...props} card=\"4h\"/>\n      <Card {...props} card=\"3h\"/>\n      <Card {...props} card=\"2h\"/>\n      </div>\n      <div>\n      <Card {...props} card=\"Ad\"/>\n      <Card {...props} card=\"Kd\"/>\n      <Card {...props} card=\"Qd\"/>\n      <Card {...props} card=\"Jd\"/>\n      <Card {...props} card=\"Td\"/>\n      <Card {...props} card=\"9d\"/>\n      <Card {...props} card=\"8d\"/>\n      <Card {...props} card=\"7d\"/>\n      <Card {...props} card=\"6d\"/>\n      <Card {...props} card=\"5d\"/>\n      <Card {...props} card=\"4d\"/>\n      <Card {...props} card=\"3d\"/>\n      <Card {...props} card=\"2d\"/>\n      </div>\n      <div>\n      <Card {...props} card=\"Ac\"/>\n      <Card {...props} card=\"Kc\"/>\n      <Card {...props} card=\"Qc\"/>\n      <Card {...props} card=\"Jc\"/>\n      <Card {...props} card=\"Tc\"/>\n      <Card {...props} card=\"9c\"/>\n      <Card {...props} card=\"8c\"/>\n      <Card {...props} card=\"7c\"/>\n      <Card {...props} card=\"6c\"/>\n      <Card {...props} card=\"5c\"/>\n      <Card {...props} card=\"4c\"/>\n      <Card {...props} card=\"3c\"/>\n      <Card {...props} card=\"2c\"/>\n      </div>\n  </div>\n)\n\nexport default CardsEntry\n","import React from 'react'\n\nimport Card from './Card'\n\nconst SparseCardsEntry = (props) => {\n  const suit = props.currentSuit\n  const playersStyle = {...props.style, lineHeight: \"0px\", fontSize: 28}\n  const playersButtons = props.settings.get(\"playersButtons\")\n  const x = (card) => playersButtons ? card : null\n\n  return <div>\n    <div>\n    {x(<Card {...props} style={{...playersStyle}} card=\"9P\"/>)}\n    &nbsp;\n    <Card {...props} style={suit === \"s\" ? {...props.style} : {...playersStyle, backgroundColor: \"lightgrey\"}} card={suit === \"s\" ? \"As\" : \"Xs\"}/>\n    <Card {...props} style={suit === \"h\" ? {...props.style} : {...playersStyle, backgroundColor: \"lightgrey\"}} card={suit === \"h\" ? \"Ah\" : \"Xh\"}/>\n    <Card {...props} style={suit === \"d\" ? {...props.style} : {...playersStyle, backgroundColor: \"lightgrey\"}} card={suit === \"d\" ? \"Ad\" : \"Xd\"}/>\n    <Card {...props} style={suit === \"c\" ? {...props.style} : {...playersStyle, backgroundColor: \"lightgrey\"}} card={suit === \"c\" ? \"Ac\" : \"Xc\"}/>\n    &nbsp;\n    {x(<Card {...props} style={{...playersStyle}} card=\"5P\"/>)}\n    </div>\n    <div>\n    {x(<Card {...props} style={{...playersStyle}} card=\"8P\"/>)}\n    &nbsp;\n    <Card {...props} card={\"K\"+suit}/>\n    <Card {...props} card={\"Q\"+suit}/>\n    <Card {...props} card={\"J\"+suit}/>\n    <Card {...props} card={\"T\"+suit}/>\n    &nbsp;\n    {x(<Card {...props} style={{...playersStyle}} card=\"4P\"/>)}\n    </div>\n    <div>\n    {x(<Card {...props} style={{...playersStyle}} card=\"7P\"/>)}\n    &nbsp;\n    <Card {...props} card={\"9\"+suit}/>\n    <Card {...props} card={\"8\"+suit}/>\n    <Card {...props} card={\"7\"+suit}/>\n    <Card {...props} card={\"6\"+suit}/>\n    &nbsp;\n    {x(<Card {...props} style={{...playersStyle}} card=\"3P\"/>)}\n    </div>\n    <div>\n    {x(<Card {...props} style={{...playersStyle}} card=\"6P\"/>)}\n    &nbsp;\n    <Card {...props} card={\"5\"+suit}/>\n    <Card {...props} card={\"4\"+suit}/>\n    <Card {...props} card={\"3\"+suit}/>\n    <Card {...props} card={\"2\"+suit}/>\n    &nbsp;\n    {x(<Card {...props} style={{...playersStyle}} card=\"2P\"/>)}\n    </div>\n  </div>\n}\n\nexport default SparseCardsEntry\n","export const xhand = {\n    A: 0,\n    K: 1,\n    Q: 2,\n    J: 3,\n    T: 4,\n    \"9\": 5,\n    \"8\": 6,\n    \"7\": 7,\n    \"6\": 8,\n    \"5\": 9,\n    \"4\": 10,\n    \"3\": 11,\n    \"2\": 12,\n}\n\nexport const ahand = [\"A\", \"K\", \"Q\", \"J\", \"T\", \"9\", \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\"]\n\nfunction processActions(cnt, cards) {\n    const a = new Array(13)\n    for(let i = 0; i < a.length; i++) {\n        const b = new Array(13)\n        a[i] = b\n        for(let j = 0; j < b.length; j++) {\n            const hand = ahand[i > j ? j : i]+ahand[i > j ? i : j]+(j > i ? \"s\" : \"\")\n            b[j] = {hand, cnt: 0, allCnt: 0, profit: 0, prc: 0, aprc: 0}\n        }\n    }\n    let totalCnt = 0\n    Object.keys(cards).forEach(hand => {\n        const c1 = hand.substr(0, 1)\n        const c2 = hand.substr(1, 1)\n        const suited = hand.length > 2 && hand.substr(2, 1) === \"s\"\n\n        const i = xhand[suited?c1:c2]\n        const j = xhand[suited?c2:c1]\n        const e = a[i][j]\n        const c = cards[hand]\n        totalCnt += c.cnt\n        e.cnt += c.cnt\n        e.allCnt += c.allCnt\n        e.profit += c.profit\n    })\n\n    for(let i = 0; i < a.length; i++) {\n        const b = a[i]\n        for(let j = 0; j < b.length; j++) {\n            const c = b[j]\n            c.prc = (Math.round(10000*c.cnt/totalCnt)/100)\n            if(c.allCnt > 0) {\n                c.aprc = (Math.round(10000*c.cnt/c.allCnt)/100)\n            }\n        }\n    }\n\n    return a\n}\n\nfunction fillCards(cards) {\n    for(let i = 0; i < 13; i++) {\n        for(let j = 0; j < 13; j++) {\n            const hand = ahand[i > j ? j : i]+ahand[i > j ? i : j]+(j > i ? \"s\" : \"\")\n            const c = cards[hand]\n            if(c) {\n                c.hand = hand\n                c.allCnt = 0\n            } else {\n                cards[hand] = {hand, cnt: 0, allCnt: 0, profit: 0}\n            }\n        }\n    }\n}\n\nexport default function processZone(zone) {\n\n    const map = {}\n    Object.keys(zone).forEach(actionsPath => {\n        const actions = zone[actionsPath]\n        Object.keys(actions).forEach(action => {\n            const cards = actions[action].act\n            fillCards(cards)\n            Object.keys(cards).forEach(hand => {\n                const c = cards[hand]\n                Object.keys(actions).forEach(aaction => {\n                    const ccards = actions[aaction].act\n                    const cc = ccards[hand]\n                    if(cc) {\n                        if(!c.allCnt) {\n                            c.allCnt = cc.cnt\n                        } else {\n                            c.allCnt += cc.cnt\n                        }\n                    }\n                })\n            })\n        })\n        Object.keys(actions).forEach(action => {\n            const cnt = actions[action].cnt\n            const cards = actions[action].act\n            map[actionsPath+\"/\"+action] = processActions(cnt, cards)\n        })\n    })\n    return map\n}\n","\nimport { PoserWorkersApi } from '../../../api/poserWorkersApi'\n\nimport { fromJS } from 'immutable-sorted'\n\nlet poserApi\n\nexport const ahand = [\"A\", \"K\", \"Q\", \"J\", \"T\", \"9\", \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\"]\n\nexport default async function getDistTable(settings, chand) {\n    const apiType = settings.get(\"apiType\")\n    const server = settings.get(\"apiServer\")\n    const workers = settings.get(\"workers\")\n    const jstSecret = settings.get(\"jwtSecret\")\n    const threads = settings.get(\"threads\")\n    const calcType = settings.get(\"calcType\")\n    const nSims = settings.get(\"nSims\")\n    const players = settings.get(\"players\")\n    const apiOptions = apiType === \"rest\" ? {apiType, server, threads} : {apiType}\n\n    if(!poserApi || poserApi.workers !== workers) {\n        poserApi = new PoserWorkersApi(workers, jstSecret)\n    }\n\n    const dt = new Array(13)\n    for(let i = 0; i < 13; i++) {\n        const dti = new Array(13)\n        dt[i] = dti\n        for(let j = 0; j < 13; j++) {\n            dti[j] = 0\n            const hand = ahand[i]+\"h\"+ahand[j]+(j>i?\"h\":\"s\")+chand.substring(4) // \"__________\"\n            const handEvalResult = await poserApi.HandEval(apiOptions, nSims, players, hand, calcType)\n            const { err } = handEvalResult\n            if(!err) {\n                const er =Math.round(handEvalResult.er * 10000) / 100\n                const wp =Math.round(handEvalResult.wp * 10000) / 100\n                dti[j] = { hand, er, wp }\n            }\n        }\n    }\n    return fromJS(dt)\n}","import React from 'react'\n\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nimport { ahand } from '../App/components/processZone'\n\nimport styles from './DistTable.module.css'\nconst DistTable = (props) => {\n  const { distTable, item } = props\n  const thr = item===\"aprc\" ? [0, 20, 80] : item === \"wp\" ? [1, 10, 25] : [0.1, 0.5, 1.5]\n\n  function cellValue(i, j) {\n    const val0 = distTable.getIn([j, i])\n    const val1 = val0 ? val0.get(item) : 0\n\n    const val = Math.round(100*val1)/100\n    if(val === 0) {\n      return \"\"\n    }\n    if(item === \"prc\" || item === \"aprc\") {\n      return val + \"%\"\n    }\n\n    return val\n  }\n\n  function cellStyle(i, j) {\n    const style = {}\n    if(i === j) {\n      style.borderWidth = 3\n    }\n    const val0 = distTable.getIn([j, i])\n    const val = val0 ? val0.get(item) : 0\n    if(val === 0) {\n      // style.backgroundColor = \"lightgray\"\n    } else if(val <= thr[0]) {\n      style.backgroundColor = \"white\"\n    } else if(val <= thr[1]) {\n      style.backgroundColor = \"#ffff9c\"\n    } else if(val <= thr[2]) {\n      style.backgroundColor = \"#ffcf9c\"\n    } else {\n      style.backgroundColor = \"#9cff9c\"\n    }\n    return style\n  }\n\n  return !distTable ? null : \n    <div>\n      <table className={styles.table}>\n        <thead>\n          <tr className={styles.tr}>\n            <th key={-1} title={\"\"} className={styles.th}></th>\n            {ahand.map((c, i) => <th key={i} title={c} className={styles.th}>{c}</th>)}\n          </tr>\n        </thead>\n      <tbody>\n        {ahand.map((c, j) => <tr key={j} className={styles.tr}>\n            <th key={-1} title={c} className={styles.th}>{c}</th>\n            {ahand.map((c, i) => <td key={i} title={c} className={styles.td} style={cellStyle(i, j)}>\n                {cellValue(i, j)}\n            </td>)}\n        </tr>)}\n      </tbody>\n      </table>\n      {item === \"aprc\" ? <><p/>\n      <CopyToClipboard text={flopzilla(distTable)}>\n        <button>Copy Flopzilla Ranges</button>\n      </CopyToClipboard>\n      </> : null}\n      <p/>\n    </div>\n}\n\nconst flopzilla = (distTable) => {\n  let s = \"\"\n  const item = \"aprc\"\n\n  ahand.forEach((c1, i) => ahand.forEach((c2, j) => {\n    const val0 = distTable.getIn([j, i])\n    const val1 = val0 ? val0.get(item) : 0\n\n    const p = Math.round(100*val1)/100\n    if(p > 0) {\n      const cc = (i > j ? c2+c1+\"s\" : c1+c2+\"o\")\n      if(s.length > 0) {\n        s += \",\"\n      }\n      if(p === 100) {\n        s += cc\n      } else {\n        s += \"[\"+p+\"]\"+cc+\"[/\"+p+\"]\"\n      }\n    }\n  }))\n\n  return s\n}\n\nexport default DistTable\n","import React, { Component } from 'react'\n\nimport Select from 'react-select'\n\nexport default class ActionPaths extends Component {\n\n  handleChange = selectedOption => {\n    this.props.setActionPath(selectedOption)\n  }\n\n  render() {\n    const { actionPath, actionPaths } = this.props\n    this.options = Object.keys(actionPaths.toJS()).sort().map(ap => ({value: ap, label: ap}))\n    const selectedOption = actionPath.toJS()\n\n    return (\n      <span style={{width: 150}}>\n        <Select \n            value={selectedOption}\n            onChange={this.handleChange}\n            options={this.options}\n        />\n      </span>\n    )\n  }\n}\n","import { connect } from 'react-redux'\n\nimport { engine, getState } from '../../engine'\n\nimport { PoserApi } from '../../api/poserApi'\n\nimport GamesDesc from \"./GamesDesc\"\n\nimport '../../utils/wasm_exec'\n\nconst e = engine.subEngine('war')\nconst af = e.actionFactory();\nconst he = engine.subEngine('home')\nconst se = he.subEngine('settings')\nconst saf = se.actionFactory();\n\nconst mapStateToProps = (state, repoHead, ownProps) => ({\n  err: state.get(\"err\"),\n  game: state.get(\"game\"),\n  players: se.get(getState()).get(\"players\"),\n  villain: state.get(\"villain\"),\n  hero: state.get(\"hero\"),\n  n: state.get(\"n\"),\n  ranks: state.get(\"ranks\"),\n  warGames: state.get(\"warGames\"),\n  warResultH: state.get(\"warResultH\"),\n  warResultV: state.get(\"warResultV\"),\n  warResultN: state.get(\"warResultN\"),\n  settings: state.get(\"settings\"),\n  tanking: state.get(\"tanking\"),\n  tankingMs: state.get(\"tankingMs\"),\n})\n\nconst mapRepoToProps = (repo, ownProps) => mapStateToProps(e.get(e.head(repo)), e.head(repo), ownProps)\n\nlet recalcPending = false\nlet poserApi\n\nconst runWar = async (dispatch) => {\n  const state = getState()\n  const settings = se.get(state)\n  const apiType = settings.get(\"apiType\")\n  const server = settings.get(\"apiServer\")\n  const workers = settings.get(\"workers\")\n  const jstSecret = settings.get(\"jwtSecret\")\n  const players = settings.get(\"players\")\n  const threads = settings.get(\"threads\")\n  const tanking = e.get(state, \"tanking\")\n\n  const game = e.get(state, \"game\")\n  const nsims = settings.get(\"nSims\")\n\n  const n = e.get(state, \"n\")\n  const ranks = e.get(state, \"ranks\")\n\n  if(tanking) {\n    // Don't run if other calculation is in progress\n    recalcPending = true\n    return\n  }\n\n  if(!poserApi || poserApi.workers !== workers) {\n    poserApi = new PoserApi(jstSecret)\n  }\n\n  try {\n    const startTimeMs = Date.now()\n    let err = \"\"\n    dispatch(af.value(\"tanking\", true))\n    const apiOptions = apiType === \"rest\" ? {apiType, server, threads} : {apiType}\n    const villainSt = e.get(state, \"villain\")\n    const villain = villainSt.toJS()\n    const villainStr = JSON.stringify(villain)\n    const heroSt = e.get(state, \"hero\")\n    const hero = heroSt.toJS()\n    const heroStr = JSON.stringify(hero)\n\n    const gDesc = GamesDesc[game]\n    for(const k of heroSt.keySeq().filter(id => gDesc.params[id])) {\n      for(let i = 0; !recalcPending && i < ranks; i++) {\n        const hero2 = heroSt.toJS()\n        hero2[k] = i\n        const heroStr2 = JSON.stringify(hero2)\n        const warResp = await poserApi.HandWar(apiOptions, nsims, players, villainStr, heroStr2, n, ranks, game)\n\n        if(warResp.err) {\n          err = warResp.err\n        } else {\n          dispatch(af.value(\"warResultH\", warResp))\n        }\n      }\n    }\n    for(const k of villainSt.keySeq().filter(id => gDesc.params[id])) {\n      for(let i = 0; !recalcPending && i < ranks; i++) {\n        const villain2 = villainSt.toJS()\n        villain2[k] = i\n        const villainStr2 = JSON.stringify(villain2)\n        const warResp = await poserApi.HandWar(apiOptions, nsims, players, villainStr2, heroStr, n, ranks, game)\n        if(warResp.err) {\n          err = warResp.err\n        } else {\n          dispatch(af.value(\"warResultV\", warResp))\n        }\n      }\n    }\n\n    for (let i = 0; i < ranks; i++) {\n      const warResp = await poserApi.HandWar(apiOptions, nsims, players, villainStr, heroStr, i, ranks, game)\n      if(warResp.err) {\n        err = warResp.err\n      } else {\n        dispatch(af.value(\"warResultN\", warResp))\n      }\n    }\n\n    dispatch(af.value(\"err\", err))\n    dispatch(af.value(\"tanking\", false))\n    const endTimeMs = Date.now()\n    dispatch(af.value(\"tankingMs\", endTimeMs - startTimeMs))\n\n    if(recalcPending) {\n      recalcPending = false;\n      recalc(dispatch)\n    }\n  } catch(e) {\n    const err = e.toString()\n    dispatch(af.value(\"err\", err))\n    dispatch(af.value(\"tanking\", false))\n    if(recalcPending) {\n      recalcPending = false;\n      recalc(dispatch)\n    }\n  }\n}\n\nconst setGame = (dispatch, game) => {\n  dispatch(af.value(\"game\", game))\n  runWar(dispatch)\n}\n\n// Initialize\nconst init = (dispatch) => {\n  dispatch(af.insert(\"villain\", \"pt\", 1))\n  dispatch(af.insert(\"hero\", \"pt\", 2))\n  runWar(dispatch)\n}\n\nconst setVillain = (dispatch, id, n) => {\n  dispatch(af.insert(\"villain\", id, n))\n  runWar(dispatch)\n}\n\nconst setHero = (dispatch, id, n) => {\n  dispatch(af.insert(\"hero\", id, n))\n  runWar(dispatch)\n}\n\nconst setN = (dispatch, n) => {\n  dispatch(af.value(\"n\", n))\n  runWar(dispatch)\n}\n\nconst setRanks = (dispatch, ranks) => {\n  const state = getState()\n  const n = e.get(state, \"n\")\n  if(n >= ranks ) {\n    dispatch(af.value(\"n\", ranks-1))\n  }\n  dispatch(af.value(\"ranks\", ranks))\n  runWar(dispatch)\n}\n\nconst setPlayers = (dispatch, players) => {\n  if(players < 2) {\n    dispatch(saf.value(\"players\", 2))\n  } else if(players > 9) {\n    dispatch(saf.value(\"players\", 9))\n  } else {\n    dispatch(saf.value(\"players\", players))\n  }\n  runWar(dispatch)\n}\n\nconst recalc = (dispatch) => {\n  runWar(dispatch)\n}\n\nconst fetchGames = async (dispatch) => {\n  const state = getState()\n  const settings = se.get(state)\n  const apiType = settings.get(\"apiType\")\n  const server = settings.get(\"apiServer\")\n  const workers = settings.get(\"workers\")\n  const jstSecret = settings.get(\"jwtSecret\")\n  const threads = settings.get(\"threads\")\n\n  if(!poserApi || poserApi.workers !== workers) {\n    poserApi = new PoserApi(jstSecret)\n  }\n\n  try {\n    const startTimeMs = Date.now()\n    let err = \"\"\n    dispatch(af.value(\"tanking\", true))\n    const apiOptions = apiType === \"rest\" ? {apiType, server, threads} : {apiType}\n    const warResp = await poserApi.WarGames(apiOptions)\n    if(warResp.err) {\n      err = warResp.err\n    } else {\n      dispatch(af.value(\"warGames\", warResp))\n    }\n    dispatch(af.value(\"err\", err))\n    dispatch(af.value(\"tanking\", false))\n    const endTimeMs = Date.now()\n    dispatch(af.value(\"tankingMs\", endTimeMs - startTimeMs))\n  } catch(e) {\n    const err = e.toString()\n    dispatch(af.value(\"err\", err))\n    dispatch(af.value(\"tanking\", false))\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  init: () => init(dispatch),\n  setGame: (game) => setGame(dispatch, game),\n  setPlayers: (players) => setPlayers(dispatch, players),\n  setVillain: (id, n) => setVillain(dispatch, id, n),\n  setHero: (id, n) => setHero(dispatch, id, n),\n  setN: (n) => setN(dispatch, n),\n  setRanks: (ranks) => setRanks(dispatch, ranks),\n  runWar: () => runWar(dispatch),\n  fetchGames: () => fetchGames(dispatch),\n})\n\n\nconst WarContainer = connect(\n  mapRepoToProps,\n  mapDispatchToProps\n)\n\nexport default WarContainer\n","import React, { Component } from 'react'\n\nimport Hand from '../components/Hand'\nimport EvalResult from '../components/EvalResult'\nimport EvalCatsTable from '../components/EvalCatsTable'\nimport EvalPlayersTable from '../components/EvalPlayersTable'\nimport CombosTable from '../components/CombosTable'\nimport InputButtons from '../components/InputButtons'\nimport CardsEntry from '../components/CardsEntry'\nimport SparseCardsEntry from '../components/SparseCardsEntry'\nimport DistTable from '../components/DistTable'\nimport ActionPaths from './components/ActionPaths'\nimport getDistTable from './components/getDistTable'\n\nimport css from './HomePage.module.css'\n\nimport '../Table/Table.css'\n\nfunction getActionPaths(actionPath) {\n  const r = []\n  for(let i = 2; i < actionPath.length; i++) {\n    const a = actionPath.substr(i, 1)\n    if(a !== \"F\") {\n      r.push(actionPath.substr(0, i)+\"/\"+a)\n    }\n  }\n  return r\n}\n\nexport default class HomePage extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {probTable: null}\n  }\n\n  async componentDidMount() {\n    const props = this.props\n    props.setHand(props.hand)\n    const probTable = await getDistTable(props.settings, props.hand)\n    this.setState({probTable})\n  }\n\n  click(card) {\n    const props = this.props\n    switch(card) {\n      case \"Xs\":\n        props.setCurrentSuit(\"s\")\n        break\n      case \"Xh\":\n        props.setCurrentSuit(\"h\")\n        break\n      case \"Xd\":\n        props.setCurrentSuit(\"d\")\n        break\n      case \"Xc\":\n        props.setCurrentSuit(\"c\")\n        break\n      case \"?\":\n        break\n      default:\n        props.addCard(card)\n        break\n    }\n  }\n\n  render() {\n    const props = this.props\n    const {settings, zone, zoneActions, zoneDistTables, actionPath, setActionPath } = props\n\n    const { probTable } = this.state\n\n    return (\n    <div>\n    <div className={css.sticky}>\n      <Hand {...props}/>\n      <hr/>\n    </div>\n    <h3>\n      <InputButtons {...props} />\n    </h3>\n    <h3>\n      <EvalResult {...props}/>\n    </h3>\n    <h3>\n      {settings.get(\"denseKeyboard\") ?\n      <CardsEntry\n        handArr={props.handArr}\n        click={this.click.bind(this)}\n        style={{width: \"7%\"}}\n        html={true}\n        vertical={true}\n        settings={props.settings}/> :\n      <SparseCardsEntry\n        currentSuit={props.currentSuit}\n        handArr={props.handArr}\n        click={this.click.bind(this)}\n        style={{height: 40, width: 40, margin: 2, fontSize: '20px'}}\n        html={true}\n        vertical={false}\n        settings={props.settings}\n      />\n      }\n    </h3>\n    {zone?<h3>\n    <div>\n    {zoneActions ? <ActionPaths actionPath={actionPath} setActionPath={setActionPath} actionPaths={zoneActions}/> : null}\n    </div>\n    {getActionPaths(actionPath.get(\"value\")).map((ap, i) => <div key={i}>\n      <p>Player {i+1}: {ap}</p>\n      <DistTable distTable={zoneDistTables.get(ap)} item=\"prc\"/>\n      <DistTable distTable={zoneDistTables.get(ap)} item=\"cnt\"/>\n      <DistTable distTable={zoneDistTables.get(ap)} item=\"profit\"/>\n      <p>Hands Win Probability</p>\n      {probTable ? <DistTable distTable={probTable} item=\"wp\"/> : \"Tanking...\"}\n    </div>)}\n      <p>Raise:</p>\n      <DistTable distTable={zoneDistTables.get(actionPath.get(\"value\")+\"/R\")} item=\"aprc\"/>\n      <DistTable distTable={zoneDistTables.get(actionPath.get(\"value\")+\"/R\")} item=\"prc\"/>\n      <p>Call:</p>\n      <DistTable distTable={zoneDistTables.get(actionPath.get(\"value\")+\"/C\")} item=\"aprc\"/>\n      <DistTable distTable={zoneDistTables.get(actionPath.get(\"value\")+\"/C\")} item=\"prc\"/>\n    </h3>:null}\n    <h3>\n      <EvalPlayersTable {...props}/>\n    </h3>\n    <h3>\n      <EvalCatsTable {...props}/>\n    </h3>\n    {props.settings.get(\"combosTable\") && props.handCardsCnt >= 5 ? \n    <h3>\n      <CombosTable {...props}/>\n    </h3>:null}\n    </div>\n  )\n  }\n}\n","\nexport default {\n\t\"simple0\": {\n        \"name\": \"Simple0\",\n        \"params\": {},\n\t\t\"title\": \"No Decisions Simple Poker War\",\n\t\t\"desc\":[\n\t\t\t\"Summary\",\n\t\t\t\"* players make no decisions\",\n\t\t\t\"* ranks - number of ranks (a rank can be a value in the interval [0 .. ranks-1])\",\n\t\t\t\"* players - number of players [2 .. MaxPlayers]\",\n\t\t\t\"* antes only\",\n\t\t\t\"* no bets\",\n\t\t\t\"* unlimited deck, unlimited number of cards in each rank\",\n\t\t\t\"\",\n\t\t\t\"Rules\",\n\t\t\t\"* players post antes in the amount of 1 unit\",\n\t\t\t\"* each player is dealt 1 card\",\n\t\t\t\"* no betting, no decisions, everybody goes straight to contest\",\n\t\t\t\"* during contest each player shows their card, no folding, no mucking\",\n\t\t\t\"* the player or players with the highest number will take or split the pot\"\n\t\t]\n\t},\n\t\"simple1\": {\n\t\t\"name\": \"Simple1\",\n        \"params\": {\"pt\": true},\n\t\t\"title\": \"Limp In or Fold Simple Poker War\",\n\t\t\"desc\": [\n\t\t\t\"Summary\",\n\t\t\t\"* each players makes one and only one decision: limp in, or fold\",\n\t\t\t\"* ranks - number of ranks (a rank can be a value in the interval [0 .. ranks-1])\",\n\t\t\t\"* players - number of players [2 .. MaxPlayers]\",\n\t\t\t\"* antes optional\",\n\t\t\t\"* unlimited deck, unlimited number of cards in each rank\",\n\t\t\t\"Rules\",\n\t\t\t\"* players post antes in the amount of 1 bet\",\n\t\t\t\"* each player is dealt 1 card\",\n\t\t\t\"* each players makes one and only one decision: limp in, or fold\",\n\t\t\t\"* decision is binding, but secret until the contest\",\n\t\t\t\"* no betting in order, everybody goes straight to contest\",\n\t\t\t\"* during contest each player reveals their decision at the same time\",\n\t\t\t\"* the player or players with the highest number will take or split the pot\"\n\t\t]\n\t}\n}\n","import React from 'react'\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend, ReferenceLine } from 'recharts'\n\nimport css from './EvalPlayersChart.module.css'\n\nconst WarChart = (props) => {\n  const { neg } = props\n  const data = props.list.filter(v=>v).map(v => {\n    const n = props.getX(v)\n    const er = v.get(\"er\")\n    const wp = v.get(\"wp\")\n    const wo = v.get(\"wo\")\n    const r = {\n      n,\n      er: Math.floor(er*10000)/100,\n      wp: Math.floor(wp*10000)/100,\n      wo: Math.floor((wo>100?100:wo)*100)/100,\n    }\n    if(neg) {\n      r.er = -r.er\n      r.wp = -r.wp\n      r.wo = -r.wo\n    }\n    return r\n  }\n  ).toIndexedSeq().toArray()\n\n  const style = {fontSize: 12}\n\n  return (\n  <LineChart style={style} className={css.chart}\n    width={320}\n    height={250}\n    data={data}\n    margin={{ top: 5, right: 20, left: 20, bottom: 5 }}\n  >\n    <CartesianGrid stroke=\"#c0c0c0\" strokeDasharray=\"3 3\"/>\n    <XAxis dataKey=\"n\" stroke=\"black\"/>\n    <YAxis width={30} stroke=\"black\" unit=\"%\" yAxisId=\"left\" />\n    {/* <YAxis width={30} stroke=\"red\" unit=\":1\" yAxisId=\"right\" orientation=\"right\" /> */}\n    <Legend />\n    <Tooltip />\n    <ReferenceLine yAxisId=\"left\" y={0} stroke=\"black\" strokeDasharray=\"8 4\" />\n    <Line name=\"Return (%)\" yAxisId=\"left\" type=\"monotone\" dataKey=\"er\" stroke=\"black\" />\n    {/* <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"wp\" stroke=\"blue\" />\n    <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"wo\" stroke=\"red\" /> */}\n  </LineChart>\n  )\n}\n\nexport default WarChart\n","import React, { Component } from 'react'\n\nimport Select from 'react-select'\n\nexport default class GameSetting extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      options: [],\n      optionsMap: {},\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { games } = this.props\n\n    if(prevProps.games !== games) {\n      const options = []\n      const optionsMap = {}\n  \n      games.forEach(value => {\n        const option = {value, label: value}\n        options.push(option)\n        optionsMap[value] = option\n      })\n\n      this.setState({options, optionsMap})\n    }\n  }\n\n  handleChange = selectedOption => {\n    this.props.setGame(selectedOption.value)\n  }\n\n  render() {\n    const { options, optionsMap } = this.state\n    const selectedOption = optionsMap[this.props.game] || options[0]\n\n    return (\n      <span style={{width: 150}}>\n        <Select \n            value={selectedOption}\n            onChange={this.handleChange}\n            options={options}\n        />\n      </span>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nimport { List, Map } from \"immutable-sorted\"\n\nimport WarChart from \"../components/WarChart\"\n\nimport GameSetting from \"./components/GameSetting\"\n\nimport GamesDesc from \"./GamesDesc\"\n\nimport '../Table/Table.css'\n\nconst SliderWT = Slider.createSliderWithTooltip(Slider)\n\nconst paramsDef = {\n  \"pt\": \"Playing Threshold\",\n}\nconst params = Object.keys(paramsDef)\nconst paramsMap = Map().withMutations(map => {\n  params.forEach(id => map.set(id, List()))\n})\n\nexport default class WarPage extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      list: List(),\n      heroMap: paramsMap,\n      villainMap: paramsMap,\n    }\n  }\n\n  componentDidMount() {\n    this.props.init()\n    this.props.fetchGames()\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    const { props } = this\n    const wrH = props.warResultH\n    const wrV = props.warResultV\n    const wrN = props.warResultN\n\n    if(prevProps.warResultH !== wrH || prevProps.warResultV !== wrV || prevProps.warResultN !== wrN) {\n      let { list, heroMap, villainMap } = this.state\n\n      params.forEach(id => {\n        let hl = heroMap.get(id)\n        if(!hl) {\n          hl = List()\n        }\n        hl = hl.set(wrH.getIn([\"request\", \"hero\", id]), wrH)\n        heroMap = heroMap.set(id, hl)        \n\n        let vl = villainMap.get(id)\n        if(!vl) {\n          vl = List()\n        }\n        vl = vl.set(wrV.getIn([\"request\", \"villain\", id]), wrV)\n        villainMap = villainMap.set(id, vl)        \n      })\n      this.setState({\n        list: list.set(wrN.getIn([\"request\", \"n\"]), wrN),\n        heroMap,\n        villainMap,\n      })\n    }\n  }\n\n  setGame(game) {\n    this.setState({list: List(), heroMap: paramsMap, villainMap: paramsMap})\n    this.props.setGame(game)\n  }\n\n  onSliderPlayersChange(value) {\n    const { setPlayers } = this.props\n    this.setState({list: List(), heroMap: paramsMap, villainMap: paramsMap})\n    setPlayers(value)\n  }\n\n  onSliderRanksChange(value) {\n    const { setRanks } = this.props\n    this.setState({list: List(), heroMap: paramsMap, villainMap: paramsMap})\n    setRanks(value)\n  }\n\n  onSliderVillain(id, value) {\n    const { setVillain } = this.props\n    const oldVillainMap = this.state.villainMap\n    this.setState({list: List(), heroMap: paramsMap, villainMap: paramsMap.set(id, oldVillainMap.get(id))})\n    setVillain(id, value)\n  }\n\n  onSliderHero(id, value) {\n    const { setHero } = this.props\n    const oldHeroMap = this.state.heroMap\n    this.setState({list: List(), heroMap: paramsMap.set(id, oldHeroMap.get(id)), villainMap: paramsMap})\n    setHero(id, value)\n  }\n\n  onSliderNChange(value) {\n    const { setN } = this.props\n    this.setState({heroMap: paramsMap, villainMap: paramsMap})\n    setN(value)\n  }\n\n  render() {\n    const tdl = {width:\"90%\", padding: 10, textAlign: \"left\"}\n    const tds = {width:\"90%\", padding: 10, textAlign: \"center\"}\n    const props = this.props\n    const { err, game, players, n, villain, hero, ranks, tanking, tankingMs, warGames } = props\n\n    const playersMarks = {}\n    const pa = [...Array(8).keys()]\n    pa.forEach(p => playersMarks[p+2] = (p+2).toString())\n    const rMarks = {}\n    const rr = [...Array(99).keys()]\n    rr.forEach(r => rMarks[r+2] = (r+2).toString())\n    const ranksMarks = {}\n    const ra = [...Array(ranks+1).keys()]\n    ra.forEach(r => ranksMarks[r] = (r).toString())\n    const nMarks = {}\n    const na = [...Array(ranks).keys()]\n    na.forEach(r => nMarks[r] = (r).toString())\n    \n    const gDesc = GamesDesc[game] || {params: {}, title: \"\", desc: []}\n    const gameTitle = gDesc.title\n    const gameDesc = gDesc.desc.map((t, i) => <div key={i}>{t}</div>)\n    const ids = params.filter(id => gDesc.params[id])\n    return <div>\n      <h3>Poker War</h3>\n      <div>\n        <div>{tanking?\"Tanking ...\":(err || \"OK\")+\" (\"+(tankingMs/1000)+\"s)\"}</div>\n        <p/>\n        <table style={{width:\"90%\"}} className=\"minimalistBlack\">\n          <thead>\n            <tr>\n              <th>Parameter</th>\n              <th>Value</th>\n              <th>Slider</th>\n            </tr>\n          </thead>\n          <tbody>\n          <tr>\n            <td style={{fontWeight: \"bold\"}}>Game</td>\n            <td className=\"right\"/>\n            <td style={tdl}>\n              <GameSetting\n                games={warGames}\n                game={game}\n                setGame={this.setGame.bind(this)}\n              />\n              <p/>\n              <p style={{fontWeight: \"bold\"}}>{gameTitle}</p>\n              {gameDesc}\n            </td>\n          </tr>\n          <tr>\n            <td style={{fontWeight: \"bold\"}}>Players</td>\n            <td className=\"right\">{players}</td>\n            <td style={tds}>\n              <SliderWT\n                height={50}\n                min={2}\n                max={9}\n                marks={playersMarks}\n                value={players}\n                step={1}\n                dots={true}\n                included={false}\n                onChange={this.onSliderPlayersChange.bind(this)}\n              />\n              <br/>\n            </td>\n          </tr>\n          <tr>\n            <td style={{fontWeight: \"bold\"}}>Ranks</td>\n            <td className=\"right\">{ranks}</td>\n            <td style={tds}>\n              <SliderWT\n                min={2}\n                max={100}\n                marks={rMarks}\n                value={ranks}\n                step={1}\n                dots={true}\n                included={false}\n                onChange={this.onSliderRanksChange.bind(this)}\n              />\n              <br/>\n            </td>\n          </tr>\n          {ids.map((id, i) => <tr key={i}>\n            <td style={{fontWeight: \"bold\"}}>h{id}</td>\n            <td className=\"right\">{hero.get(id)}</td>\n            <td style={tds}>\n              Hero {paramsDef[id]}\n              <br/>\n              <SliderWT\n                min={0}\n                max={ranks-1}\n                marks={ranksMarks}\n                value={hero.get(id)}\n                step={1}\n                dots={true}\n                included={false}\n                onChange={value => this.onSliderHero(id, value)}\n              />\n              <br/>\n            </td>\n          </tr>\n          )}\n          {ids.map((id, i) => <tr key={i}>\n            <td style={{fontWeight: \"bold\"}}>v{id}</td>\n            <td className=\"right\">{villain.get(id)}</td>\n            <td style={tds}>\n              Villain {paramsDef[id]}\n              <br/>\n              <SliderWT\n                min={0}\n                max={ranks-1}\n                marks={ranksMarks}\n                value={villain.get(id)}\n                step={1}\n                dots={true}\n                included={false}\n                onChange={value => this.onSliderVillain(id, value)}\n              />\n              <br/>\n            </td>\n          </tr>\n          )}\n          <tr>\n            <td style={{fontWeight: \"bold\"}}>N</td>\n            <td className=\"right\">{n}</td>\n            <td style={tds}>\n              <SliderWT\n                min={-1}\n                max={ranks-1}\n                marks={nMarks}\n                value={n}\n                step={1}\n                dots={true}\n                included={false}\n                onChange={this.onSliderNChange.bind(this)}\n              />\n              <br/>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n      <h3>Results</h3>\n      <table className=\"minimalistBlack\">\n      <tbody>\n        <tr>\n          <>\n          {ids.map((id, i) => <td className=\"center\" key={i}>\n            <h3>Hero's Profit by Playing Threshold</h3>\n            <h3>(when Villain {id} = {villain.get(id)})</h3>\n            {n >= 0 ? <h3>(N = {n})</h3> : null}\n            <WarChart list={this.state.heroMap.get(id)} getX={v=>v.getIn([\"request\", \"hero\", id])}/>\n            {/* <table className=\"minimalistBlack\">\n              <thead>\n                <tr>\n                  <th className=\"right\">Hero {id}</th>\n                  <th className=\"right\">Return</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.heroMap.get(id).filter(wr => wr).map((wr, i) => {\n                  const rn = wr.getIn([\"request\", \"hero\", id])\n                  let rer = wr.get(\"er\")\n                  if(rer !== undefined) {\n                    rer = (Math.round(rer * 10000) / 100).toString()+\"%\"\n                  }\n                  return <tr style={n === rn ? {backgroundColor: \"yellow\"} : {}} key={i}>\n                    <td className=\"right\">{rn}</td>\n                    <td className=\"right\">{rer}</td>\n                  </tr>\n                }).toArray()}\n              </tbody>\n            </table> */}\n          </td>)}\n          {ids.map((id, i) => <td className=\"center\" key={i}>\n            <h3>Villain's Profit by Playing Threshold</h3>\n            <h3>(when Hero's {id} = {hero.get(id)})</h3>\n            {n >= 0 ? <h3>(N = {n})</h3> : null}\n            <WarChart neg={true} list={this.state.villainMap.get(id)} getX={v=>v.getIn([\"request\", \"villain\", id])}/>\n            {/* <table className=\"minimalistBlack\">\n              <thead>\n                <tr>\n                  <th className=\"right\">Villain {id}</th>\n                  <th className=\"right\">Return</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.villainMap.get(id).filter(wr => wr).map((wr, i) => {\n                  const rn = wr.getIn([\"request\", \"villain\", id])\n                  let rer = wr.get(\"er\")\n                  if(rer !== undefined) {\n                    rer = (Math.round(rer * 10000) / 100).toString()+\"%\"\n                  }\n                  return <tr style={n === rn ? {backgroundColor: \"yellow\"} : {}} key={i}>\n                    <td className=\"right\">{rn}</td>\n                    <td className=\"right\">{rer}</td>\n                  </tr>\n                }).toArray()}\n              </tbody>\n            </table> */}\n          </td>)}\n          <td className=\"center\">\n            <h3>Hero's Profit by Rank</h3>\n            {ids.map((id, i) => <div>\n              <h3>(Hero's {id} = {hero.get(id)})</h3>\n              <h3>(Villain {id} = {villain.get(id)})</h3>\n            </div>)}\n            <WarChart list={this.state.list} getX={v=>v.getIn([\"request\", \"n\"])}/>\n            {/* <table className=\"minimalistBlack\">\n              <thead>\n                <tr>\n                  <th className=\"right\">N</th>\n                  <th className=\"right\">Return</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.list.filter(wr => wr).map((wr, i) => {\n                  const rn = wr.getIn([\"request\", \"n\"])\n                  let rer = wr.get(\"er\")\n                  if(rer !== undefined) {\n                    rer = (Math.round(rer * 10000) / 100).toString()+\"%\"\n                  }\n                  return <tr style={n === rn ? {backgroundColor: \"yellow\"} : {}} key={i}>\n                    <td className=\"right\">{rn}</td>\n                    <td className=\"right\">{rer}</td>\n                  </tr>\n                }).toArray()}\n              </tbody>\n            </table> */}\n          </td>\n          </>\n        </tr>\n      </tbody>\n      </table>\n      </div>\n  }\n}\n","\nexport const ApiType = {\n    \"js\": { value: \"js\", label: \"JavaScript\"},\n    \"wasm\": { value: \"wasm\", label: \"WebAssembly\"},\n    \"rest\": { value: \"rest\", label: \"REST\"},\n}\n","\nexport const CalcType = {\n    \"basic\": { value: \"basic\", label: \"Basic\"},\n    \"fast\": { value: \"fast\", label: \"Fast\"},\n    \"loki\": { value: \"loki\", label: \"Loki\"},\n}\n","import { connect } from 'react-redux'\n\nimport { engine } from '../../engine'\n\nimport { ApiType } from './components/ApiType'\nimport { CalcType } from './components/CalcType'\n\nconst e = engine.subEngine('home.settings')\nconst af = e.actionFactory();\n\nconst mapStateToProps = (state, repoHead, ownProps) => ({\n  apiType: state.get(\"apiType\"),\n  apiTypeLabel: ApiType[state.get(\"apiType\")].label,\n  apiServer: state.get(\"apiServer\"),\n  jwtSecret: state.get(\"jwtSecret\"),\n  calcType: state.get(\"calcType\"),\n  calcTypeLabel: CalcType[state.get(\"calcType\")].label,\n  nSims: state.get(\"nSims\"),\n  workers: state.get(\"workers\"),\n  threads: state.get(\"threads\"),\n  players: state.get(\"players\"),\n  catsChart: state.get(\"catsChart\"),\n  catsTable: state.get(\"catsTable\"),\n  playersChart: state.get(\"playersChart\"),\n  playersTable: state.get(\"playersTable\"),\n  combosTable: state.get(\"combosTable\"),\n  denseKeyboard: state.get(\"denseKeyboard\"),\n  playersButtons: state.get(\"playersButtons\"),\n  devMode: state.get(\"devMode\"),\n  latency: state.get(\"latency\"),\n})\n\nconst mapRepoToProps = (repo, ownProps) => mapStateToProps(e.get(e.head(repo)), e.head(repo), ownProps)\n \nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  setApiType: (apiType) => {\n    dispatch(af.value(\"apiType\", apiType))\n  },\n  setApiServer: (apiServer) => {\n    dispatch(af.value(\"apiServer\", apiServer))\n  },\n  setJwtSecret: (jwtSecret) => {\n    dispatch(af.value(\"jwtSecret\", jwtSecret))\n  },\n  setCalcType: (calcType) => {\n    dispatch(af.value(\"calcType\", calcType))\n  },\n  setSims: (nSims) => {\n    dispatch(af.value(\"nSims\", nSims))\n  },\n  setWorkers: (workers) => {\n    dispatch(af.value(\"workers\", workers))\n  },\n  setThreads: (threads) => {\n    dispatch(af.value(\"threads\", threads))\n  },\n  setCatsChart: (checked) => {\n    dispatch(af.value(\"catsChart\", checked))\n  },\n  setCatsTable: (checked) => {\n    dispatch(af.value(\"catsTable\", checked))\n  },\n  setPlayersChart: (checked) => {\n    dispatch(af.value(\"playersChart\", checked))\n  },\n  setPlayersTable: (checked) => {\n    dispatch(af.value(\"playersTable\", checked))\n  },\n  setCombosTable: (checked) => {\n    dispatch(af.value(\"combosTable\", checked))\n  },\n  setDenseKeyboard: (checked) => {\n    dispatch(af.value(\"denseKeyboard\", checked))\n  },\n  setPlayersButtons: (checked) => {\n    dispatch(af.value(\"playersButtons\", checked))\n  },\n  setDevMode: (checked) => {\n    dispatch(af.value(\"devMode\", checked))\n  },\n  setLatency: (checked) => {\n    dispatch(af.value(\"latency\", checked))\n  },\n})\n\nconst SettingsContainer = connect(\n  mapRepoToProps,\n  mapDispatchToProps\n)\n\nexport default SettingsContainer\n","import React, { Component } from 'react'\n\nimport { ApiType } from './ApiType'\n\nimport Select from 'react-select'\n\nexport default class ApiSetting extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.options = []\n    Object.keys(ApiType).map(key => this.options.push(ApiType[key]))\n  }\n\n  handleChange = selectedOption => {\n    this.props.setApiType(selectedOption.value)\n  }\n\n  render() {\n    const selectedOption = ApiType[this.props.apiType]\n    return (\n      <span style={{width: 150}}>\n        <Select \n            value={selectedOption}\n            onChange={this.handleChange}\n            options={this.options}\n        />\n      </span>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class ServerUrlSetting extends Component {\n\n  changeApiServer = event => {\n    this.props.setApiServer(event.target.value)\n  }\n\n  render() {\n    return (\n      <span style={{width: 150}}>\n        <input \n          style={{height: 30, width: 140, textAlign: \"left\"}} \n          type=\"text\" \n          name=\"ApiServer\"\n          title=\"REST Server URL\"\n          value={this.props.apiServer}\n          maxLength={64}\n          onChange={this.changeApiServer.bind(this)}\n          placeholder=\"REST Server URL ...\"\n        />\n      </span>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Base64 } from 'js-base64'\n\nexport default class JwtSecretSetting extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {showSecret: false}\n  }\n\n\n  changeJwtSecret = event => {\n    const base64Secret = Base64.encode(event.target.value)\n    this.props.setJwtSecret(base64Secret)\n  }\n\n  changeShowSecret = event => {\n    const newState = {showSecret: !this.state.showSecret}\n    this.setState(newState)\n  }\n\n  render() {\n    const type = this.state.showSecret ? \"text\" : \"password\"\n    const secret = Base64.decode(this.props.jwtSecret)\n    return (\n      <span style={{width: 150}}>\n        <input \n          style={{height: 30, width: 120, textAlign: \"left\"}} \n          type={type}\n          name=\"JwtSecret\"\n          title=\"REST Server URL\"\n          value={secret}\n          maxLength={64}\n          onChange={this.changeJwtSecret.bind(this)}\n          placeholder=\"\"\n        />\n      <input type=\"checkbox\" name=\"show\" title=\"Show Secret\" checked={this.state.showSecret} onChange={this.changeShowSecret.bind(this)}/>\n      </span>\n    )\n  }\n}\n","export const ThreadsOptions = {\n    \"0\": { value: 0, label: \"MAXCPUs\"},\n    \"1\": { value: 1, label: \"1\"},\n    \"2\": { value: 2, label: \"2\"},\n    \"4\": { value: 4, label: \"4\"},\n    \"6\": { value: 6, label: \"6\"},\n    \"8\": { value: 8, label: \"8\"},\n    \"12\": { value: 12, label: \"12\"},\n    \"16\": { value: 16, label: \"16\"},\n    \"24\": { value: 24, label: \"24\"},\n    \"32\": { value: 32, label: \"32\"},\n}\n\n","import React, { Component } from 'react'\n\nimport { ThreadsOptions } from './ThreadsOptions'\n\nimport Select from 'react-select'\n\nexport default class ThreadsSetting extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.options = []\n    Object.keys(ThreadsOptions).map(key => this.options.push(ThreadsOptions[key]))\n  }\n\n  handleChange = selectedOption => {\n    this.props.setThreads(selectedOption.value)\n  }\n\n  customStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      textAlign: \"right\",\n    }),\n    control: (provided) => ({\n      ...provided,\n    }),\n    singleValue: (provided, state) => ({\n      ...provided,\n    }),\n  }\n\n  render() {\n    const selectedOption = ThreadsOptions[this.props.threads.toString()]\n\n    return (\n      <span style={{width: 150}}>\n        <Select\n          styles={this.customStyles}\n          value={selectedOption}\n          onChange={this.handleChange}\n          options={this.options}\n        />\n      </span>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nimport { CalcType } from './CalcType'\n\nimport Select from 'react-select'\n\nexport default class CalcSetting extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.options = []\n    Object.keys(CalcType).map(key => this.options.push(CalcType[key]))\n  }\n\n  handleChange = selectedOption => {\n    this.props.setCalcType(selectedOption.value)\n  }\n\n  render() {\n    const selectedOption = CalcType[this.props.calcType]\n\n    return (\n      <span style={{width: 150}}>\n        <Select \n            value={selectedOption}\n            onChange={this.handleChange}\n            options={this.options}\n        />\n      </span>\n    )\n  }\n}\n","export const WorkersOptions = {\n    \"1\": { value: 1, label: \"1\"},\n    \"2\": { value: 2, label: \"2\"},\n    \"4\": { value: 4, label: \"4\"},\n    \"6\": { value: 6, label: \"6\"},\n    \"8\": { value: 8, label: \"8\"},\n    \"12\": { value: 12, label: \"12\"},\n    \"16\": { value: 16, label: \"16\"},\n    \"24\": { value: 24, label: \"24\"},\n    \"32\": { value: 32, label: \"32\"},\n}\n\n","import React, { Component } from 'react'\n\nimport { WorkersOptions } from './WorkersOptions'\n\nimport Select from 'react-select'\n\nexport default class WorkersSetting extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.options = []\n    Object.keys(WorkersOptions).map(key => this.options.push(WorkersOptions[key]))\n  }\n\n  handleChange = selectedOption => {\n    this.props.setWorkers(selectedOption.value)\n  }\n\n  customStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      textAlign: \"right\",\n    }),\n    control: (provided) => ({\n      ...provided,\n    }),\n    singleValue: (provided, state) => ({\n      ...provided,\n    }),\n  }\n\n  render() {\n    const selectedOption = WorkersOptions[this.props.workers.toString()]\n\n    return (\n      <span style={{width: 150}}>\n        <Select\n          styles={this.customStyles}\n          value={selectedOption}\n          onChange={this.handleChange}\n          options={this.options}\n        />\n      </span>\n    )\n  }\n}\n","export const SimsOptions = {\n    \"100\": { value: 100, label: \"100\"},\n    \"500\": { value: 500, label: \"500\"},\n    \"1000\": { value: 1000, label: \"1,000\"},\n    \"5000\": { value: 5000, label: \"5,000\"},\n    \"10000\": { value: 10000, label: \"10,000\"},\n    \"50000\": { value: 50000, label: \"50,000\"},\n    \"100000\": { value: 100000, label: \"100,000\"},\n    \"500000\": { value: 500000, label: \"500,000\"},\n    \"1000000\": { value: 1000000, label: \"1,000,000\"},\n    \"5000000\": { value: 5000000, label: \"5,000,000\"},\n    \"10000000\": { value: 10000000, label: \"10,000,000\"},\n    \"50000000\": { value: 50000000, label: \"50,000,000\"},\n    \"100000000\": { value: 100000000, label: \"100,000,000\"},\n}\n\n","import React, { Component } from 'react'\n\nimport { SimsOptions } from './SimsOptions'\n\nimport Select from 'react-select'\n\nexport default class SimsSetting extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.options = []\n    Object.keys(SimsOptions).map(key => this.options.push(SimsOptions[key]))\n  }\n\n  handleChange = selectedOption => {\n    this.props.setSims(selectedOption.value)\n  }\n\n  customStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      textAlign: \"right\",\n    }),\n    control: (provided) => ({\n      ...provided,\n    }),\n    singleValue: (provided, state) => ({\n      ...provided,\n    }),\n  }\n\n  render() {\n    const selectedOption = SimsOptions[this.props.nSims.toString()]\n\n    return (\n      <span style={{width: 150}}>\n        <Select\n          styles={this.customStyles}\n          value={selectedOption}\n          onChange={this.handleChange}\n          options={this.options}\n        />\n      </span>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport css from './SettingsButtons.module.css'\n\nexport default class SettingsButtons extends Component {\n\n  render() {\n    return <div>\n    <a \n      href=\"?reset=true\"\n      title=\"Reset application data\"\n      rel=\"noopener noreferrer\"\n    >\n      <button className={css.button}><FontAwesomeIcon icon=\"trash-restore\"/></button>\n    </a>\n    </div>\n  }\n\n}\n","import React, { Component } from 'react'\nimport ReactSwitch from 'react-switch'\n\nimport css from './CheckboxGroup.module.css'\n\nexport default class CheckboxGroup extends Component {\n\n  catsChartChange(checked) {\n    this.props.setCatsChart(checked)\n  }\n\n  catsTableChange(checked) {\n    this.props.setCatsTable(checked)\n  }\n\n  playersChartChange(checked) {\n    this.props.setPlayersChart(checked)\n  }\n\n  playersTableChange(checked) {\n    this.props.setPlayersTable(checked)\n  }\n\n  combosTableChange(checked) {\n    this.props.setCombosTable(checked)\n  }\n\n  denseKeyboardChange(checked) {\n    this.props.setDenseKeyboard(checked)\n  }\n\n  playersButtonsChange(checked) {\n    this.props.setPlayersButtons(checked)\n  }\n  \n  devModeChange(checked) {\n    this.props.setDevMode(checked)\n  }\n\n  latencyChange(checked) {\n    this.props.setLatency(checked)\n  }\n\n  render() {\n    const props = this.props\n    const switchHeight = 20\n    const switchWidth = 40\n\n    return (\n      <table>\n        <tbody>\n        <tr>\n          <td className={css.right}>\n            Players Chart:\n          </td>\n          <td>\n            <ReactSwitch className={css.switch} onChange={this.playersChartChange.bind(this)} height={switchHeight} width={switchWidth} checked={props.playersChart}/>\n          </td>\n        </tr>\n        <tr>\n          <td className={css.right}>\n            Players Table:\n          </td>\n          <td>\n            <ReactSwitch className={css.switch} onChange={this.playersTableChange.bind(this)} height={switchHeight} width={switchWidth} checked={props.playersTable}/>\n          </td>\n        </tr>\n        <tr>\n          <td className={css.right}>\n            Categories Chart:\n          </td>\n          <td>\n            <ReactSwitch className={css.switch} onChange={this.catsChartChange.bind(this)} height={switchHeight} width={switchWidth} checked={props.catsChart}/>\n          </td>\n        </tr>\n        <tr>\n          <td className={css.right}>\n            Categories Table:\n          </td>\n          <td>\n            <ReactSwitch className={css.switch} onChange={this.catsTableChange.bind(this)} height={switchHeight} width={switchWidth} checked={props.catsTable}/>\n          </td>\n        </tr>\n        <tr>\n          <td className={css.right}>\n            Combos Table:\n          </td>\n          <td>\n            <ReactSwitch className={css.switch} onChange={this.combosTableChange.bind(this)} height={switchHeight} width={switchWidth} checked={props.combosTable}/>\n          </td>\n        </tr>\n        <tr>\n          <td className={css.right}>\n            Dense Keyboard:\n          </td>\n          <td>\n            <ReactSwitch className={css.switch} onChange={this.denseKeyboardChange.bind(this)} height={switchHeight} width={switchWidth} checked={props.denseKeyboard}/>\n          </td>\n        </tr>\n        <tr>\n          <td className={css.right}>\n            Players Buttons:\n          </td>\n          <td>\n            <ReactSwitch className={css.switch} onChange={this.playersButtonsChange.bind(this)} height={switchHeight} width={switchWidth} checked={props.playersButtons}/>\n          </td>\n        </tr>\n        <tr>\n          <td className={css.right}>\n            Dev Mode:\n          </td>\n          <td>\n            <ReactSwitch className={css.switch} onChange={this.devModeChange.bind(this)} height={switchHeight} width={switchWidth} checked={props.devMode}/>\n          </td>\n        </tr>\n        <tr>\n          <td className={css.right}>\n            Show Latency:\n          </td>\n          <td>\n            <ReactSwitch className={css.switch} onChange={this.latencyChange.bind(this)} height={switchHeight} width={switchWidth} checked={props.latency}/>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    )\n  }\n}\n","export default function getBrowserName() {\n    const names = [\"Edge\", \"Firefox\", \"Safari\", \"Chrome\", \"Opera\"]\n    const ua = navigator.userAgent\n\n    for(let n = names.length - 1; n >= 0; n--) {\n        const name = names[n]\n        const i = ua.indexOf(name)\n        if(i >= 0) {\n            let j = i + name.length\n            let k = j\n            if(ua[j] === '/') {\n                j++\n                k = ua.indexOf(' ', j)\n                if(k < 0) {\n                    k = ua.length\n                }\n            }\n            return name + \" \" + ua.substring(j, k)\n        }\n    }\n\n    return \"Unknown\"\n}\n","import getBrowserName from './getBrowserName'\n\nfunction hasAsync() {\n    try {\n        // eslint-disable-next-line no-new-func\n        new Function('async () => {}')();\n    } catch (error) {\n        return false\n    }\n\n    return true\n}\n\nexport default function getBrowserFeatures() {\n    const bf = {\n        name: getBrowserName(),\n        language: navigator.language,\n        platform: navigator.platform,\n        hasAsync: hasAsync(),\n        abortController: !!window.AbortController,\n        webWorker: !!window.Worker,\n        webAssembly: typeof WebAssembly === \"object\",\n    }\n\n    bf.isOutdatedBrowser = !(bf.hasAsync &&\n        bf.abortController &&\n        bf.webWorker &&\n        bf.webAssembly)\n\n    return bf\n}\n","import React, { Component } from 'react'\n\nimport isMobileDevice from '../../utils/isMobileDevice'\nimport getBrowserFeatures from '../../utils/getBrowserFeatures'\nimport Category from \"./Category\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport '../Table/Table.css'\n\nexport default class BrowserFeatures extends Component {\n    isMobileDevice\n    browserFeatures\n\n    constructor(props) {\n        super(props)\n        this.isMobileDevice = isMobileDevice()\n        this.browserFeatures = getBrowserFeatures()\n    }\n\n    render() {\n        return (<div>\n            {this.browserFeatures.isOutdatedBrowser ? \n            <div>\n                <Category style={{height: 36}} cat=\"error\">\n                    <FontAwesomeIcon color=\"red\" icon=\"exclamation-triangle\"/>\n                    &nbsp;\n                    Missing Critical Features\n                    &nbsp;\n                    <FontAwesomeIcon color=\"red\" icon=\"exclamation-triangle\"/>\n                    <br/>\n                    Please Update Your Web Browser\n                </Category>\n                <br/>\n                <br/>\n            </div> : null}\n            <table className=\"minimalistBlack\">\n                <thead>\n                    <tr>\n                        <th className=\"center\">\n                            Feature\n                        </th>\n                        <th className=\"center\">\n                            Value\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td className=\"right\">\n                            name:\n                        </td>\n                        <td className=\"center\">\n                            {this.browserFeatures.name}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"right\">\n                            language:\n                        </td>\n                        <td className=\"center\">\n                            {this.browserFeatures.language}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"right\">\n                            platform:\n                        </td>\n                        <td className=\"center\">\n                            {this.browserFeatures.platform}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"right\">\n                            mobile:\n                        </td>\n                        <td className=\"center\">\n                            {this.isMobileDevice?\"Yes\":\"No\"}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"right\">\n                            async/await:\n                        </td>\n                        <td className=\"center\">\n                            {this.browserFeatures.hasAsync?<FontAwesomeIcon color=\"green\" icon=\"check\"/>:<FontAwesomeIcon color=\"red\" icon=\"exclamation-triangle\"/>}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"right\">\n                            abort controller:\n                        </td>\n                        <td className=\"center\">\n                            {this.browserFeatures.abortController?<FontAwesomeIcon color=\"green\" icon=\"check\"/>:<FontAwesomeIcon color=\"red\" icon=\"exclamation-triangle\"/>}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"right\">\n                            web worker:\n                        </td>\n                        <td className=\"center\">\n                            {this.browserFeatures.webWorker?<FontAwesomeIcon color=\"green\" icon=\"check\"/>:<FontAwesomeIcon color=\"red\" icon=\"exclamation-triangle\"/>}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"right\">\n                            web assembly:\n                        </td>\n                        <td className=\"center\">\n                            {this.browserFeatures.webAssembly?<FontAwesomeIcon color=\"green\" icon=\"check\"/>:<FontAwesomeIcon color=\"red\" icon=\"exclamation-triangle\"/>}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n        </div>)\n    }\n}\n","import React, { Component } from 'react'\n\nimport ApiSetting from './components/ApiSetting'\nimport ServerUrlSetting from './components/ServerUrlSetting'\nimport JwtSecretSetting from './components/JwtSecretSetting'\nimport ThreadsSetting from './components/ThreadsSetting'\nimport CalcSetting from './components/CalcSetting'\nimport WorkersSetting from './components/WorkersSetting'\nimport SimsSetting from './components/SimsSetting'\nimport SettingsButtons from './components/SettingsButtons'\nimport CheckboxGroup from './components/CheckboxGroup'\n\nimport BrowserFeatures from '../components/BrowserFeatures'\n\nexport default class SettingsPage extends Component {\n\n  render() {\n    const props = this.props\n\n    return (\n    <div>\n    <h3>\n      Settings\n    </h3>\n    <h4>\n    <table>\n      <tbody>\n        <tr>\n          <td style={{textAlign: \"right\"}}>\n            Poser Engine:&nbsp;\n          </td>\n          <td>\n            <ApiSetting {...props}/>\n          </td>\n        </tr>\n        {this.props.apiType === \"rest\"?\n        <>\n        <tr>\n          <td style={{textAlign: \"right\"}}>\n            Server URL:&nbsp;\n          </td>\n          <td>\n            <ServerUrlSetting {...props}/>\n         </td>\n        </tr>\n        <tr>\n          <td style={{textAlign: \"right\"}}>\n            JWT Secret:&nbsp;\n          </td>\n          <td>\n            <JwtSecretSetting {...props}/>\n         </td>\n        </tr>\n        <tr>\n          <td style={{textAlign: \"right\"}}>\n            Server Threads:&nbsp;\n          </td>\n          <td>\n            <ThreadsSetting {...props}/>\n          </td>\n        </tr>\n        </>:null}\n        <tr>\n          <td style={{textAlign: \"right\"}}>\n            Calculator:&nbsp;\n          </td>\n          <td>\n            <CalcSetting {...props}/>\n          </td>\n        </tr>\n        <tr>\n          <td style={{textAlign: \"right\"}}>\n            Simulations:&nbsp;\n          </td>\n          <td>\n            <SimsSetting {...props}/>\n          </td>\n        </tr>\n        <tr>\n          <td style={{textAlign: \"right\"}}>\n            Workers:&nbsp;\n          </td>\n          <td>\n            <WorkersSetting {...props}/>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    </h4>\n    <h3>\n      Options\n    </h3>\n    <h4>\n      <CheckboxGroup {...props}/>\n    </h4>\n    <h3>\n      Browser Features\n    </h3>\n    <h4>\n      <BrowserFeatures/>\n    </h4>\n    <h3>\n      Clear Saved Data\n    </h3>\n    <h4>\n      <SettingsButtons/>\n    </h4>\n    </div>\n  )\n  }\n}\n","import React from 'react'\n\nconst CreditsPage = (props) => (\n  <div>\n    <h2>Links</h2>\n    <h3><a href=\"https://poserjs.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">PoserJS Online</a></h3>\n    <h3><a href=\"https://github.com/poserjs/poserjs.github.io/wiki\" target=\"_blank\" rel=\"noopener noreferrer\">PoserJS Wiki</a></h3>\n    <h3><a href=\"https://github.com/poserjs/poserjs.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">PoserJS Github</a></h3>\n    <h2>Credits</h2>\n    <h3><a href=\"https://facebook.github.io/create-react-app/\" target=\"_blank\" rel=\"noopener noreferrer\">Create React App</a></h3>\n    <h3><a href=\"https://fontawesome.com\" target=\"_blank\" rel=\"noopener noreferrer\">Font Awesome</a></h3>\n  </div>\n)\n\nexport default CreditsPage\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactJson from 'react-json-view'\n\nimport './TimeMachinePage.css'\n\n// App component - represents the whole app\nexport default class TimeMachinePage extends Component {\n  render() {\n\n    const { state, action, repo, showRepo } = this.props;\n\n    return (\n      <div>\n        <header>\n          <h2>State Inspector</h2>\n        </header>\n        <div className=\"TimeMachinePage-body\">\n        {showRepo\n        ?[\n          <h4 key={1}>Repository</h4>,\n          <ReactJson key={2} name={false} src={repo.toJS()} />]\n        :[\n        <h4 key={1}>Action</h4>,\n        <ReactJson key={2} name={false} src={action} />,\n        <h4 key={3}>State</h4>,\n        <ReactJson key={4} name={false} src={state.toJS()} />]\n        }\n        </div>\n      </div>\n    )\n  }\n}\n\nTimeMachinePage.propTypes = {\n  state: PropTypes.object,\n  prevState: PropTypes.object,\n  action: PropTypes.object,\n}\n","import { connect } from 'react-redux'\nimport TimeMachinePage from './TimeMachinePage'\n\nconst mapStateToProps = (repo, ownProps) => {\n  const e = ownProps.engine;\n  const branch = e.currentBranchState(repo);\n  const currentIndex = branch.get(\"currentIndex\");\n  const states = branch.get(\"states\");\n  const state = currentIndex < 0 ? undefined : states.get(currentIndex);\n  const actions = branch.get(\"actions\");\n  const action = currentIndex < 0 ? undefined : actions.get(currentIndex);\n  const prevState = currentIndex <= 0 ? undefined : states.get(currentIndex - 1);\n  const showRepo = repo.getIn(['options', 'showRepo']);\n  return {\n    prevState: e.printableState(prevState),\n    state: e.printableState(state),\n    action,\n    repo,\n    showRepo,\n  };\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n})\n\nconst TimeMachineContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TimeMachinePage)\n\nexport default TimeMachineContainer\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport './TimeMachineControls.css'\n\nexport default class TimeMachineControls extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentBranch: props.currentBranch,\n      live: props.live,\n      advanced: false,\n      showRepo: props.showRepo,\n      saveAs: \"\",\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      currentBranch: nextProps.currentBranch,\n      live: nextProps.live,\n      showRepo: nextProps.showRepo,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault()\n  }\n\n  onChange(e) {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  onChangeBranch(e) {\n    const { switchBranch } = this.props\n    const currentBranch = e.target.value\n    this.setState({currentBranch: currentBranch})\n    switchBranch(currentBranch)\n  }\n\n  onSaveBranch(e) {\n    const { saveBranch } = this.props\n    if(this.state.saveAs) {\n      saveBranch(this.state.saveAs)\n    }\n    this.setState({\"saveAs\": \"\"})\n  }\n\n  onReset(e) {\n    const { currentBranch, resetBranch } = this.props\n    resetBranch(currentBranch)\n  }\n\n  onRemove(e) {\n    const { currentBranch, removeBranch } = this.props\n    removeBranch(currentBranch)\n  }\n\n  onGoFastForward(e) {\n    const { goForward } = this.props\n    goForward(10)\n  }\n\n  onGoForward(e) {\n    const { goForward } = this.props\n    goForward(1)\n  }\n\n  onGoBack(e) {\n    const { goBack } = this.props\n    goBack(1)\n  }\n\n  onGoFastBack(e) {\n    const { goBack } = this.props\n    goBack(10)\n  }\n\n  onGoLive(e) {\n    const { goLive } = this.props\n    goLive()\n  }\n\n  toggleLive(e) {\n    const { goBack, goLive } = this.props\n    const live = !this.state.live\n    this.setState({live: live})\n    if(live) {\n      goLive()\n    } else {\n      goBack(0)\n    }\n  }\n\n  toggleAdvanced(e) {\n    const advanced = !this.state.advanced\n    this.setState({advanced: advanced})\n  }\n\n  toggleRepo(e) {\n    const { doShowRepo } = this.props\n    const showRepo = !this.state.showRepo\n    this.setState({showRepo: showRepo})\n    doShowRepo(showRepo)\n  }\n\n  onSliderChange(value) {\n    const { goForward, goBack, currentIndex } = this.props\n    const index = value - 1;\n    if(index > currentIndex) {\n      goForward(index-currentIndex);\n    } else if(index < currentIndex) {\n      goBack(currentIndex-index);\n    }\n  }\n\n  render() {\n    const { branches, currentIndex, maxIndex } = this.props\n    let input\n\n    return (\n      <div>\n      <form onSubmit={this.onSubmit.bind(this)}>\n        <button onClick={this.toggleLive.bind(this)} title={this.state.live?\"Time Machine On\":\"Time Machine Off\"}>\n        {this.state.live \n        ? <FontAwesomeIcon icon=\"history\"/>\n        : <FontAwesomeIcon icon=\"play\"/>}\n        </button>\n        <button onClick={this.toggleAdvanced.bind(this)} title={this.state.advanced ? \"Advanced Mode Off\" : \"Advanced Mode On\"}>\n          {this.state.advanced ? <b>&#x2630;</b> : <span>&#x2630;</span>}\n        </button>\n        &nbsp;\n        {this.state.advanced ? [\n          <button key={1} onClick={this.toggleRepo.bind(this)} title={this.state.showRepo?\"Show State\":\"Show Repo\"}>\n          {this.state.showRepo \n          ? <FontAwesomeIcon key={2} icon=\"genderless\"/>\n          : <FontAwesomeIcon key={2} icon=\"code-branch\"/>}\n          </button>,         \n          <select key={3} \n            name=\"currentBranch\"\n            value={this.state.currentBranch}\n            onChange={this.onChangeBranch.bind(this)}\n            title=\"Change Branch\"\n          >\n            {branches.map((branch, id) =>\n              (<option key={id} value={branch}>{branch}</option>)\n            ).toIndexedSeq()}\n        </select>] : null }\n        <button onClick={this.onGoBack.bind(this)} title=\"Go Back\">\n          &lt;\n        </button>\n        &nbsp;{currentIndex+1} / {maxIndex+1}&nbsp;\n        <button onClick={this.onGoForward.bind(this)} title=\"Go Forward\">\n          &gt;\n        </button>\n        {this.state.advanced ?\n        <span>\n        <input\n          name=\"saveAs\"\n          size=\"8\"\n          value={this.state.saveAs}\n          onChange={this.onChange.bind(this)}/>\n        <button onClick={this.onSaveBranch.bind(this)} title=\"Save Branch\"\n          disabled={!this.state.saveAs}>\n          Save\n        </button>\n        <button onClick={this.onReset.bind(this)} title=\"Reset Branch\">\n          Reset\n        </button>\n        <button onClick={this.onRemove.bind(this)} title=\"Remove Branch\">\n          Remove\n        </button>\n        </span> : null}\n      </form>\n      {this.state.live ? null : <div className=\"TimeMachineControls-slider\"><Slider\n        min={1}\n        max={maxIndex+1}\n        value={currentIndex+1}\n        step={1}\n        onChange={this.onSliderChange.bind(this)}\n      />\n      </div>}\n      </div>\n    )\n  }\n}\n\nTimeMachineControls.propTypes = {\n  currentBranch: PropTypes.string.isRequired,\n  currentIndex: PropTypes.number.isRequired,\n  maxIndex: PropTypes.number.isRequired,\n  live: PropTypes.bool.isRequired,\n  branches: PropTypes.object.isRequired,\n  goBack: PropTypes.func.isRequired,\n  goForward: PropTypes.func.isRequired,\n  goLive: PropTypes.func.isRequired,\n  switchBranch: PropTypes.func.isRequired,\n  saveBranch: PropTypes.func.isRequired,\n  resetBranch: PropTypes.func.isRequired,\n  removeBranch: PropTypes.func.isRequired,\n}\n","import { connect } from 'react-redux'\nimport TimeMachineControls from './TimeMachineControls'\n\nconst mapStateToProps = (repo, ownProps) => {\n  const currentBranch = repo.get(\"currentBranch\")\n  const branches = repo.get(\"branches\")\n  const branch = branches.get(currentBranch);\n  const live = branch.get(\"live\")\n  const showRepo = repo.getIn([\"options\", \"showRepo\"]);\n  const currentIndex = branch.get(\"currentIndex\")\n  const states = branch.get(\"states\")\n  const maxIndex = states.size-1\n  return {\n    branches: branches.keySeq(),\n    currentBranch,\n    currentIndex,\n    maxIndex,\n    live,\n    showRepo,\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const e = ownProps.engine\n  const af = e.actionFactory()\n  \n  return {\n    goForward: (steps) => {\n      const action = af.goForward(steps)\n      dispatch(action)\n    },\n    goBack: (steps) => {\n      const action = af.goBack(steps)\n      dispatch(action)\n    },\n    goLive: () => {\n      const action = af.goLive()\n      dispatch(action)\n    },\n    doShowRepo: (showRepo) => {\n      const action = af.setOption(\"showRepo\", showRepo)\n      dispatch(action)\n    },\n    switchBranch: (name) => {\n      const action = af.switchBranch(name)\n      dispatch(action)\n    },\n    saveBranch: (name) => {\n      const action = af.saveBranch(name)\n      dispatch(action)\n    },\n    resetBranch: (name) => {\n      const action = af.resetBranch(name)\n      dispatch(action)\n    },\n    removeBranch: (name) => {\n      if(name === \"master\") {\n        return\n      }\n      const action1 = af.switchBranch(\"master\")\n      dispatch(action1)\n      const action2 = af.removeBranch(name)\n      dispatch(action2)\n    }\n  }\n}\n\nconst TimeMachineControlsContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TimeMachineControls)\n\nexport default TimeMachineControlsContainer\n","import React, {Component} from 'react'\n\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs'\n\nimport HomeContainer from '../Home/HomeContainer'\nimport HomePage from '../Home/HomePage'\nimport WarContainer from '../War/WarContainer'\nimport WarPage from '../War/WarPage'\nimport SettingsContainer from '../Settings/SettingsContainer'\nimport SettingsPage from '../Settings/SettingsPage'\nimport CreditsPage from '../Credits/CreditsPage'\n\nimport TimeMachineContainer from '../TimeMachine/TimeMachineContainer'\nimport TimeMachineControlsContainer from '../TimeMachineControls/TimeMachineControlsContainer';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport 'react-tabs/style/react-tabs.css'\n\nimport './Menu.css'\n\nconst HomeTab = HomeContainer(HomePage)\nconst WarTab = WarContainer(WarPage)\nconst SettingsTab = SettingsContainer(SettingsPage)\n\nexport default class Menu extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedTabIndex: this.props.state.get(\"selectedTabIndex\"),\n    }\n  }\n\n  updateTabIndex(index) {\n    this.setState({selectedTabIndex: index})\n    this.props.updateTabIndex(index)\n  }\n\n  render() {\n    const devMode = this.props.state.getIn([\"home\", \"settings\", \"devMode\"])\n  return <Tabs \n    selectedTabClassName=\"react-tabs__tab--selected Menu-selected\"\n    selectedIndex={this.state.selectedTabIndex}\n    onSelect={this.updateTabIndex.bind(this)}\n    >\n    <TabList className=\"Menu\">\n      <Tab title=\"Hands\"><FontAwesomeIcon icon=\"calculator\"/></Tab>\n      <Tab title=\"Zone\"><FontAwesomeIcon icon=\"dice-d20\"/></Tab>\n      <Tab title=\"War\"><FontAwesomeIcon icon=\"gamepad\"/></Tab>\n      {/* <Tab title=\"Sim\"><FontAwesomeIcon icon=\"tachometer-alt\"/></Tab> */}\n      <Tab title=\"Settings\"><FontAwesomeIcon icon=\"cog\"/></Tab>\n      <Tab title=\"Links & Credits\"><FontAwesomeIcon icon=\"info\"/></Tab>\n      {devMode?<Tab title=\"State Inspector\"><FontAwesomeIcon icon=\"bug\"/></Tab>:null}\n    </TabList>\n    <hr/>\n    <TabPanel>\n      <HomeTab/>\n    </TabPanel>\n    <TabPanel>\n      <HomeTab zone={true}/>\n    </TabPanel>\n    <TabPanel>\n      <WarTab/>\n    </TabPanel>\n    <TabPanel>\n      <SettingsTab/>\n    </TabPanel>\n    <TabPanel>\n      <CreditsPage/>\n    </TabPanel>\n    {devMode?<TabPanel>\n      <TimeMachineControlsContainer engine={this.props.engine}/>\n      <TimeMachineContainer engine={this.props.engine}/>\n    </TabPanel>:null}\n  </Tabs>\n  }\n}\n","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faWifi } from '@fortawesome/free-solid-svg-icons'\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons'\nimport { faHeartbeat } from '@fortawesome/free-solid-svg-icons'\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons'\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\nimport { faTerminal } from '@fortawesome/free-solid-svg-icons'\nimport { faChartLine } from '@fortawesome/free-solid-svg-icons'\nimport { faTachometerAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faInfo } from '@fortawesome/free-solid-svg-icons'\nimport { faMicrochip } from '@fortawesome/free-solid-svg-icons'\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport { faMinus } from '@fortawesome/free-solid-svg-icons'\nimport { faHandPaper } from '@fortawesome/free-solid-svg-icons'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { faBackspace } from '@fortawesome/free-solid-svg-icons'\nimport { faCalculator } from '@fortawesome/free-solid-svg-icons'\nimport { faPercent } from '@fortawesome/free-solid-svg-icons'\nimport { faSmile } from '@fortawesome/free-solid-svg-icons'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\nimport { faUserMinus } from '@fortawesome/free-solid-svg-icons'\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons'\nimport { faRandom } from '@fortawesome/free-solid-svg-icons'\nimport { faDiceD20 } from '@fortawesome/free-solid-svg-icons'\nimport { faGamepad } from '@fortawesome/free-solid-svg-icons'\n\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faToggleOn } from '@fortawesome/free-solid-svg-icons'\nimport { faToggleOff } from '@fortawesome/free-solid-svg-icons'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faFilter } from '@fortawesome/free-solid-svg-icons'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { faSearchMinus } from '@fortawesome/free-solid-svg-icons'\nimport { faSearchPlus } from '@fortawesome/free-solid-svg-icons'\nimport { faArrowsAltH } from '@fortawesome/free-solid-svg-icons'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\nimport { faStop } from '@fortawesome/free-solid-svg-icons'\nimport { faEllipsisH } from '@fortawesome/free-solid-svg-icons'\nimport { faRunning } from '@fortawesome/free-solid-svg-icons'\nimport { faTh } from '@fortawesome/free-solid-svg-icons'\nimport { faGripVertical } from '@fortawesome/free-solid-svg-icons'\nimport { faGripHorizontal } from '@fortawesome/free-solid-svg-icons'\nimport { faBug } from '@fortawesome/free-solid-svg-icons'\nimport { faHistory } from '@fortawesome/free-solid-svg-icons'\nimport { faCodeBranch } from '@fortawesome/free-solid-svg-icons'\nimport { faGenderless } from '@fortawesome/free-solid-svg-icons'\nimport { faTable } from '@fortawesome/free-solid-svg-icons'\nimport { faListUl } from '@fortawesome/free-solid-svg-icons'\nimport { faBookMedical } from '@fortawesome/free-solid-svg-icons'\nimport { faPalette } from '@fortawesome/free-solid-svg-icons'\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\nimport { faGolfBall } from '@fortawesome/free-solid-svg-icons'\nimport { faBowlingBall } from '@fortawesome/free-solid-svg-icons'\nimport { faTrashRestore } from '@fortawesome/free-solid-svg-icons'\nimport { faCoins } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faWifi)\nlibrary.add(faHeart)\nlibrary.add(farHeart)\nlibrary.add(faHeartbeat)\nlibrary.add(faExclamationTriangle)\nlibrary.add(faThumbsUp)\nlibrary.add(faHome)\nlibrary.add(faTerminal)\nlibrary.add(faChartLine)\nlibrary.add(faTachometerAlt)\nlibrary.add(faInfo)\nlibrary.add(faMicrochip)\nlibrary.add(faTrophy)\nlibrary.add(faPlus)\nlibrary.add(faMinus)\nlibrary.add(faHandPaper)\nlibrary.add(faCheck)\nlibrary.add(faBackspace)\nlibrary.add(faCalculator)\nlibrary.add(faPercent)\nlibrary.add(faSmile)\nlibrary.add(faUser)\nlibrary.add(faUserMinus)\nlibrary.add(faUserPlus)\nlibrary.add(faRandom)\nlibrary.add(faDiceD20)\nlibrary.add(faGamepad)\n\nlibrary.add(faSyncAlt)\nlibrary.add(faToggleOn)\nlibrary.add(faToggleOff)\nlibrary.add(faTrashAlt)\nlibrary.add(faFilter)\nlibrary.add(faSearch)\nlibrary.add(faSearchMinus)\nlibrary.add(faSearchPlus)\nlibrary.add(faArrowsAltH)\nlibrary.add(faPlay)\nlibrary.add(faStop)\nlibrary.add(faEllipsisH)\nlibrary.add(faRunning)\nlibrary.add(faTh)\nlibrary.add(faGripVertical)\nlibrary.add(faGripHorizontal)\nlibrary.add(faBug)\nlibrary.add(faHistory)\nlibrary.add(faCodeBranch)\nlibrary.add(faGenderless)\nlibrary.add(faTable)\nlibrary.add(faListUl)\nlibrary.add(faBookMedical)\nlibrary.add(faPalette)\nlibrary.add(faCog)\nlibrary.add(faGolfBall)\nlibrary.add(faBowlingBall)\nlibrary.add(faTrashRestore)\nlibrary.add(faCoins)\n","import { connect } from 'react-redux'\nimport { engine, dispatch } from '../../engine'\nimport AppPage from './AppPage'\nimport processZone from './components/processZone'\n\nconst e = engine\nconst af = e.actionFactory();\n\nfunction download(file, callback) {\n    fetch(file)\n    .then(resp => resp.text())\n    .then(text => JSON.parse(text))\n    .then(json => callback(json, null))\n    .catch(ex => callback(null, ex))\n}\n\ndownload(\"/json/zone.json\", (json, error) => {\n  if(json) {\n    dispatch(af.value(\"zoneActions\", json))\n    dispatch(af.value(\"zoneDistTables\", processZone(json)))\n  } else {\n    console.log(error)\n  }\n})\n\nconst mapStateToProps = (state, live, ownProps) => ({\n  state,\n  live,\n})\n\nconst mapRepoToProps = (repo, ownProps) => mapStateToProps(ownProps.engine.head(repo), ownProps.engine.live(repo), ownProps)\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    updateTabIndex: (index) => dispatch(af.value(\"selectedTabIndex\", index)),\n})\n\nconst AppContainer = connect(\n  mapRepoToProps,\n  mapDispatchToProps\n)(AppPage)\n\nexport default AppContainer\n","import React, { Component } from 'react'\n\nimport Banner from './components/Banner'\nimport Menu from '../Menu/Menu'\n\nimport './components/Icons'\nimport './AppPage.css'\n\nclass AppPage extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <Banner/>\n        </div>\n        <Menu {...this.props}/>\n      </div>\n    )\n  }\n}\n\nexport default AppPage\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport { store, engine } from './engine'\nimport './index.css';\nimport AppContainer from './modules/App/AppContainer';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer engine={engine}/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"EvalPlayersChart_chart__Gs8Wq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"Card_square__eAkJW\",\"htmlSquare\":\"Card_htmlSquare__2vwOq\",\"htmlSquareMobile\":\"Card_htmlSquareMobile__RrZb0\",\"ball\":\"Card_ball__5lM5L\",\"htmlBall\":\"Card_htmlBall__31wpT\"};"],"sourceRoot":""}